<?xml version="1.0" encoding="utf-8"?>
<search>
  
  
  
  <entry>
    <title>Lsky Pro图床</title>
    <link href="/2023/11/30/Lsky-por%20/"/>
    <url>/2023/11/30/Lsky-por%20/</url>
    
    <content type="html"><![CDATA[<meta name="referrer" content="no-referrer"/><h1 id="Lsky-Pro图床"><a href="#Lsky-Pro图床" class="headerlink" title="Lsky Pro图床"></a>Lsky Pro图床</h1><p>系统：centos 8 stream  ip：192.168.48.11</p><h2 id="介绍"><a href="#介绍" class="headerlink" title="介绍"></a>介绍</h2><ul><li>支持<code>本地</code>等多种第三方云储存 <code>AWS S3</code>、<code>阿里云 OSS</code>、<code>腾讯云 COS</code>、<code>七牛云</code>、<code>又拍云</code>、<code>SFTP</code>、<code>FTP</code>、<code>WebDav</code>、<code>Minio</code></li><li>多种数据库驱动支持，<code>MySQL 5.7+</code>、<code>PostgreSQL 9.6+</code>、<code>SQLite 3.8.8+</code>、<code>SQL Server 2017+</code></li><li>支持配置使用多种缓存驱动，<code>Memcached</code>、<code>Redis</code>、<code>DynamoDB</code>、等其他关系型数据库，默认以文件的方式缓存</li><li>多图上传、拖拽上传、粘贴上传、动态设置策略上传、复制、一键复制链接</li><li>强大的图片管理功能，瀑布流展示，支持鼠标右键、单选多选、重命名等操作</li><li>自由度极高的角色组配置，可以为每个组配置多个储存策略，同时储存策略可以配置多个角色组</li><li>可针对角色组设置上传文件、文件夹路径命名规则、上传频率限制、图片审核等功能</li><li>支持图片水印、文字水印、水印平铺、设置水印位置、X&#x2F;y 轴偏移量设置、旋转角度等</li><li>支持通过接口上传、管理图片、管理相册</li><li>支持在线增量更新、跨版本更新</li><li>图片广场</li></ul><h2 id="要求"><a href="#要求" class="headerlink" title="要求"></a>要求</h2><ul><li>PHP &gt;&#x3D; 8.0.2</li><li>BCMath PHP 扩展</li><li>Ctype PHP 扩展</li><li>DOM PHP 拓展</li><li>Fileinfo PHP 扩展</li><li>JSON PHP 扩展</li><li>Mbstring PHP 扩展</li><li>OpenSSL PHP 扩展</li><li>PDO PHP 扩展</li><li>Tokenizer PHP 扩展</li><li>XML PHP 扩展</li><li>Imagick 拓展</li><li>exec、shell_exec 函数</li><li>readlink、symlink 函数</li><li>putenv、getenv 函数</li><li>chmod、chown、fileperms 函数</li></ul><h2 id="安装Lsky-Pro"><a href="#安装Lsky-Pro" class="headerlink" title="安装Lsky Pro"></a>安装Lsky Pro</h2><h3 id="下载Lsky-Pro项目文件"><a href="#下载Lsky-Pro项目文件" class="headerlink" title="下载Lsky Pro项目文件"></a>下载Lsky Pro项目文件</h3><p>项目地址:<a href="https://github.com/lsky-org/lsky-pro/releases">Releases · lsky-org&#x2F;lsky-pro (github.com)</a></p><figure class="highlight awk"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs awk">wget https:<span class="hljs-regexp">//gi</span>thub.com<span class="hljs-regexp">/lsky-org/</span>lsky-pro<span class="hljs-regexp">/releases/</span>download<span class="hljs-regexp">/2.1/</span>lsky-pro-<span class="hljs-number">2.1</span>.zip<br>unzip lsky-pro-<span class="hljs-number">2.1</span>.zip -d <span class="hljs-regexp">/var/</span>www<span class="hljs-regexp">/html/</span>lsky<br>chmod <span class="hljs-number">755</span> -R <span class="hljs-regexp">/var/</span>www<span class="hljs-regexp">/html/</span>lsky<br>chown -R nginx:nginx <span class="hljs-regexp">/var/</span>www<span class="hljs-regexp">/html/</span>lsky<br></code></pre></td></tr></table></figure><h3 id="安装nginx"><a href="#安装nginx" class="headerlink" title="安装nginx"></a>安装nginx</h3><figure class="highlight awk"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br></pre></td><td class="code"><pre><code class="hljs awk">sudo dnf upgrade --refresh -y<br>sudo dnf install \<br>   https:<span class="hljs-regexp">//</span>dl.fedoraproject.org<span class="hljs-regexp">/pub/</span>epel<span class="hljs-regexp">/8/</span>Everything<span class="hljs-regexp">/x86_64/</span>Packages<span class="hljs-regexp">/e/</span>epel-release-<span class="hljs-number">8</span>-<span class="hljs-number">19</span>.el8.noarch.rpm \<br>   https:<span class="hljs-regexp">//</span>dl.fedoraproject.org<span class="hljs-regexp">/pub/</span>epel<span class="hljs-regexp">/8/</span>Everything<span class="hljs-regexp">/x86_64/</span>Packages<span class="hljs-regexp">/e/</span>epel-<span class="hljs-keyword">next</span>-release-<span class="hljs-number">8</span>-<span class="hljs-number">19</span>.el8.noarch.rpm \<br>   http:<span class="hljs-regexp">//</span>rpms.remirepo.net<span class="hljs-regexp">/enterprise/</span>remi-release-<span class="hljs-number">8.8</span>.rpm \<br>   dnf-utils -y<br>dnf module list | grep php<br><br><span class="hljs-comment"># 删除 PHP</span><br>sudo dnf -y remove php php-fpm<br>   <br><span class="hljs-comment"># 删除相关扩展包</span><br>sudo dnf -y remove php*<br>   <br><span class="hljs-comment"># 重置 PHP 模块列表</span><br>sudo dnf -y module reset php<br><br>启用（安装）PHP <span class="hljs-number">8.0</span><br>sudo dnf -y module enable php:remi-<span class="hljs-number">8.0</span><br><br>sudo dnf -y install php php-fpm<br><br>sudo dnf install php-cli php-fpm php-curl php-mysqlnd php-gd php-opcache php-zip php-intl php-common php-bcmath php-imagick php-xmlrpc php-json php-readline php-memcached php-redis php-mbstring php-apcu php-xml php-dom php-redis php-memcached php-memcache php-devel php-ctype php-fileinfo  php-openssl php-pdo php-tokenizer -y<br><br>sed -i <span class="hljs-string">&#x27;s/user = apache/user = nginx/; s/group = apache/group = nginx/&#x27;</span> <span class="hljs-regexp">/etc/</span>php-fpm.d/www.conf<br><br>dnf install -y http:<span class="hljs-regexp">//</span>nginx.org<span class="hljs-regexp">/packages/</span>rhel<span class="hljs-regexp">/8/</span>x86_64<span class="hljs-regexp">/RPMS/</span>nginx-<span class="hljs-number">1.24</span>.<span class="hljs-number">0</span>-<span class="hljs-number">1</span>.el8.ngx.x86_64.rpm<br>systemctlenable --now nginx<br>sudo systemctl restart php-fpm.service<br><br></code></pre></td></tr></table></figure><h3 id="安装mysql"><a href="#安装mysql" class="headerlink" title="安装mysql"></a>安装mysql</h3><figure class="highlight pgsql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><code class="hljs pgsql">sudo dnf install mysql-<span class="hljs-keyword">server</span> mysql -y<br>systemctl <span class="hljs-keyword">enable</span> <span class="hljs-comment">--now mysqld</span><br><span class="hljs-meta">#mysql初始化</span><br>sudo mysql_secure_installation<br>根据自身需要设置<br>mysql -uroot -p<br></code></pre></td></tr></table></figure><h3 id="设置兰空页面"><a href="#设置兰空页面" class="headerlink" title="设置兰空页面"></a>设置兰空页面</h3><figure class="highlight awk"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><code class="hljs awk">[root@localhost ~]<span class="hljs-comment"># cat /etc/nginx/conf.d/default.conf</span><br>server &#123;<br>    listen       <span class="hljs-number">80</span>;<br>    server_name  localhost;<br>    root          <span class="hljs-regexp">/var/</span>www<span class="hljs-regexp">/html/</span>lsky<span class="hljs-regexp">/public/</span>;<br>    index        index.php;<br>    location / &#123;<br>      try_files <span class="hljs-variable">$uri</span> <span class="hljs-variable">$uri</span><span class="hljs-regexp">/ /i</span>ndex.php?<span class="hljs-variable">$query_string</span>;<br>    &#125;<br>    location ~ \.php$ &#123;<br>      root           <span class="hljs-regexp">/var/</span>www<span class="hljs-regexp">/html/</span>lsky<span class="hljs-regexp">/public/</span>;<br>      fastcgi_pass   unix:<span class="hljs-regexp">/run/</span>php-fpm/www.sock;<br>      fastcgi_index  index.php;<br>      fastcgi_param  SCRIPT_FILENAME <span class="hljs-variable">$document_root</span><span class="hljs-variable">$fastcgi_script_name</span>;<br>      include        fastcgi_params;<br>    &#125;<br>&#125;<br><br><span class="hljs-comment">#重启nginx</span><br>nginx -s reload<br><br><br></code></pre></td></tr></table></figure><p>访问页面192.168.48.11</p><p><img src="https://article.biliimg.com/bfs/article/f252fa2a442607f7c0a72a296180da3c697559838.png" alt="image-20231130195414702"></p><p><img src="https://article.biliimg.com/bfs/article/ec3b9a06b22f9deacddb3fceb05778b0697559838.png" alt="image-20231130195439402"></p><h2 id="利用postman获取token"><a href="#利用postman获取token" class="headerlink" title="利用postman获取token"></a>利用postman获取token</h2><p>官网：<a href="https://www.postman.com/">Postman API Platform</a></p><p>自己注册一个账号，并且下载桌面版的postman（如果你的项目部署在服务器，可以不用下载，直接从第二步开始）</p><p>软件下载：<a href="https://www.postman.com/downloads/">Download Postman | Get Started for Free</a></p><h3 id="下载软件并双击运行"><a href="#下载软件并双击运行" class="headerlink" title="下载软件并双击运行"></a>下载软件并双击运行</h3><p><img src="https://article.biliimg.com/bfs/article/f8d4389edc635a775e69c369ad478865697559838.png" alt="image-20231130201640225"></p><p><img src="https://article.biliimg.com/bfs/article/707470ea959759ce9a54e70791110601697559838.png" alt="image-20231130201704089"></p><h3 id="打开页面"><a href="#打开页面" class="headerlink" title="打开页面"></a>打开页面</h3><p><img src="https://article.biliimg.com/bfs/article/48b537bda93e7bd2db9d70c81e9b7484697559838.png" alt="image-20231130201727276"></p><p><img src="https://article.biliimg.com/bfs/article/aa5ce61cfc65af53f2d34b8019b42d6d697559838.png" alt="image-20231130202249851"></p><figure class="highlight smali"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs smali">6|0kKPF29VXPv2Kv6lEqu1chyxHjTpjiiEdwwkRE0T<br></code></pre></td></tr></table></figure><h2 id="实现typro自动上传"><a href="#实现typro自动上传" class="headerlink" title="实现typro自动上传"></a>实现typro自动上传</h2><p><a href="https://github.com/ygxbnet/lsky-upload/releases">Releases · ygxbnet&#x2F;lsky-upload (github.com)</a></p><h3 id="下载自动上传项目"><a href="#下载自动上传项目" class="headerlink" title="下载自动上传项目"></a>下载自动上传项目</h3><p><a href="https://github.com/ygxbnet/lsky-upload/releases/download/0.3.0/lsky-upload_0.3.0_windows_amd64.zip">https://github.com/ygxbnet/lsky-upload/releases/download/0.3.0/lsky-upload_0.3.0_windows_amd64.zip</a></p><p><img src="https://article.biliimg.com/bfs/article/194bdd231c2e0aa1ab3ac23d3d519aa7697559838.png" alt="image-20231130194623114"></p><p>打开配置文件可以看见一下信息，更换为前面的获取的token</p><p><img src="https://article.biliimg.com/bfs/article/02355ef13209fd8b702049245782e0d0697559838.png" alt="image-20231130203425977"></p><h3 id="验证能否自动上传"><a href="#验证能否自动上传" class="headerlink" title="验证能否自动上传"></a>验证能否自动上传</h3><p>打开typroa</p><p><img src="https://article.biliimg.com/bfs/article/9b3415ddd3d7b48f3cf0a7cc894f2829697559838.png" alt="image-20231130203326580"></p><p><img src="https://article.biliimg.com/bfs/article/239bccd024694ae65ff0861479daaa4d697559838.png" alt="image-20231130203516988"></p><p>再去看看后台图库</p><p><img src="https://article.biliimg.com/bfs/article/b83eced6894a1f8c291f23a5b6abddf0697559838.png" alt="image-20231130203549871"></p><p>至此项目成功</p><div class="tbsm" style="margin-top:54px;"><div class="tbsm-top"><span><svg t="1674654360507" class="icon" viewBox="0 0 1024 1024" version="1.1" xmlns="http://www.w3.org/2000/svg" p-id="987" data-spm-anchor-id="a313x.7781069.0.i0" width="35" height="35"><path d="M410.49 97.74H155.08a56.74 56.74 0 0 0-56.84 56.73V410a56.84 56.84 0 0 0 56.84 56.84h255.41A56.83 56.83 0 0 0 467.32 410V154.58a56.83 56.83 0 0 0-56.83-56.84zM410.49 558.74H155.08a56.74 56.74 0 0 0-56.84 56.73V871a56.84 56.84 0 0 0 56.84 56.84h255.41A56.83 56.83 0 0 0 467.32 871V615.58a56.83 56.83 0 0 0-56.83-56.84zM871.49 558.74H616.08a56.74 56.74 0 0 0-56.84 56.73V871a56.84 56.84 0 0 0 56.84 56.84h255.41A56.83 56.83 0 0 0 928.32 871V615.58a56.83 56.83 0 0 0-56.83-56.84z" fill="#66EEFF" p-id="988"></path><path d="M410.49 558.74h-4.14A475 475 0 0 0 299.52 859.6a481.16 481.16 0 0 0 4.84 68.22h106.13A56.83 56.83 0 0 0 467.32 871V615.58a56.83 56.83 0 0 0-56.83-56.84zM871.49 558.74H616.08a56.74 56.74 0 0 0-56.84 56.73V871a56.84 56.84 0 0 0 56.84 56.84h255.41A56.83 56.83 0 0 0 928.32 871V615.58a56.83 56.83 0 0 0-56.83-56.84z" fill="#C2F8FF" p-id="989"></path></svg></span><span style="font-size:30px;"> 特别声明</span></div><div class="tbsm-wz">千屹博客旗下的所有文章，是通过本人课堂学习和课外自学所精心整理的知识巨著<br/>难免会有出错的地方<br/>如果细心的你发现了小失误，可以在下方评论区告诉我，或者私信我！<br />非常感谢大家的热烈支持！</div></div>]]></content>
    
    
    
    <tags>
      
      <tag>Centos 8 stream</tag>
      
      <tag>Lsky Pro</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>基于K8S1.28.2实验rook部署ceph</title>
    <link href="/2023/11/19/rook%E9%83%A8%E7%BD%B2ceph/"/>
    <url>/2023/11/19/rook%E9%83%A8%E7%BD%B2ceph/</url>
    
    <content type="html"><![CDATA[<meta name="referrer" content="no-referrer"/><h1 id="基于K8S1-28-2实验rook部署ceph"><a href="#基于K8S1-28-2实验rook部署ceph" class="headerlink" title="基于K8S1.28.2实验rook部署ceph"></a>基于K8S1.28.2实验rook部署ceph</h1><p>Rook 支持 Kubernetes <strong>v1.22</strong> 或更高版本。</p><p>rook版本1.12.8</p><p>K8S版本1.28.2</p><p>部署出来ceph版本是quincy版本</p><table><thead><tr><th>主机名</th><th>ip1（NAT）</th><th>系统</th><th>新硬盘</th><th>磁盘</th><th>内存</th></tr></thead><tbody><tr><td>master1</td><td>192.168.48.101</td><td>Centos7.9</td><td>100G</td><td>100G</td><td>4G</td></tr><tr><td>master2</td><td>192.168.48.102</td><td>Centos7.9</td><td></td><td>100G</td><td>4G</td></tr><tr><td>master3</td><td>192.168.48.103</td><td>Centos7.9</td><td></td><td>100G</td><td>4G</td></tr><tr><td>node01</td><td>192.168.48.104</td><td>Centos7.9</td><td>100G</td><td>100G</td><td>6G</td></tr><tr><td>node02</td><td>192.168.48.105</td><td>Centos7.9</td><td>100G</td><td>100G</td><td>6G</td></tr></tbody></table><p>我这里是五台机，本应该ceph（三节点）是需要部署在三台node上的，这里为了测试方便，<font color='red'>仅部署在master1，node01，node02上所以需要给这三台加一个物理硬盘</font></p><p><font color='red'>以下所有操作都在master进行</font></p><h2 id="前期准备"><a href="#前期准备" class="headerlink" title="前期准备"></a>前期准备</h2><h3 id="克隆仓库"><a href="#克隆仓库" class="headerlink" title="克隆仓库"></a>克隆仓库</h3><figure class="highlight awk"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs awk">git clone --single-branch --branch v1.<span class="hljs-number">12.8</span> https:<span class="hljs-regexp">//gi</span>thub.com<span class="hljs-regexp">/rook/</span>rook.git<br>cd rook<span class="hljs-regexp">/deploy/</span>examples<br></code></pre></td></tr></table></figure><h3 id="查看所需镜像"><a href="#查看所需镜像" class="headerlink" title="查看所需镜像"></a>查看所需镜像</h3><figure class="highlight autoit"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><code class="hljs autoit">[root<span class="hljs-symbol">@master1</span> examples]<span class="hljs-meta"># cat operator.yaml | grep IMAGE:</span><br>  <span class="hljs-meta"># ROOK_CSI_CEPH_IMAGE: <span class="hljs-string">&quot;quay.io/cephcsi/cephcsi:v3.9.0&quot;</span></span><br>  <span class="hljs-meta"># ROOK_CSI_REGISTRAR_IMAGE: <span class="hljs-string">&quot;registry.k8s.io/sig-storage/csi-node-driver-registrar:v2.8.0&quot;</span></span><br>  <span class="hljs-meta"># ROOK_CSI_RESIZER_IMAGE: <span class="hljs-string">&quot;registry.k8s.io/sig-storage/csi-resizer:v1.8.0&quot;</span></span><br>  <span class="hljs-meta"># ROOK_CSI_PROVISIONER_IMAGE: <span class="hljs-string">&quot;registry.k8s.io/sig-storage/csi-provisioner:v3.5.0&quot;</span></span><br>  <span class="hljs-meta"># ROOK_CSI_SNAPSHOTTER_IMAGE: <span class="hljs-string">&quot;registry.k8s.io/sig-storage/csi-snapshotter:v6.2.2&quot;</span></span><br>  <span class="hljs-meta"># ROOK_CSI_ATTACHER_IMAGE: <span class="hljs-string">&quot;registry.k8s.io/sig-storage/csi-attacher:v4.3.0&quot;</span></span><br>  <span class="hljs-meta"># ROOK_CSIADDONS_IMAGE: <span class="hljs-string">&quot;quay.io/csiaddons/k8s-sidecar:v0.7.0&quot;</span></span><br>  <br>[root<span class="hljs-symbol">@master1</span> examples]<span class="hljs-meta"># cat operator.yaml | grep image:</span><br>          image: rook/ceph:v1<span class="hljs-number">.12</span><span class="hljs-number">.8</span><br></code></pre></td></tr></table></figure><p><img src="https://article.biliimg.com/bfs/article/fb6752bd6ad4b976e7d342a334d2ff8c697559838.png" alt="image-20231119001814854"></p><p><img src="https://article.biliimg.com/bfs/article/9efea1e18b18192c4f920c3948e92906697559838.png" alt="image-20231122001213717"></p><p>基本都是国外的镜像，在这里通过阿里云+github方式构建镜像仓库解决（以下是添加为自己私人构建的镜像）</p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><code class="hljs yaml"><span class="hljs-string">sed</span> <span class="hljs-string">-i</span> <span class="hljs-string">&#x27;s/# ROOK_CSI_CEPH_IMAGE: &quot;quay.io\/cephcsi\/cephcsi:v3.9.0&quot;/ROOK_CSI_CEPH_IMAGE: &quot;registry.cn-hangzhou.aliyuncs.com\/qianyios\/cephcsi:v3.9.0&quot;/g&#x27;</span> <span class="hljs-string">operator.yaml</span><br><br><span class="hljs-string">sed</span> <span class="hljs-string">-i</span> <span class="hljs-string">&#x27;s/# ROOK_CSI_REGISTRAR_IMAGE: &quot;registry.k8s.io\/sig-storage\/csi-node-driver-registrar:v2.8.0&quot;/ROOK_CSI_REGISTRAR_IMAGE: &quot;registry.cn-hangzhou.aliyuncs.com\/qianyios\/csi-node-driver-registrar:v2.8.0&quot;/g&#x27;</span> <span class="hljs-string">operator.yaml</span><br><br><span class="hljs-string">sed</span> <span class="hljs-string">-i</span> <span class="hljs-string">&#x27;s/# ROOK_CSI_RESIZER_IMAGE: &quot;registry.k8s.io\/sig-storage\/csi-resizer:v1.8.0&quot;/ROOK_CSI_RESIZER_IMAGE: &quot;registry.cn-hangzhou.aliyuncs.com\/qianyios\/csi-resizer:v1.8.0&quot;/g&#x27;</span> <span class="hljs-string">operator.yaml</span><br><br><span class="hljs-string">sed</span> <span class="hljs-string">-i</span> <span class="hljs-string">&#x27;s/# ROOK_CSI_PROVISIONER_IMAGE: &quot;registry.k8s.io\/sig-storage\/csi-provisioner:v3.5.0&quot;/ROOK_CSI_PROVISIONER_IMAGE: &quot;registry.cn-hangzhou.aliyuncs.com\/qianyios\/csi-provisioner:v3.5.0&quot;/g&#x27;</span> <span class="hljs-string">operator.yaml</span><br><br><span class="hljs-string">sed</span> <span class="hljs-string">-i</span> <span class="hljs-string">&#x27;s/# ROOK_CSI_SNAPSHOTTER_IMAGE: &quot;registry.k8s.io\/sig-storage\/csi-snapshotter:v6.2.2&quot;/ROOK_CSI_SNAPSHOTTER_IMAGE: &quot;registry.cn-hangzhou.aliyuncs.com\/qianyios\/csi-snapshotter:v6.2.2&quot;/g&#x27;</span> <span class="hljs-string">operator.yaml</span><br><br><span class="hljs-string">sed</span> <span class="hljs-string">-i</span> <span class="hljs-string">&#x27;s/# ROOK_CSI_ATTACHER_IMAGE: &quot;registry.k8s.io\/sig-storage\/csi-attacher:v4.3.0&quot;/ROOK_CSI_ATTACHER_IMAGE: &quot;registry.cn-hangzhou.aliyuncs.com\/qianyios\/csi-attacher:v4.3.0&quot;/g&#x27;</span> <span class="hljs-string">operator.yaml</span><br><br><span class="hljs-string">sed</span> <span class="hljs-string">-i</span> <span class="hljs-string">&#x27;s/# ROOK_CSIADDONS_IMAGE: &quot;quay.io\/csiaddons\/k8s-sidecar:v0.7.0&quot;/ROOK_CSIADDONS_IMAGE: &quot;registry.cn-hangzhou.aliyuncs.com\/qianyios\/k8s-sidecar:v0.7.0&quot;/g&#x27;</span> <span class="hljs-string">operator.yaml</span><br><br><span class="hljs-string">sed</span> <span class="hljs-string">-i</span> <span class="hljs-string">&#x27;s/image: rook\/ceph:v1.12.8/image: registry.cn-hangzhou.aliyuncs.com\/qianyios\/ceph:v1.12.8/g&#x27;</span> <span class="hljs-string">operator.yaml</span><br><br></code></pre></td></tr></table></figure><p>开启自动发现磁盘（用于后期扩展）</p><figure class="highlight awk"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs awk">sed -i <span class="hljs-string">&#x27;s/ROOK_ENABLE_DISCOVERY_DAEMON: &quot;false&quot;/ROOK_ENABLE_DISCOVERY_DAEMON: &quot;true&quot;/&#x27;</span> <span class="hljs-regexp">/root/</span>rook<span class="hljs-regexp">/deploy/</span>examples/operator.yaml<br></code></pre></td></tr></table></figure><p>建议提前下载镜像</p><figure class="highlight apache"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><code class="hljs apache"><span class="hljs-attribute">docker</span> pull registry.cn-hangzhou.aliyuncs.com/qianyios/cephcsi:v3.<span class="hljs-number">9</span>.<span class="hljs-number">0</span><br><span class="hljs-attribute">docker</span> pull registry.cn-hangzhou.aliyuncs.com/qianyios/csi-node-driver-registrar:v2.<span class="hljs-number">8</span>.<span class="hljs-number">0</span><br><span class="hljs-attribute">docker</span> pull registry.cn-hangzhou.aliyuncs.com/qianyios/csi-resizer:v1.<span class="hljs-number">8</span>.<span class="hljs-number">0</span><br><span class="hljs-attribute">docker</span> pull registry.cn-hangzhou.aliyuncs.com/qianyios/csi-provisioner:v3.<span class="hljs-number">5</span>.<span class="hljs-number">0</span><br><span class="hljs-attribute">docker</span> pull registry.cn-hangzhou.aliyuncs.com/qianyios/csi-snapshotter:v6.<span class="hljs-number">2</span>.<span class="hljs-number">2</span><br><span class="hljs-attribute">docker</span> pull registry.cn-hangzhou.aliyuncs.com/qianyios/csi-attacher:v4.<span class="hljs-number">3</span>.<span class="hljs-number">0</span><br><span class="hljs-attribute">docker</span> pull registry.cn-hangzhou.aliyuncs.com/qianyios/k8s-sidecar:v0.<span class="hljs-number">7</span>.<span class="hljs-number">0</span><br><span class="hljs-attribute">docker</span> pull registry.cn-hangzhou.aliyuncs.com/qianyios/ceph:v1.<span class="hljs-number">12</span>.<span class="hljs-number">8</span><br></code></pre></td></tr></table></figure><h2 id="安装rook-ceph集群"><a href="#安装rook-ceph集群" class="headerlink" title="安装rook+ceph集群"></a>安装rook+ceph集群</h2><h3 id="开始部署"><a href="#开始部署" class="headerlink" title="开始部署"></a>开始部署</h3><ol><li>创建crd&amp;common&amp;operator</li></ol><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs powershell">kubectl create <span class="hljs-operator">-f</span> crds.yaml <span class="hljs-operator">-f</span> common.yaml <span class="hljs-operator">-f</span> operator.yaml<br></code></pre></td></tr></table></figure><p><img src="https://article.biliimg.com/bfs/article/21fb0c516d139b497b026399577046c4697559838.png" alt="image-20231119182815198"></p><ol start="2"><li>创建cluster（ceph）</li></ol><p><font color='red'>修改配置：</font>等待operator容器和discover容器<font color='red'>启动</font>，配置osd节点</p><p>先注意一下自己的磁盘（lsblk）根据自身情况修改下面的配置文件</p><p><img src="https://article.biliimg.com/bfs/article/0e6667f65a5bfbece0bba005260610e9697559838.png" alt="image-20231119011441790"></p><figure class="highlight apache"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs apache"><span class="hljs-comment">#更改为国内镜像</span><br><span class="hljs-attribute">sed</span> -i &#x27;s#image: quay.io/ceph/ceph:v17.<span class="hljs-number">2</span>.<span class="hljs-number">6</span>#image: registry.cn-hangzhou.aliyuncs.com/qianyios/ceph:v17.<span class="hljs-number">2</span>.<span class="hljs-number">6</span>#&#x27; cluster.yaml<br></code></pre></td></tr></table></figure><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><code class="hljs yaml"><span class="hljs-string">vim</span> <span class="hljs-string">cluster.yaml</span><br><span class="hljs-string">-------------------------------------</span><br> <br><span class="hljs-bullet">-</span> <span class="hljs-string">修改镜像</span><br>    <span class="hljs-attr">image:</span> <span class="hljs-string">registry.cn-hangzhou.aliyuncs.com/qianyios/ceph:v17.2.6</span><br> <br><span class="hljs-bullet">-</span> <span class="hljs-string">改为false，并非使用所有节点所有磁盘作为osd</span><br><span class="hljs-bullet">-</span> <span class="hljs-string">启用deviceFilter</span><br><span class="hljs-bullet">-</span> <span class="hljs-string">按需配置config</span><br><span class="hljs-bullet">-</span> <span class="hljs-string">会自动跳过非裸盘</span><br>  <span class="hljs-attr">storage:</span> <span class="hljs-comment"># cluster level storage configuration and selection</span><br>    <span class="hljs-attr">useAllNodes:</span> <span class="hljs-literal">false</span><br>    <span class="hljs-attr">useAllDevices:</span> <span class="hljs-literal">false</span><br>    <span class="hljs-attr">deviceFilter:</span><br>    <span class="hljs-attr">config:</span><br>    <span class="hljs-attr">nodes:</span><br>      <span class="hljs-bullet">-</span> <span class="hljs-attr">name:</span> <span class="hljs-string">&quot;master1&quot;</span><br>        <span class="hljs-attr">deviceFilter:</span> <span class="hljs-string">&quot;sda&quot;</span><br>      <span class="hljs-bullet">-</span> <span class="hljs-attr">name:</span> <span class="hljs-string">&quot;node01&quot;</span><br>        <span class="hljs-attr">deviceFilter:</span> <span class="hljs-string">&quot;sda&quot;</span><br>      <span class="hljs-bullet">-</span> <span class="hljs-attr">name:</span> <span class="hljs-string">&quot;ndoe02&quot;</span><br>        <span class="hljs-attr">deviceFilter:</span> <span class="hljs-string">&quot;^sd.&quot;</span>  <span class="hljs-comment">#自动匹配sd开头的裸盘</span><br></code></pre></td></tr></table></figure><p>这里的三个节点，是我们开头讲到的三台机，自行根据修改调整，注意这里的名字是k8s集群的名字可以在<font color='red'>kubectl get nodes</font>查看</p><p><img src="https://article.biliimg.com/bfs/article/6bee98ef78ec050fb0974064341ea8e3697559838.png" alt="image-20231119011622231"></p><p><img src="https://article.biliimg.com/bfs/article/83fabcadd38b05d708274ed1f28f9ec7697559838.png" alt="image-20231119011844526"></p><p>部署cluster</p><figure class="highlight n1ql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs n1ql">kubectl <span class="hljs-keyword">create</span> -f <span class="hljs-keyword">cluster</span>.yaml<br></code></pre></td></tr></table></figure><h3 id="查看状态"><a href="#查看状态" class="headerlink" title="查看状态"></a>查看状态</h3><figure class="highlight routeros"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><code class="hljs routeros">- 实时查看pod创建进度<br>kubectl <span class="hljs-built_in">get</span> pod -n rook-ceph -w<br> <br>- 实时查看集群创建进度<br>kubectl <span class="hljs-built_in">get</span> cephcluster -n rook-ceph rook-ceph -w<br> <br>- 详细描述<br>kubectl describe cephcluster -n rook-ceph rook-ceph<br></code></pre></td></tr></table></figure><p><img src="https://article.biliimg.com/bfs/article/447a7b288924bf5c45f5a8a420eef0e0697559838.png" alt="image-20231119184740824"></p><p>安装ceph客户端工具</p><figure class="highlight ldif"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><code class="hljs ldif"><span class="hljs-literal">-</span> 进入工作目录<br>cd rook/deploy/examples/<br><br><span class="hljs-literal">-</span> 查看所需镜像<br>[root@master1 examples]<span class="hljs-comment"># cat toolbox.yaml | grep image:</span><br>          image: quay.io/ceph/ceph:v17.2.6<br><span class="hljs-literal">-</span> 更改为国内镜像<br><br>sed -i &#x27;s<span class="hljs-comment">#image: quay.io/ceph/ceph:v17.2.6#image: registry.cn-hangzhou.aliyuncs.com/qianyios/ceph:v17.2.6#&#x27; toolbox.yaml</span><br><br><span class="hljs-literal">-</span> 创建toolbox<br>kubectl  create -f toolbox.yaml -n rook-ceph<br> <br><span class="hljs-literal">-</span> 查看pod<br>kubectl  get pod -n rook-ceph -l app=rook-ceph-tools<br> <br><span class="hljs-literal">-</span> 进入pod<br>kubectl -n rook-ceph exec -it deploy/rook-ceph-tools -- bash<br> <br><span class="hljs-literal">-</span> 查看集群状态<br>ceph status<br> <br><span class="hljs-literal">-</span> 查看osd状态<br>ceph osd status<br> <br><span class="hljs-literal">-</span> 集群空间用量<br>ceph df<br></code></pre></td></tr></table></figure><p><img src="https://article.biliimg.com/bfs/article/a1aedbec3eee3f8894d39b6a51269054697559838.png" alt="image-20231119185510701"></p><p><img src="https://article.biliimg.com/bfs/article/79bbd038ad5b16e5e9f8e94e8fb04026697559838.png" alt="image-20231119185604869"></p><h3 id="暴露dashboard"><a href="#暴露dashboard" class="headerlink" title="暴露dashboard"></a>暴露dashboard</h3><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><code class="hljs yaml"><span class="hljs-string">cat</span> <span class="hljs-string">&gt;</span> <span class="hljs-string">rook-dashboard.yaml</span> <span class="hljs-string">&lt;&lt;</span> <span class="hljs-string">EOF</span><br><br><span class="hljs-meta">---</span><br><span class="hljs-attr">apiVersion:</span> <span class="hljs-string">v1</span><br><span class="hljs-attr">kind:</span> <span class="hljs-string">Service</span><br><span class="hljs-attr">metadata:</span><br>  <span class="hljs-attr">labels:</span><br>    <span class="hljs-attr">app:</span> <span class="hljs-string">rook-ceph-mgr</span><br>    <span class="hljs-attr">ceph_daemon_id:</span> <span class="hljs-string">a</span><br>    <span class="hljs-attr">rook_cluster:</span> <span class="hljs-string">rook-ceph</span><br>  <span class="hljs-attr">name:</span> <span class="hljs-string">rook-ceph-mgr-dashboard-np</span><br>  <span class="hljs-attr">namespace:</span> <span class="hljs-string">rook-ceph</span><br><span class="hljs-attr">spec:</span><br>  <span class="hljs-attr">ports:</span><br>  <span class="hljs-bullet">-</span> <span class="hljs-attr">name:</span> <span class="hljs-string">http-dashboard</span><br>    <span class="hljs-attr">port:</span> <span class="hljs-number">8443</span><br>    <span class="hljs-attr">protocol:</span> <span class="hljs-string">TCP</span><br>    <span class="hljs-attr">targetPort:</span> <span class="hljs-number">8443</span><br>    <span class="hljs-attr">nodePort:</span> <span class="hljs-number">30700</span><br>  <span class="hljs-attr">selector:</span><br>    <span class="hljs-attr">app:</span> <span class="hljs-string">rook-ceph-mgr</span><br>    <span class="hljs-attr">ceph_daemon_id:</span> <span class="hljs-string">a</span><br>  <span class="hljs-attr">sessionAffinity:</span> <span class="hljs-string">None</span><br>  <span class="hljs-attr">type:</span> <span class="hljs-string">NodePort</span><br><span class="hljs-string">EOF</span><br><br><span class="hljs-string">kubectl</span> <span class="hljs-string">apply</span> <span class="hljs-string">-f</span> <span class="hljs-string">rook-dashboard.yaml</span><br></code></pre></td></tr></table></figure><p>查看dashboard密码</p><figure class="highlight routeros"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs routeros">kubectl -n rook-ceph <span class="hljs-built_in">get</span><span class="hljs-built_in"> secret </span>rook-ceph-dashboard-password -o <span class="hljs-attribute">jsonpath</span>=<span class="hljs-string">&quot;&#123;[&#x27;data&#x27;][&#x27;password&#x27;]&#125;&quot;</span> | base64 --decode &amp;&amp; echo<br><br>Qmu/!<span class="hljs-variable">$ZvfQTAd</span>-aCuHF+<br></code></pre></td></tr></table></figure><p>访问dashboard</p><figure class="highlight awk"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs awk">https:<span class="hljs-regexp">//</span><span class="hljs-number">192.168</span>.<span class="hljs-number">48.200</span>:<span class="hljs-number">30700</span><br></code></pre></td></tr></table></figure><p><img src="https://article.biliimg.com/bfs/article/85e36f73ba090127fcbffa5d22f8fd8f697559838.png" alt="image-20231119194020314"></p><p>如果出现以下报错（可以按下面解决，反之跳过）</p><p>消除HEALTH_WARN警告</p><ul><li>查看警告详情<ul><li>AUTH_INSECURE_GLOBAL_ID_RECLAIM_ALLOWED: mons are allowing insecure global_id reclaim</li><li>MON_DISK_LOW: mons a,b,c are low on available space</li></ul></li></ul><p><img src="https://img-blog.csdnimg.cn/img_convert/f363d6115f47d3be9b65b691e8676c62.png" alt="image-20210621191403196"></p><blockquote><p>官方解决方案：<a href="https://docs.ceph.com/en/latest/rados/operations/health-checks/">https://docs.ceph.com/en/latest/rados/operations/health-checks/</a></p></blockquote><ul><li>AUTH_INSECURE_GLOBAL_ID_RECLAIM_ALLOWED</li></ul><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs sql"><span class="hljs-operator">-</span> 进入toolbox<br><br>kubectl <span class="hljs-operator">-</span>n rook<span class="hljs-operator">-</span>ceph <span class="hljs-keyword">exec</span> <span class="hljs-operator">-</span>it deploy<span class="hljs-operator">/</span>rook<span class="hljs-operator">-</span>ceph<span class="hljs-operator">-</span>tools <span class="hljs-comment">-- bash</span><br><br>ceph config <span class="hljs-keyword">set</span> mon auth_allow_insecure_global_id_reclaim <span class="hljs-literal">false</span><br></code></pre></td></tr></table></figure><ul><li>MON_DISK_LOW：根分区使用率过高，清理即可。</li></ul><p><img src="https://img-blog.csdnimg.cn/img_convert/261190930bee367b1a07ee81a311b3e2.png" alt="image-20210621195325516"></p><h2 id="Ceph存储使用"><a href="#Ceph存储使用" class="headerlink" title="Ceph存储使用"></a>Ceph存储使用</h2><h3 id="三种存储类型"><a href="#三种存储类型" class="headerlink" title="三种存储类型"></a>三种存储类型</h3><table><thead><tr><th align="left">存储类型</th><th align="left">特征</th><th align="left">应用场景</th><th align="left">典型设备</th></tr></thead><tbody><tr><td align="left">块存储（RBD）</td><td align="left">存储速度较快 不支持共享存储 [<strong>ReadWriteOnce</strong>]</td><td align="left">虚拟机硬盘</td><td align="left">硬盘 Raid</td></tr><tr><td align="left">文件存储（CephFS）</td><td align="left">存储速度慢（需经操作系统处理再转为块存储） 支持共享存储 [<strong>ReadWriteMany</strong>]</td><td align="left">文件共享</td><td align="left">FTP NFS</td></tr><tr><td align="left">对象存储（Object）</td><td align="left">具备块存储的读写性能和文件存储的共享特性 操作系统不能直接访问，只能通过应用程序级别的API访问</td><td align="left">图片存储 视频存储</td><td align="left">OSS</td></tr></tbody></table><h3 id="块存储"><a href="#块存储" class="headerlink" title="块存储"></a>块存储</h3><h4 id="创建CephBlockPool和StorageClass"><a href="#创建CephBlockPool和StorageClass" class="headerlink" title="创建CephBlockPool和StorageClass"></a>创建CephBlockPool和StorageClass</h4><ul><li>文件路径：<code>/root/rook/deploy/examples/csi/rbd/storageclass.yaml</code></li><li>CephBlockPool和StorageClass都位于storageclass.yaml 文件</li><li>配置文件简要解读：</li></ul><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br></pre></td><td class="code"><pre><code class="hljs yaml"><span class="hljs-string">cd</span> <span class="hljs-string">/root/rook/deploy/examples/csi/rbd</span><br>[<span class="hljs-string">root@master1</span> <span class="hljs-string">rbd</span>]<span class="hljs-comment"># grep -vE &#x27;^\s*(#|$)&#x27; storageclass.yaml</span><br><span class="hljs-attr">apiVersion:</span> <span class="hljs-string">ceph.rook.io/v1</span><br><span class="hljs-attr">kind:</span> <span class="hljs-string">CephBlockPool</span><br><span class="hljs-attr">metadata:</span><br>  <span class="hljs-attr">name:</span> <span class="hljs-string">replicapool</span><br>  <span class="hljs-attr">namespace:</span> <span class="hljs-string">rook-ceph</span> <span class="hljs-comment"># namespace:cluster</span><br><span class="hljs-attr">spec:</span><br>  <span class="hljs-attr">failureDomain:</span> <span class="hljs-string">host</span>              <span class="hljs-comment"># host级容灾</span><br>  <span class="hljs-attr">replicated:</span><br>    <span class="hljs-attr">size:</span> <span class="hljs-number">3</span>                              <span class="hljs-comment"># 默认三个副本</span><br>    <span class="hljs-attr">requireSafeReplicaSize:</span> <span class="hljs-literal">true</span><br><span class="hljs-meta">---</span><br><span class="hljs-attr">apiVersion:</span> <span class="hljs-string">storage.k8s.io/v1</span><br><span class="hljs-attr">kind:</span> <span class="hljs-string">StorageClass</span>                 <span class="hljs-comment"># sc无需指定命名空间</span><br><span class="hljs-attr">metadata:</span><br>  <span class="hljs-attr">name:</span> <span class="hljs-string">rook-ceph-block</span><br><span class="hljs-attr">provisioner:</span> <span class="hljs-string">rook-ceph.rbd.csi.ceph.com</span>    <span class="hljs-comment"># 存储驱动</span><br><span class="hljs-attr">parameters:</span><br>  <span class="hljs-attr">clusterID:</span> <span class="hljs-string">rook-ceph</span> <span class="hljs-comment"># namespace:cluster</span><br>  <span class="hljs-attr">pool:</span> <span class="hljs-string">replicapool</span>                  <span class="hljs-comment"># 关联到CephBlockPool</span><br>  <span class="hljs-attr">imageFormat:</span> <span class="hljs-string">&quot;2&quot;</span><br>  <span class="hljs-attr">imageFeatures:</span> <span class="hljs-string">layering</span><br>  <span class="hljs-attr">csi.storage.k8s.io/provisioner-secret-name:</span> <span class="hljs-string">rook-csi-rbd-provisioner</span><br>  <span class="hljs-attr">csi.storage.k8s.io/provisioner-secret-namespace:</span> <span class="hljs-string">rook-ceph</span> <span class="hljs-comment"># namespace:cluster</span><br>  <span class="hljs-attr">csi.storage.k8s.io/controller-expand-secret-name:</span> <span class="hljs-string">rook-csi-rbd-provisioner</span><br>  <span class="hljs-attr">csi.storage.k8s.io/controller-expand-secret-namespace:</span> <span class="hljs-string">rook-ceph</span> <span class="hljs-comment"># namespace:cluster</span><br>  <span class="hljs-attr">csi.storage.k8s.io/node-stage-secret-name:</span> <span class="hljs-string">rook-csi-rbd-node</span><br>  <span class="hljs-attr">csi.storage.k8s.io/node-stage-secret-namespace:</span> <span class="hljs-string">rook-ceph</span> <span class="hljs-comment"># namespace:cluster</span><br>  <span class="hljs-attr">csi.storage.k8s.io/fstype:</span> <span class="hljs-string">ext4</span><br><span class="hljs-attr">allowVolumeExpansion:</span> <span class="hljs-literal">true</span>                          <span class="hljs-comment"># 是否允许扩容</span><br><span class="hljs-attr">reclaimPolicy:</span> <span class="hljs-string">Delete</span>                                    <span class="hljs-comment"># PV回收策略</span><br>[<span class="hljs-string">root@master1</span> <span class="hljs-string">rbd</span>]<span class="hljs-comment">#</span><br><br></code></pre></td></tr></table></figure><p>创建CephBlockPool和StorageClass</p><figure class="highlight gauss"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs gauss">kubectl <span class="hljs-keyword">create</span> -f storageclass.yaml<br></code></pre></td></tr></table></figure><p>查看</p><figure class="highlight routeros"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs routeros">- 查看sc<br>kubectl <span class="hljs-built_in">get</span> sc<br> <br>- 查看CephBlockPool（也可在dashboard中查看）<br>kubectl <span class="hljs-built_in">get</span> cephblockpools -n rook-ceph<br></code></pre></td></tr></table></figure><p><img src="https://article.biliimg.com/bfs/article/c2f898f240103c516ee39c2f712770da697559838.png" alt="image-20231119195332077"></p><p><img src="https://article.biliimg.com/bfs/article/b03420681c64fc1e0f001d90eb7d0361697559838.png" alt="image-20231119195400264"></p><h4 id="块存储使用示例"><a href="#块存储使用示例" class="headerlink" title="块存储使用示例"></a>块存储使用示例</h4><ul><li><strong>Deployment</strong>单副本+<strong>PersistentVolumeClaim</strong></li></ul><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br></pre></td><td class="code"><pre><code class="hljs yaml"><span class="hljs-string">cat</span> <span class="hljs-string">&gt;</span> <span class="hljs-string">nginx-deploy-rbd.yaml</span> <span class="hljs-string">&lt;&lt;</span> <span class="hljs-string">&quot;EOF&quot;</span><br><br><span class="hljs-attr">apiVersion:</span> <span class="hljs-string">apps/v1</span><br><span class="hljs-attr">kind:</span> <span class="hljs-string">Deployment</span><br><span class="hljs-attr">metadata:</span><br>  <span class="hljs-attr">labels:</span><br>    <span class="hljs-attr">app:</span> <span class="hljs-string">nginx-deploy-rbd</span><br>  <span class="hljs-attr">name:</span> <span class="hljs-string">nginx-deploy-rbd</span><br><span class="hljs-attr">spec:</span><br>  <span class="hljs-attr">replicas:</span> <span class="hljs-number">1</span><br>  <span class="hljs-attr">selector:</span><br>    <span class="hljs-attr">matchLabels:</span><br>      <span class="hljs-attr">app:</span> <span class="hljs-string">nginx-deploy-rbd</span><br>  <span class="hljs-attr">template:</span><br>    <span class="hljs-attr">metadata:</span><br>      <span class="hljs-attr">labels:</span><br>        <span class="hljs-attr">app:</span> <span class="hljs-string">nginx-deploy-rbd</span><br>    <span class="hljs-attr">spec:</span><br>      <span class="hljs-attr">containers:</span><br>      <span class="hljs-bullet">-</span> <span class="hljs-attr">image:</span> <span class="hljs-string">registry.cn-hangzhou.aliyuncs.com/qianyios/nginx:latest</span><br>        <span class="hljs-attr">name:</span> <span class="hljs-string">nginx</span><br>        <span class="hljs-attr">volumeMounts:</span><br>        <span class="hljs-bullet">-</span> <span class="hljs-attr">name:</span> <span class="hljs-string">data</span><br>          <span class="hljs-attr">mountPath:</span> <span class="hljs-string">/usr/share/nginx/html</span><br>      <span class="hljs-attr">volumes:</span><br>      <span class="hljs-bullet">-</span> <span class="hljs-attr">name:</span> <span class="hljs-string">data</span><br>        <span class="hljs-attr">persistentVolumeClaim:</span><br>          <span class="hljs-attr">claimName:</span> <span class="hljs-string">nginx-rbd-pvc</span><br><br><span class="hljs-meta">---</span><br><span class="hljs-attr">apiVersion:</span> <span class="hljs-string">v1</span><br><span class="hljs-attr">kind:</span> <span class="hljs-string">PersistentVolumeClaim</span><br><span class="hljs-attr">metadata:</span><br>  <span class="hljs-attr">name:</span> <span class="hljs-string">nginx-rbd-pvc</span><br><span class="hljs-attr">spec:</span><br>  <span class="hljs-attr">storageClassName:</span> <span class="hljs-string">&quot;rook-ceph-block&quot;</span>   <span class="hljs-comment">#就是这里指定了前面的创建的sc</span><br>  <span class="hljs-attr">accessModes:</span><br>    <span class="hljs-bullet">-</span> <span class="hljs-string">ReadWriteOnce</span><br>  <span class="hljs-attr">resources:</span><br>    <span class="hljs-attr">requests:</span><br>      <span class="hljs-attr">storage:</span> <span class="hljs-string">5Gi</span><br><br><span class="hljs-string">EOF</span><br></code></pre></td></tr></table></figure><figure class="highlight awk"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><code class="hljs awk">kubectl create -f nginx-deploy-rbd.yaml<br>kubectl exec -it nginx-deploy-rbd-<span class="hljs-number">7886</span>bf6666-qhw74 bash<br>echo <span class="hljs-string">&quot;hello,nginx-deploy-rbd&quot;</span> &gt; <span class="hljs-regexp">/usr/</span>share<span class="hljs-regexp">/nginx/</span>html/index.html<br><span class="hljs-keyword">exit</span><br><br>kubectl get pod -o wide | grep nginx<br><br><span class="hljs-comment">#测试完就删除</span><br>kubectl <span class="hljs-keyword">delete</span> -f nginx-deploy-rbd.yaml<br></code></pre></td></tr></table></figure><p><img src="https://article.biliimg.com/bfs/article/5e3900695a26cad5fc1dd6b9ec01e9f6697559838.png" alt="image-20231119203414038"></p><p><img src="https://article.biliimg.com/bfs/article/74ae8919edc0a38c9c2cea72cadde0a9697559838.png" alt="image-20231119203735080"></p><p><img src="https://article.biliimg.com/bfs/article/0cd7ddcc0f4e1d6264091462c2b9ba4d697559838.png" alt="image-20231119203755919"></p><ul><li><strong>StatefulSet</strong>多副本+<strong>volumeClaimTemplates</strong></li></ul><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br></pre></td><td class="code"><pre><code class="hljs yaml"><span class="hljs-string">cat</span> <span class="hljs-string">&gt;</span> <span class="hljs-string">nginx-ss-rbd.yaml</span> <span class="hljs-string">&lt;&lt;</span> <span class="hljs-string">&quot;EOF&quot;</span><br> <br><span class="hljs-attr">apiVersion:</span> <span class="hljs-string">apps/v1</span><br><span class="hljs-attr">kind:</span> <span class="hljs-string">StatefulSet</span><br><span class="hljs-attr">metadata:</span><br>  <span class="hljs-attr">name:</span> <span class="hljs-string">nginx-ss-rbd</span><br><span class="hljs-attr">spec:</span><br>  <span class="hljs-attr">selector:</span><br>    <span class="hljs-attr">matchLabels:</span><br>      <span class="hljs-attr">app:</span> <span class="hljs-string">nginx-ss-rbd</span> <br>  <span class="hljs-attr">serviceName:</span> <span class="hljs-string">&quot;nginx&quot;</span><br>  <span class="hljs-attr">replicas:</span> <span class="hljs-number">3</span> <br>  <span class="hljs-attr">template:</span><br>    <span class="hljs-attr">metadata:</span><br>      <span class="hljs-attr">labels:</span><br>        <span class="hljs-attr">app:</span> <span class="hljs-string">nginx-ss-rbd</span> <br>    <span class="hljs-attr">spec:</span><br>      <span class="hljs-attr">containers:</span><br>      <span class="hljs-bullet">-</span> <span class="hljs-attr">name:</span> <span class="hljs-string">nginx</span><br>        <span class="hljs-attr">image:</span> <span class="hljs-string">registry.cn-hangzhou.aliyuncs.com/qianyios/nginx:latest</span><br>        <span class="hljs-attr">ports:</span><br>        <span class="hljs-bullet">-</span> <span class="hljs-attr">containerPort:</span> <span class="hljs-number">80</span><br>          <span class="hljs-attr">name:</span> <span class="hljs-string">web</span><br>        <span class="hljs-attr">volumeMounts:</span><br>        <span class="hljs-bullet">-</span> <span class="hljs-attr">name:</span> <span class="hljs-string">www</span><br>          <span class="hljs-attr">mountPath:</span> <span class="hljs-string">/usr/share/nginx/html</span><br>  <span class="hljs-attr">volumeClaimTemplates:</span><br>  <span class="hljs-bullet">-</span> <span class="hljs-attr">metadata:</span><br>      <span class="hljs-attr">name:</span> <span class="hljs-string">www</span><br>    <span class="hljs-attr">spec:</span><br>      <span class="hljs-attr">accessModes:</span> [ <span class="hljs-string">&quot;ReadWriteOnce&quot;</span> ]<br>      <span class="hljs-attr">storageClassName:</span> <span class="hljs-string">&quot;rook-ceph-block&quot;</span>  <span class="hljs-comment">#就是这里指定了前面的创建的sc</span><br>      <span class="hljs-attr">resources:</span><br>        <span class="hljs-attr">requests:</span><br>          <span class="hljs-attr">storage:</span> <span class="hljs-string">2Gi</span><br><span class="hljs-string">EOF</span><br></code></pre></td></tr></table></figure><p>部署</p><figure class="highlight awk"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br></pre></td><td class="code"><pre><code class="hljs awk">kubectl create -f nginx-ss-rbd.yaml<br><br>kubectl get pod -o wide | grep nginx-ss<br><br>kubectl exec -it nginx-ss-rbd-<span class="hljs-number">0</span> bash<br>echo <span class="hljs-string">&quot;hello,nginx-ss-rbd-0&quot;</span> &gt; <span class="hljs-regexp">/usr/</span>share<span class="hljs-regexp">/nginx/</span>html/index.html &amp;&amp; <span class="hljs-keyword">exit</span><br><br>kubectl exec -it nginx-ss-rbd-<span class="hljs-number">1</span> bash<br>echo <span class="hljs-string">&quot;hello,nginx-ss-rbd-1&quot;</span> &gt; <span class="hljs-regexp">/usr/</span>share<span class="hljs-regexp">/nginx/</span>html/index.html &amp;&amp; <span class="hljs-keyword">exit</span><br><br>kubectl exec -it nginx-ss-rbd-<span class="hljs-number">2</span> bash<br>echo <span class="hljs-string">&quot;hello,nginx-ss-rbd-2&quot;</span> &gt; <span class="hljs-regexp">/usr/</span>share<span class="hljs-regexp">/nginx/</span>html/index.html &amp;&amp; <span class="hljs-keyword">exit</span><br><br><span class="hljs-comment">#测试完就删除</span><br>kubectl <span class="hljs-keyword">delete</span> -f nginx-ss-rbd.yaml<br><br>这里可能需要手动删除一下pvc<br>[root@master1 ~]<span class="hljs-comment"># kubectl get pvc</span><br>NAME                 STATUS   VOLUME                                     CAPACITY   ACCESS MODES   STORAGECLASS      AGE<br>www-nginx-ss-rbd-<span class="hljs-number">0</span>   Bound    pvc-<span class="hljs-number">4</span>a75f201-eec0-<span class="hljs-number">47</span>fa-<span class="hljs-number">990</span>c-<span class="hljs-number">353</span>c52fe14f4   <span class="hljs-number">2</span>Gi        RWO            rook-ceph-block   <span class="hljs-number">6</span>m27s<br>www-nginx-ss-rbd-<span class="hljs-number">1</span>   Bound    pvc-d5f7e29f-<span class="hljs-number">79</span>e4-<span class="hljs-number">4</span>d1e-bcbb-<span class="hljs-number">65</span>ece15a8172   <span class="hljs-number">2</span>Gi        RWO            rook-ceph-block   <span class="hljs-number">6</span>m21s<br>www-nginx-ss-rbd-<span class="hljs-number">2</span>   Bound    pvc-<span class="hljs-number">8</span>cce06e9-dfe4-<span class="hljs-number">429</span>d-ae44-<span class="hljs-number">878</span>f8e4665e0   <span class="hljs-number">2</span>Gi        RWO            rook-ceph-block   <span class="hljs-number">5</span>m53s<br>[root@master1 ~]<span class="hljs-comment"># kubectl delete  pvc www-nginx-ss-rbd-0</span><br>persistentvolumeclaim <span class="hljs-string">&quot;www-nginx-ss-rbd-0&quot;</span> deleted<br>[root@master1 ~]<span class="hljs-comment"># kubectl delete  pvc www-nginx-ss-rbd-1</span><br>persistentvolumeclaim <span class="hljs-string">&quot;www-nginx-ss-rbd-1&quot;</span> deleted<br>[root@master1 ~]<span class="hljs-comment"># kubectl delete  pvc www-nginx-ss-rbd-2</span><br>persistentvolumeclaim <span class="hljs-string">&quot;www-nginx-ss-rbd-2&quot;</span> deleted<br><br></code></pre></td></tr></table></figure><p><img src="https://article.biliimg.com/bfs/article/1c84ec945690e376d855c9f19561ea92697559838.png" alt="image-20231119204319948"></p><p><img src="https://article.biliimg.com/bfs/article/0dd2d174948cd92d9b1092551518e456697559838.png" alt="image-20231119204602188"></p><h3 id="共享文件存储"><a href="#共享文件存储" class="headerlink" title="共享文件存储"></a>共享文件存储</h3><h4 id="部署MDS服务"><a href="#部署MDS服务" class="headerlink" title="部署MDS服务"></a>部署MDS服务</h4><p>创建Cephfs文件系统需要先部署MDS服务，该服务负责处理文件系统中的元数据。</p><ul><li>文件路径：<code>/root/rook/deploy/examples/filesystem.yaml</code></li></ul><p>配置文件解读</p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br></pre></td><td class="code"><pre><code class="hljs yaml"><span class="hljs-string">cd</span> <span class="hljs-string">/root/rook/deploy/examples</span><br>[<span class="hljs-string">root@master1</span> <span class="hljs-string">examples</span>]<span class="hljs-comment"># grep -vE &#x27;^\s*(#|$)&#x27; filesystem.yaml</span><br><span class="hljs-attr">apiVersion:</span> <span class="hljs-string">ceph.rook.io/v1</span><br><span class="hljs-attr">kind:</span> <span class="hljs-string">CephFilesystem</span><br><span class="hljs-attr">metadata:</span><br>  <span class="hljs-attr">name:</span> <span class="hljs-string">myfs</span><br>  <span class="hljs-attr">namespace:</span> <span class="hljs-string">rook-ceph</span> <span class="hljs-comment"># namespace:cluster</span><br><span class="hljs-attr">spec:</span><br>  <span class="hljs-attr">metadataPool:</span><br>    <span class="hljs-attr">replicated:</span><br>      <span class="hljs-attr">size:</span> <span class="hljs-number">3</span>            <span class="hljs-comment"># 元数据副本数</span><br>      <span class="hljs-attr">requireSafeReplicaSize:</span> <span class="hljs-literal">true</span><br>    <span class="hljs-attr">parameters:</span><br>      <span class="hljs-attr">compression_mode:</span><br>        <span class="hljs-string">none</span><br>  <span class="hljs-attr">dataPools:</span><br>    <span class="hljs-bullet">-</span> <span class="hljs-attr">name:</span> <span class="hljs-string">replicated</span><br>      <span class="hljs-attr">failureDomain:</span> <span class="hljs-string">host</span><br>      <span class="hljs-attr">replicated:</span><br>        <span class="hljs-attr">size:</span> <span class="hljs-number">3</span>             <span class="hljs-comment"># 存储数据的副本数</span><br>        <span class="hljs-attr">requireSafeReplicaSize:</span> <span class="hljs-literal">true</span><br>      <span class="hljs-attr">parameters:</span><br>        <span class="hljs-attr">compression_mode:</span><br>          <span class="hljs-string">none</span><br>  <span class="hljs-attr">preserveFilesystemOnDelete:</span> <span class="hljs-literal">true</span><br>  <span class="hljs-attr">metadataServer:</span><br>    <span class="hljs-attr">activeCount:</span> <span class="hljs-number">1</span>        <span class="hljs-comment"># MDS实例的副本数，默认1，生产环境建议设置为3</span><br>    <span class="hljs-attr">activeStandby:</span> <span class="hljs-literal">true</span><br>  <span class="hljs-string">......省略</span><br><br><span class="hljs-string">kubectl</span> <span class="hljs-string">create</span> <span class="hljs-string">-f</span> <span class="hljs-string">filesystem.yaml</span><br><span class="hljs-string">kubectl</span> <span class="hljs-string">get</span> <span class="hljs-string">pod</span> <span class="hljs-string">-n</span> <span class="hljs-string">rook-ceph</span> <span class="hljs-string">|</span> <span class="hljs-string">grep</span> <span class="hljs-string">mds</span><br></code></pre></td></tr></table></figure><p><img src="https://article.biliimg.com/bfs/article/746f57ed85b4e0ec76559074fb49a8e4697559838.png" alt="image-20231119210143026"></p><figure class="highlight applescript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs applescript">- 进入pod<br>kubectl -n rook-ceph exec -<span class="hljs-keyword">it</span> deploy/rook-ceph-tools <span class="hljs-comment">-- bash</span><br> <br>- 查看集群状态<br>ceph status<br></code></pre></td></tr></table></figure><p><img src="https://article.biliimg.com/bfs/article/bc7c03c91f6634589bc0561c2f24d392697559838.png" alt="image-20231119210339096"></p><h4 id="配置存储-StorageClass"><a href="#配置存储-StorageClass" class="headerlink" title="配置存储(StorageClass)"></a>配置存储(StorageClass)</h4><p>配置文件：<code>/root/rook/deploy/examples/csi/cephfs/storageclass.yaml</code></p><figure class="highlight awk"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs awk">cd <span class="hljs-regexp">/root/</span>rook<span class="hljs-regexp">/deploy/</span>examples<span class="hljs-regexp">/csi/</span>cephfs<br>kubectl apply -f storageclass.yaml<br></code></pre></td></tr></table></figure><p><img src="https://article.biliimg.com/bfs/article/f7b4834f56ae9655ead2d9fc22c307b4697559838.png" alt="image-20231119210625832"></p><h4 id="共享文件存储使用示例"><a href="#共享文件存储使用示例" class="headerlink" title="共享文件存储使用示例"></a>共享文件存储使用示例</h4><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br></pre></td><td class="code"><pre><code class="hljs yaml"><span class="hljs-string">cat</span> <span class="hljs-string">&gt;</span> <span class="hljs-string">nginx-deploy-cephfs.yaml</span> <span class="hljs-string">&lt;&lt;</span> <span class="hljs-string">&quot;EOF&quot;</span><br> <br><span class="hljs-attr">apiVersion:</span> <span class="hljs-string">apps/v1</span><br><span class="hljs-attr">kind:</span> <span class="hljs-string">Deployment</span><br><span class="hljs-attr">metadata:</span><br>  <span class="hljs-attr">labels:</span><br>    <span class="hljs-attr">app:</span> <span class="hljs-string">nginx-deploy-cephfs</span><br>  <span class="hljs-attr">name:</span> <span class="hljs-string">nginx-deploy-cephfs</span><br><span class="hljs-attr">spec:</span><br>  <span class="hljs-attr">replicas:</span> <span class="hljs-number">3</span><br>  <span class="hljs-attr">selector:</span><br>    <span class="hljs-attr">matchLabels:</span><br>      <span class="hljs-attr">app:</span> <span class="hljs-string">nginx-deploy-cephfs</span><br>  <span class="hljs-attr">template:</span><br>    <span class="hljs-attr">metadata:</span><br>      <span class="hljs-attr">labels:</span><br>        <span class="hljs-attr">app:</span> <span class="hljs-string">nginx-deploy-cephfs</span><br>    <span class="hljs-attr">spec:</span><br>      <span class="hljs-attr">containers:</span><br>      <span class="hljs-bullet">-</span> <span class="hljs-attr">image:</span> <span class="hljs-string">registry.cn-hangzhou.aliyuncs.com/qianyios/nginx:latest</span><br>        <span class="hljs-attr">name:</span> <span class="hljs-string">nginx</span><br>        <span class="hljs-attr">volumeMounts:</span><br>        <span class="hljs-bullet">-</span> <span class="hljs-attr">name:</span> <span class="hljs-string">data</span><br>          <span class="hljs-attr">mountPath:</span> <span class="hljs-string">/usr/share/nginx/html</span><br>      <span class="hljs-attr">volumes:</span><br>      <span class="hljs-bullet">-</span> <span class="hljs-attr">name:</span> <span class="hljs-string">data</span><br>        <span class="hljs-attr">persistentVolumeClaim:</span><br>          <span class="hljs-attr">claimName:</span> <span class="hljs-string">nginx-cephfs-pvc</span><br><span class="hljs-meta">---</span><br><span class="hljs-attr">apiVersion:</span> <span class="hljs-string">v1</span><br><span class="hljs-attr">kind:</span> <span class="hljs-string">PersistentVolumeClaim</span><br><span class="hljs-attr">metadata:</span><br>  <span class="hljs-attr">name:</span> <span class="hljs-string">nginx-cephfs-pvc</span><br><span class="hljs-attr">spec:</span><br>  <span class="hljs-attr">storageClassName:</span> <span class="hljs-string">&quot;rook-cephfs&quot;</span><br>  <span class="hljs-attr">accessModes:</span><br>    <span class="hljs-bullet">-</span> <span class="hljs-string">ReadWriteMany</span><br>  <span class="hljs-attr">resources:</span><br>    <span class="hljs-attr">requests:</span><br>      <span class="hljs-attr">storage:</span> <span class="hljs-string">1Gi</span><br><span class="hljs-string">EOF</span><br><span class="hljs-string">kubectl</span> <span class="hljs-string">apply</span> <span class="hljs-string">-f</span> <span class="hljs-string">nginx-deploy-cephfs.yaml</span><br><span class="hljs-string">kubectl</span> <span class="hljs-string">get</span> <span class="hljs-string">pod</span> <span class="hljs-string">-o</span> <span class="hljs-string">wide</span> <span class="hljs-string">|</span> <span class="hljs-string">grep</span> <span class="hljs-string">cephfs</span><br><span class="hljs-string">kubectl</span> <span class="hljs-string">exec</span> <span class="hljs-string">-it</span> <span class="hljs-string">nginx-deploy-cephfs-6dc8797866-4s564</span> <span class="hljs-string">bash</span><br><span class="hljs-string">echo</span> <span class="hljs-string">&quot;hello cephfs&quot;</span> <span class="hljs-string">&gt;</span> <span class="hljs-string">/usr/share/nginx/html/index.html</span> <span class="hljs-string">&amp;&amp;</span> <span class="hljs-string">exit</span><br><br><span class="hljs-comment">#测试完删除 </span><br><span class="hljs-string">kubectl</span> <span class="hljs-string">delete</span> <span class="hljs-string">-f</span> <span class="hljs-string">nginx-deploy-cephfs.yaml</span><br></code></pre></td></tr></table></figure><p><img src="https://article.biliimg.com/bfs/article/c28709adaffbff61c9648f046b6b5f26697559838.png" alt="image-20231119215220294"></p><h2 id="在K8S中直接调用出ceph命令"><a href="#在K8S中直接调用出ceph命令" class="headerlink" title="在K8S中直接调用出ceph命令"></a>在K8S中直接调用出ceph命令</h2><figure class="highlight awk"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><code class="hljs awk"><span class="hljs-comment">#安装epel源</span><br>yum install epel-release -y<br><br><span class="hljs-comment">#安装ceph仓库</span><br>yum install https:<span class="hljs-regexp">//mi</span>rrors.aliyun.com<span class="hljs-regexp">/ceph/</span>rpm-octopus<span class="hljs-regexp">/el7/</span>noarch/ceph-release-<span class="hljs-number">1</span>-<span class="hljs-number">1</span>.el7.noarch.rpm -y<br>yum list ceph-common  --showduplicates |sort -r<br><br><span class="hljs-comment">#安装ceph客户端</span><br>yum install ceph-common -y<br></code></pre></td></tr></table></figure><p>同步ceph中的认证文件</p><figure class="highlight awk"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><code class="hljs awk">kubectl -n rook-ceph exec -it deploy/rook-ceph-tools -- bash<br><br>[root@master1 ~]<span class="hljs-comment"># kubectl -n rook-ceph exec -it deploy/rook-ceph-tools -- bash</span><br><br>bash-<span class="hljs-number">4.4</span>$  cat <span class="hljs-regexp">/etc/</span>ceph/ceph.conf<br>[global]<br>mon_host = <span class="hljs-number">10.97</span>.<span class="hljs-number">121.57</span>:<span class="hljs-number">6789</span>,<span class="hljs-number">10.104</span>.<span class="hljs-number">235.210</span>:<span class="hljs-number">6789</span>,<span class="hljs-number">10.96</span>.<span class="hljs-number">136.90</span>:<span class="hljs-number">6789</span><br><br>[client.admin]<br>keyring = <span class="hljs-regexp">/etc/</span>ceph/keyring<br><br>bash-<span class="hljs-number">4.4</span>$ cat <span class="hljs-regexp">/etc/</span>ceph/keyring<br>[client.admin]<br>key = AQC241lltDbVKBAANrzwgqZd1A2eY+<span class="hljs-number">8</span>h1A+BOg==<br>bash-<span class="hljs-number">4.4</span>$<br><br><br>注意这两个文件，复制内容之后<span class="hljs-keyword">exit</span>退出<br><br></code></pre></td></tr></table></figure><p><img src="https://article.biliimg.com/bfs/article/9217dc38274e8df58cc2a34d6d0aebab697559838.png" alt="image-20231119221441175"></p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><code class="hljs javascript"><br>直接在master1创建这两个文件（这里的master1是指我要在master1可以调用ceph的客户端）<br><br>cat &gt; <span class="hljs-regexp">/etc/</span>ceph/ceph.<span class="hljs-property">conf</span> &lt;&lt; <span class="hljs-string">&quot;EOF&quot;</span><br>[<span class="hljs-variable language_">global</span>]<br>mon_host = <span class="hljs-number">10.97</span><span class="hljs-number">.121</span><span class="hljs-number">.57</span>:<span class="hljs-number">6789</span>,<span class="hljs-number">10.104</span><span class="hljs-number">.235</span><span class="hljs-number">.210</span>:<span class="hljs-number">6789</span>,<span class="hljs-number">10.96</span><span class="hljs-number">.136</span><span class="hljs-number">.90</span>:<span class="hljs-number">6789</span><br><br>[client.<span class="hljs-property">admin</span>]<br>keyring = <span class="hljs-regexp">/etc/</span>ceph/keyring<br><span class="hljs-variable constant_">EOF</span><br><br>cat &gt; <span class="hljs-regexp">/etc/</span>ceph/keyring &lt;&lt; <span class="hljs-string">&quot;EOF&quot;</span><br>[client.<span class="hljs-property">admin</span>]<br>key = <span class="hljs-title class_">AQC241</span>lltDbVKBAANrzwgqZd1A2eY+8h1A+<span class="hljs-title class_">BOg</span>==<br><span class="hljs-variable constant_">EOF</span><br></code></pre></td></tr></table></figure><p>当你添加完之后直接调用ceph的命令</p><p><img src="https://article.biliimg.com/bfs/article/4728072c2f768afa8434479f9f2cb547697559838.png" alt="image-20231119221546943"></p><h2 id="删除pvc，sc及对应的存储资源"><a href="#删除pvc，sc及对应的存储资源" class="headerlink" title="删除pvc，sc及对应的存储资源"></a>删除pvc，sc及对应的存储资源</h2><figure class="highlight maxima"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><code class="hljs maxima">- 按需删除pvc、<span class="hljs-built_in">pv</span><br>kubectl <span class="hljs-built_in">get</span> pvc -n [namespace] | awk &#x27;&#123;<span class="hljs-built_in">print</span> $<span class="hljs-number">1</span>&#125;;&#x27; | xargs kubectl <span class="hljs-built_in">delete</span> pvc -n [namespace]<br>kubectl <span class="hljs-built_in">get</span> <span class="hljs-built_in">pv</span> | grep Released | awk &#x27;&#123;<span class="hljs-built_in">print</span> $<span class="hljs-number">1</span>&#125;;&#x27; | xargs kubectl <span class="hljs-built_in">delete</span> <span class="hljs-built_in">pv</span><br> <br>- 删除块存储及SC<br>kubectl <span class="hljs-built_in">delete</span> -n rook-ceph cephblockpool replicapool<br>kubectl <span class="hljs-built_in">delete</span> storageclass rook-ceph-<span class="hljs-built_in">block</span><br><br></code></pre></td></tr></table></figure><div class="tbsm" style="margin-top:54px;"><div class="tbsm-top"><span><svg t="1674654360507" class="icon" viewBox="0 0 1024 1024" version="1.1" xmlns="http://www.w3.org/2000/svg" p-id="987" data-spm-anchor-id="a313x.7781069.0.i0" width="35" height="35"><path d="M410.49 97.74H155.08a56.74 56.74 0 0 0-56.84 56.73V410a56.84 56.84 0 0 0 56.84 56.84h255.41A56.83 56.83 0 0 0 467.32 410V154.58a56.83 56.83 0 0 0-56.83-56.84zM410.49 558.74H155.08a56.74 56.74 0 0 0-56.84 56.73V871a56.84 56.84 0 0 0 56.84 56.84h255.41A56.83 56.83 0 0 0 467.32 871V615.58a56.83 56.83 0 0 0-56.83-56.84zM871.49 558.74H616.08a56.74 56.74 0 0 0-56.84 56.73V871a56.84 56.84 0 0 0 56.84 56.84h255.41A56.83 56.83 0 0 0 928.32 871V615.58a56.83 56.83 0 0 0-56.83-56.84z" fill="#66EEFF" p-id="988"></path><path d="M410.49 558.74h-4.14A475 475 0 0 0 299.52 859.6a481.16 481.16 0 0 0 4.84 68.22h106.13A56.83 56.83 0 0 0 467.32 871V615.58a56.83 56.83 0 0 0-56.83-56.84zM871.49 558.74H616.08a56.74 56.74 0 0 0-56.84 56.73V871a56.84 56.84 0 0 0 56.84 56.84h255.41A56.83 56.83 0 0 0 928.32 871V615.58a56.83 56.83 0 0 0-56.83-56.84z" fill="#C2F8FF" p-id="989"></path></svg></span><span style="font-size:30px;"> 特别声明</span></div><div class="tbsm-wz">千屹博客旗下的所有文章，是通过本人课堂学习和课外自学所精心整理的知识巨著<br/>难免会有出错的地方<br/>如果细心的你发现了小失误，可以在下方评论区告诉我，或者私信我！<br />非常感谢大家的热烈支持！</div></div>]]></content>
    
    
    
    <tags>
      
      <tag>K8s</tag>
      
      <tag>Ceph</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>Ansible-Roles</title>
    <link href="/2023/11/13/ansible/Ansible-Roles/"/>
    <url>/2023/11/13/ansible/Ansible-Roles/</url>
    
    <content type="html"><![CDATA[<meta name="referrer" content="no-referrer"/><h1 id="Roles"><a href="#Roles" class="headerlink" title="Roles"></a>Roles</h1><figure class="highlight actionscript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs actionscript">·由来: ansible自动化运行，基础由AD-Hoc命令来完成，在命令变多时，产生了playbook进行管理任务，简单任务使用playcook可以轻松处理，但是有复杂任务时单个playbook不可以胜任了，这时需要把多个playbook进行组合，少量用<span class="hljs-meta"><span class="hljs-keyword">include</span>将剧本中任务互相关联即可完成，但是playbook还在增多的情况时就不方便管理了，这时引入roles对playbook进行有效组织就十分必要了</span><br><span class="hljs-meta">· Roles:角色，是ansible自1.2版本开始引入的新特性</span><br><span class="hljs-meta">·目的:用于层次性，结构化地组织playbook, roles能够根据层次型结构自动装载变量、文件、任务、模块及触发器·方法: roles通过分别将放置于变量、文件、任务、模块及触发器单独的目录中，并可以便捷地<span class="hljs-keyword">include</span>它们的一种机制·应用:角色一般用于基于主机构建服务的场景中、但也可以是用于构建守护进程等场景中</span><br></code></pre></td></tr></table></figure><h2 id="roles默认路径设置"><a href="#roles默认路径设置" class="headerlink" title="roles默认路径设置"></a>roles默认路径设置</h2><figure class="highlight awk"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs awk"><span class="hljs-regexp">/etc/</span>ansible/ansible.cfg<br>roles_path= <span class="hljs-regexp">/etc/</span>ansible/roles<br></code></pre></td></tr></table></figure><h2 id="Roles各目录结构及作用"><a href="#Roles各目录结构及作用" class="headerlink" title="Roles各目录结构及作用"></a>Roles各目录结构及作用</h2><figure class="highlight gradle"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><code class="hljs gradle">每个角色，以特定的层级目录结构进行组织<br>roles目录结构：<br>playbook.yml  调用角色<br>roles/<br>  <span class="hljs-keyword">project</span>/ (角色名称)<br>    tasks/<br>    files/<br>    vars/<br>    templates/<br>    handlers/<br>    <span class="hljs-keyword">default</span>/ 不常用，设定默认变量时使用此目录中的main.yml文件<br>    meta/    不常用，定义当前角色的特殊设定及其依赖关系,至少应该包含一个名为main.yml的文件；其它文件需在此文件中通过<span class="hljs-keyword">include</span>进行包含<br>各目录的作用：<br><span class="hljs-regexp">/roles/</span><span class="hljs-keyword">project</span>/ :项目名称,有以下子目录，<span class="hljs-keyword">project</span>可以是mysql\httpd\nginx\memcached等<br>    files/ ：存放由<span class="hljs-keyword">copy</span>或script模块等调用的文件<br>    templates/：template模块查找所需要模板文件的目录<br>    tasks/：定义<span class="hljs-keyword">task</span>,role的基本元素，至少应该包含一个名为main.yml的文件, 其定义了此角色的任务列表.<br>             在handler中使用<span class="hljs-keyword">include</span>包含的其它的handler文件也应该位于此目录中；<br>    handlers/：至少应该包含一个名为main.yml的文件；用于定义此角色用到的各handler；<br>               其它的文件需要在此文件中通过<span class="hljs-keyword">include</span>进行包含<br>    vars/：定义变量，至少应该包含一个名为main.yml的文件,；<br>           其它的文件需要在此文件中通过<span class="hljs-keyword">include</span>进行包含<br>    meta/：定义当前角色的特殊设定及其依赖关系,至少应该包含一个名为main.yml的文件，<br>           其它文件需在此文件中通过<span class="hljs-keyword">include</span>进行包含, ansible1.<span class="hljs-number">3</span>及其以后的版本才支持；<br>    defaults/：为当前角色设定默认变量时使用此目录；应当包含一个main.yml文件<br></code></pre></td></tr></table></figure><h3 id="创建role框架"><a href="#创建role框架" class="headerlink" title="创建role框架"></a>创建role框架</h3><p>您可以使用标准Linux命令创建新角色所需的所有子目录和文件。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs bash"><span class="hljs-built_in">cd</span> /etc/ansible/roles/<br><span class="hljs-built_in">mkdir</span>  httpd<br><span class="hljs-built_in">cd</span> httpd<br><span class="hljs-built_in">mkdir</span>  tasks  handlers  vars  meta  defaults templates files <br></code></pre></td></tr></table></figure><p>或者可以运行ansible-galaxy init来创建新角色的目录结构。指定角色的名称作为命令的参数，该命令在当前工作目录中为新角色创建子目录。</p><figure class="highlight awk"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><code class="hljs awk">cd <span class="hljs-regexp">/etc/</span>ansible/roles<br>ansible-galaxy init httpd<br>tree httpd<br>[root@controller roles]<span class="hljs-comment"># tree httpd</span><br>httpd      <span class="hljs-comment">#具体的⾓⾊项⽬名称，   ⽐如nginx、tomcat、php  (⾃由设置)</span><br>├── defaults  <span class="hljs-comment">#⽤于为当前⾓⾊设定默认变量，  此⽬录应当包含⼀个main.yml⽂件</span><br>│   └── main.yml  <span class="hljs-comment">#类似代码中的主函数，  进⾏统⼀管理</span><br>├── files      <span class="hljs-comment">#⽤来存放由copy模块或script模块等模块调⽤的⽂件</span><br>├── handlers    <span class="hljs-comment">#⽤于定义此⾓⾊中触发条件时执⾏的动作，  此⽬录应当包含⼀个main.yml⽂件</span><br>│   └── main.yml<br>├── meta      <span class="hljs-comment">#⽤于定义此⾓⾊的特殊设定及其依赖关系，  此⽬录应当包含⼀个main.yml⽂件</span><br>│   └── main.yml<br>├── README.md   <span class="hljs-comment">#说明⽂件</span><br>├── tasks       <span class="hljs-comment">#⽤于定义当前⾓⾊的任务列表，  此⽬录应当包含⼀个main.yml⽂件</span><br>│   └── main.yml<br>├── templates  <span class="hljs-comment">#⽤来存放jinjia2模板，template模块会⾃动在此⽬录中寻找jinjia2模板⽂件</span><br>├── tests   <span class="hljs-comment">#⽤于存放测试role本⾝功能的playbook和主机定义⽂件，  在开发测试阶段⽐较常⽤ ,此⽬录应当包含⼀个main.yml⽂件和⾃⾝资源设定invetory</span><br>│   ├── inventory<br>│   └── test.yml<br>└── vars    <span class="hljs-comment">#⽤于定义此⾓⾊⽤到的变量，  此⽬录应当包含⼀个main.yml⽂件</span><br>    └── main.yml<br><br></code></pre></td></tr></table></figure><h1 id="实验任务：安装httpd服务"><a href="#实验任务：安装httpd服务" class="headerlink" title="实验任务：安装httpd服务"></a>实验任务：安装httpd服务</h1><p>原始的playbook版本</p><p>1、制作主页</p><p>echo hi &gt; index.html</p><p>2、拷贝本机httpd的配置文件为httpd.conf.j2模版，并修改</p><p>cp &#x2F;etc&#x2F;httpd&#x2F;conf&#x2F;httpd.conf  httpd.conf.j2</p><p>vim  httpd.j2   #42行 修改为</p><figure class="highlight django"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs django"><span class="hljs-template-tag">&#123;% <span class="hljs-name"><span class="hljs-name">if</span></span> http_port is defined %&#125;</span><span class="language-xml"></span><br><span class="language-xml">Listen </span><span class="hljs-template-variable">&#123;&#123; ansible_facts.default_ipv4.address &#125;&#125;</span><span class="language-xml">:</span><span class="hljs-template-variable">&#123;&#123; http_port &#125;&#125;</span><span class="language-xml"></span><br><span class="language-xml"></span><span class="hljs-template-tag">&#123;% <span class="hljs-name"><span class="hljs-name">endif</span></span> %&#125;</span><br></code></pre></td></tr></table></figure><p>3、编写playbook文件，</p><p>创建变量http_port: 8080</p><p>执行任务：</p><p>1)安装httpd</p><p>2)拷贝主页</p><p>3)拷贝配置（做触发器）</p><p>4)防火墙放通自定义的端口</p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><code class="hljs yaml"><span class="hljs-bullet">-</span> <span class="hljs-attr">name:</span> <span class="hljs-string">firewalld</span> <span class="hljs-string">configuration</span><br>  <span class="hljs-attr">firewalld:</span>  <br>    <span class="hljs-attr">port:</span> <span class="hljs-string">&quot;<span class="hljs-template-variable">&#123;&#123;  http_port &#125;&#125;</span>/tcp&quot;</span><br>    <span class="hljs-attr">permanent:</span> <span class="hljs-literal">yes</span> <br>    <span class="hljs-attr">immediate:</span> <span class="hljs-literal">yes</span> <br>    <span class="hljs-attr">state:</span> <span class="hljs-string">enabled</span><br>  <span class="hljs-attr">when:</span> <span class="hljs-string">http_port</span> <span class="hljs-string">is</span> <span class="hljs-string">defined</span><br></code></pre></td></tr></table></figure><p>5)开启服务</p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br></pre></td><td class="code"><pre><code class="hljs yaml"><span class="hljs-meta">---                                                                                                                                                                           </span><br><span class="hljs-bullet">-</span> <span class="hljs-attr">hosts:</span> <span class="hljs-string">all</span> <br>  <span class="hljs-attr">remote_user:</span> <span class="hljs-string">root</span><br>  <span class="hljs-attr">vars:</span><br>    <span class="hljs-attr">http_port:</span> <span class="hljs-number">8080</span><br>  <span class="hljs-attr">tasks:</span><br>  <span class="hljs-bullet">-</span> <span class="hljs-attr">name:</span> <span class="hljs-string">install</span> <span class="hljs-string">httpd</span> <span class="hljs-string">package</span><br>    <span class="hljs-attr">yum:</span><br>      <span class="hljs-attr">name:</span> <span class="hljs-string">httpd</span><br>      <span class="hljs-attr">state:</span> <span class="hljs-string">present</span><br>  <span class="hljs-bullet">-</span> <span class="hljs-attr">name:</span> <span class="hljs-string">create</span> <span class="hljs-string">a</span> <span class="hljs-string">web</span> <span class="hljs-string">content</span><br>    <span class="hljs-attr">copy:</span><br>      <span class="hljs-attr">src:</span> <span class="hljs-string">index.html</span><br>      <span class="hljs-attr">dest:</span> <span class="hljs-string">/var/www/html/index.html</span><br>  <span class="hljs-bullet">-</span> <span class="hljs-attr">name:</span> <span class="hljs-string">config</span> <span class="hljs-string">file</span><br>    <span class="hljs-attr">template:</span><br>      <span class="hljs-attr">src:</span> <span class="hljs-string">httpd.conf.j2</span><br>      <span class="hljs-attr">dest:</span> <span class="hljs-string">/etc/httpd/conf/httpd.conf</span><br>    <span class="hljs-attr">notify:</span> <span class="hljs-string">restart_httpd</span><br>    <span class="hljs-attr">when:</span> <span class="hljs-string">http_port</span> <span class="hljs-string">is</span> <span class="hljs-string">defined</span>                                                                                                                                                <br>  <span class="hljs-bullet">-</span> <span class="hljs-attr">name:</span> <span class="hljs-string">firewalld</span> <span class="hljs-string">configuration</span><br>    <span class="hljs-attr">firewalld:</span>                                                                   <br>      <span class="hljs-attr">port:</span> <span class="hljs-string">&quot;<span class="hljs-template-variable">&#123;&#123;  http_port &#125;&#125;</span>/tcp&quot;</span><br>      <span class="hljs-attr">permanent:</span> <span class="hljs-literal">yes</span> <br>      <span class="hljs-attr">immediate:</span> <span class="hljs-literal">yes</span> <br>      <span class="hljs-attr">state:</span> <span class="hljs-string">enabled</span><br>    <span class="hljs-attr">when:</span> <span class="hljs-string">http_port</span> <span class="hljs-string">is</span> <span class="hljs-string">defined</span><br>  <span class="hljs-bullet">-</span> <span class="hljs-attr">name:</span> <span class="hljs-string">start</span> <span class="hljs-string">service</span><br>    <span class="hljs-attr">service:</span> <br>      <span class="hljs-attr">name:</span> <span class="hljs-string">httpd</span> <br>      <span class="hljs-attr">state:</span> <span class="hljs-string">started</span> <br>      <span class="hljs-attr">enabled:</span> <span class="hljs-literal">yes</span><br>  <span class="hljs-attr">handlers:</span><br>  <span class="hljs-bullet">-</span> <span class="hljs-attr">name:</span> <span class="hljs-string">restart_httpd</span><br>    <span class="hljs-attr">service:</span><br>      <span class="hljs-attr">name:</span> <span class="hljs-string">httpd</span><br>      <span class="hljs-attr">state:</span> <span class="hljs-string">restarted</span><br></code></pre></td></tr></table></figure><p>验证端口及主页</p><p>ansible all -m shell -a “ss -tunlp|grep httpd” </p><h2 id="任务分析："><a href="#任务分析：" class="headerlink" title="任务分析："></a>任务分析：</h2><p>1.配置 httpd 的时候，可能存在配置文件，配置文件可能含有变量</p><p>2.必要变量的定义</p><p>3.源码文件的定义</p><h2 id="1-gt-创建httpd角色框架"><a href="#1-gt-创建httpd角色框架" class="headerlink" title="1&gt; 创建httpd角色框架"></a>1&gt; 创建httpd角色框架</h2><figure class="highlight csharp"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs csharp">ansible-galaxy <span class="hljs-keyword">init</span> httpd<br></code></pre></td></tr></table></figure><p>查看目录结构</p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><code class="hljs css"><span class="hljs-selector-attr">[root@controller roles]</span># tree httpd<br>httpd<br>├── defaults<br>│  └── <span class="hljs-selector-tag">main</span><span class="hljs-selector-class">.yml</span><br>├── files<br>├── handlers<br>│   └── <span class="hljs-selector-tag">main</span><span class="hljs-selector-class">.yml</span><br>├── meta<br>│   └── <span class="hljs-selector-tag">main</span><span class="hljs-selector-class">.yml</span><br>├── README<span class="hljs-selector-class">.md</span><br>├── tasks<br>│   └── <span class="hljs-selector-tag">main</span><span class="hljs-selector-class">.yml</span><br>├── templates<br>├── tests<br>│   ├── inventory<br>│   └── test<span class="hljs-selector-class">.yml</span><br>└── vars<br>    └── <span class="hljs-selector-tag">main</span><span class="hljs-selector-class">.yml</span><br></code></pre></td></tr></table></figure><h2 id="2-gt-部署完善httpd角色框架"><a href="#2-gt-部署完善httpd角色框架" class="headerlink" title="2&gt; 部署完善httpd角色框架"></a>2&gt; 部署完善httpd角色框架</h2><figure class="highlight stylus"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs stylus">cd roles/httpd/tasks/<br>touch install<span class="hljs-selector-class">.yml</span> conf_template<span class="hljs-selector-class">.yml</span> service<span class="hljs-selector-class">.yml</span> index<span class="hljs-selector-class">.yml</span>   httpd_firewalld.yml<br></code></pre></td></tr></table></figure><h2 id="3-gt-定义分任务-tasks-x2F-中存放"><a href="#3-gt-定义分任务-tasks-x2F-中存放" class="headerlink" title="3&gt; 定义分任务(tasks&#x2F;中存放)"></a>3&gt; 定义分任务(tasks&#x2F;中存放)</h2><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br></pre></td><td class="code"><pre><code class="hljs yaml"><span class="hljs-string">vim</span> <span class="hljs-string">install.yml</span><br><span class="hljs-bullet">-</span> <span class="hljs-attr">name:</span> <span class="hljs-string">install</span> <span class="hljs-string">httpd</span> <span class="hljs-string">package</span><br>  <span class="hljs-attr">yum:</span> <br>    <span class="hljs-attr">name:</span> <span class="hljs-string">httpd</span><br>    <span class="hljs-attr">state:</span> <span class="hljs-string">present</span><br>     <br><span class="hljs-string">vim</span> <span class="hljs-string">conf_template.yml</span><br><span class="hljs-bullet">-</span> <span class="hljs-attr">name:</span> <span class="hljs-string">config</span> <span class="hljs-string">file</span><br>  <span class="hljs-attr">template:</span> <br>    <span class="hljs-attr">src:</span> <span class="hljs-string">httpd.conf.j2</span> <br>    <span class="hljs-attr">dest:</span> <span class="hljs-string">/etc/httpd/conf/httpd.conf</span> <br>  <span class="hljs-attr">notify:</span> <span class="hljs-string">restart_httpd</span><br>  <span class="hljs-attr">when:</span> <span class="hljs-string">http_port</span> <span class="hljs-string">is</span> <span class="hljs-string">defined</span><br>         <br><span class="hljs-string">vim</span> <span class="hljs-string">service.yml</span><br><span class="hljs-bullet">-</span> <span class="hljs-attr">name:</span> <span class="hljs-string">start</span> <span class="hljs-string">service</span><br>  <span class="hljs-attr">service:</span> <br>    <span class="hljs-attr">name:</span> <span class="hljs-string">httpd</span> <br>    <span class="hljs-attr">state:</span> <span class="hljs-string">started</span> <br>    <span class="hljs-attr">enabled:</span> <span class="hljs-literal">yes</span><br>    <br><span class="hljs-string">vim</span>  <span class="hljs-string">index.yml</span><br><span class="hljs-bullet">-</span> <span class="hljs-attr">name:</span> <span class="hljs-string">create</span> <span class="hljs-string">a</span> <span class="hljs-string">web</span> <span class="hljs-string">content</span><br>  <span class="hljs-attr">copy:</span><br>    <span class="hljs-attr">src:</span> <span class="hljs-string">index.html</span><br>    <span class="hljs-attr">dest:</span> <span class="hljs-string">/var/www/html/index.html</span><br><br><span class="hljs-string">vim</span> <span class="hljs-string">httpd_firewalld.yml</span><br><span class="hljs-bullet">-</span> <span class="hljs-attr">name:</span> <span class="hljs-string">firewalld</span> <span class="hljs-string">configuration</span><br>  <span class="hljs-attr">firewalld:</span><br>    <span class="hljs-attr">port:</span> <span class="hljs-string">&quot;<span class="hljs-template-variable">&#123;&#123;  http_port &#125;&#125;</span>/tcp&quot;</span><br>    <span class="hljs-attr">permanent:</span> <span class="hljs-literal">yes</span><br>    <span class="hljs-attr">immediate:</span> <span class="hljs-literal">yes</span><br>    <span class="hljs-attr">state:</span> <span class="hljs-string">enabled</span><br>  <span class="hljs-attr">when:</span> <span class="hljs-string">http_port</span> <span class="hljs-string">is</span> <span class="hljs-string">defined</span><br></code></pre></td></tr></table></figure><h2 id="4-gt-定义主任务-tasks-x2F-main-yml"><a href="#4-gt-定义主任务-tasks-x2F-main-yml" class="headerlink" title="4&gt;定义主任务(tasks&#x2F;main.yml)"></a>4&gt;定义主任务(tasks&#x2F;main.yml)</h2><figure class="highlight stylus"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><code class="hljs stylus">创建<span class="hljs-selector-tag">main</span>.yml主控文件,调用以上单独的yml文件,<span class="hljs-selector-tag">main</span>.yml定义了谁先执行谁后执行的顺序<br>vim <span class="hljs-selector-tag">main</span><span class="hljs-selector-class">.yml</span><br>- include: install<span class="hljs-selector-class">.yml</span><br>- include: index<span class="hljs-selector-class">.yml</span><br>- include: conf_template<span class="hljs-selector-class">.yml</span><br>- include: httpd_firewalld<span class="hljs-selector-class">.yml</span><br>- include: service.yml<br></code></pre></td></tr></table></figure><h2 id="5-gt-定义变量（vars-x2F-main-yml）"><a href="#5-gt-定义变量（vars-x2F-main-yml）" class="headerlink" title="5&gt;定义变量（vars&#x2F;main.yml）"></a>5&gt;定义变量（vars&#x2F;main.yml）</h2><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs yaml"><span class="hljs-string">vim</span> <span class="hljs-string">/etc/ansible/roles/httpd/vars/main.yml</span><br><br><span class="hljs-meta">---</span><br><span class="hljs-comment">#vars file for httpd</span><br><span class="hljs-attr">http_port:</span> <span class="hljs-number">8080</span><br></code></pre></td></tr></table></figure><h2 id="6-gt-定义首页文件（files-x2F-index-html）"><a href="#6-gt-定义首页文件（files-x2F-index-html）" class="headerlink" title="6&gt; 定义首页文件（files&#x2F;index.html）"></a>6&gt; 定义首页文件（files&#x2F;index.html）</h2><figure class="highlight awk"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs awk">cd    <span class="hljs-regexp">/etc/</span>ansible<span class="hljs-regexp">/roles/</span>httpd<span class="hljs-regexp">/files/</span><br>vim index.html<br>&lt;h1&gt; welcome to wd home &lt;\h1&gt;<br></code></pre></td></tr></table></figure><h2 id="7-gt-定义模板-templates-x2F-httpd-conf-j2"><a href="#7-gt-定义模板-templates-x2F-httpd-conf-j2" class="headerlink" title="7&gt; 定义模板(templates&#x2F;httpd.conf.j2 )"></a>7&gt; 定义模板(templates&#x2F;httpd.conf.j2 )</h2><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><code class="hljs fr">yum -y install httpd<br><br>cp /etc/httpd/conf/httpd.conf  /etc/ansible/roles/httpd/templates/httpd.conf.j2 <br><br>vim templates/httpd.conf.j2<br>将LISTEN 80 行修改为以下内容<br>&#123;% if http_port is defined %&#125;<br>Listen &#123;&#123; ansible_facts.default_ipv4.address &#125;&#125;:&#123;&#123; http_port &#125;&#125;<br>&#123;% endif %&#125;<br></code></pre></td></tr></table></figure><h2 id="8-gt-定义角色处理程序（handlers-x2F-mail-yml）"><a href="#8-gt-定义角色处理程序（handlers-x2F-mail-yml）" class="headerlink" title="8&gt; 定义角色处理程序（handlers&#x2F;mail.yml）"></a>8&gt; 定义角色处理程序（handlers&#x2F;mail.yml）</h2><figure class="highlight awk"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs awk">vim <span class="hljs-regexp">/etc/</span>ansible<span class="hljs-regexp">/roles/</span>httpd<span class="hljs-regexp">/handlers/m</span>ain.yml<br>- name: restart_httpd<br>  service: <br>    name: httpd <br>    state: restarted<br></code></pre></td></tr></table></figure><h2 id="9-gt-调用角色，配置httpd服务（roles-x2F-role-httpd-yml）"><a href="#9-gt-调用角色，配置httpd服务（roles-x2F-role-httpd-yml）" class="headerlink" title="9&gt; 调用角色，配置httpd服务（roles&#x2F;role_httpd.yml）"></a>9&gt; 调用角色，配置httpd服务（roles&#x2F;role_httpd.yml）</h2><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><code class="hljs yaml"><span class="hljs-string">cd</span> <span class="hljs-string">/etc/ansidle/roles</span><br><span class="hljs-string">vim</span> <span class="hljs-string">role_httpd.yml</span><br><span class="hljs-meta">---</span><br><span class="hljs-comment"># httpd role</span><br><span class="hljs-bullet">-</span> <span class="hljs-attr">name:</span> <span class="hljs-string">httpd</span> <span class="hljs-string">deployment</span><br>  <span class="hljs-attr">hosts:</span> <span class="hljs-string">websrvs</span><br>  <span class="hljs-attr">remote_user:</span> <span class="hljs-string">root</span>    <br>  <br>  <span class="hljs-attr">roles:</span>       <span class="hljs-comment">#调用角色</span><br>  <span class="hljs-bullet">-</span> <span class="hljs-string">httpd</span>   <br></code></pre></td></tr></table></figure><h2 id="10-gt-检查语法及冒烟运行"><a href="#10-gt-检查语法及冒烟运行" class="headerlink" title="10&gt; 检查语法及冒烟运行"></a>10&gt; 检查语法及冒烟运行</h2><figure class="highlight mathematica"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs mathematica"><span class="hljs-variable">ansible</span><span class="hljs-operator">-</span><span class="hljs-variable">playbook</span> <span class="hljs-type">role_httpd</span><span class="hljs-operator">.</span><span class="hljs-variable">yml</span> <span class="hljs-operator">-</span><span class="hljs-built_in">C</span><br></code></pre></td></tr></table></figure><h2 id="11-gt-正式执行"><a href="#11-gt-正式执行" class="headerlink" title="11&gt;正式执行"></a>11&gt;正式执行</h2><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs">ansible-playbook role_httpd.yml<br></code></pre></td></tr></table></figure><h2 id="12-gt-验证服务"><a href="#12-gt-验证服务" class="headerlink" title="12&gt;验证服务"></a>12&gt;验证服务</h2><figure class="highlight apache"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs apache"><span class="hljs-attribute">ansible</span> <span class="hljs-literal">all</span> -m shell -a <span class="hljs-string">&quot;ss -tunlp |grep httpd&quot;</span><br><span class="hljs-attribute">curl</span> <span class="hljs-number">192.168.142.101:8080</span><br><br></code></pre></td></tr></table></figure><p><code>可以返回目录！</code></p><p><a href="https://blog.qianyios.top/2023/09/10/ansible/Ansible-%E6%80%BB%E6%89%8B%E5%86%8C/">Ansible练习目录 - 严千屹博客 (qianyios.top)</a></p><div class="tbsm" style="margin-top:54px;"><div class="tbsm-top"><span><svg t="1674654360507" class="icon" viewBox="0 0 1024 1024" version="1.1" xmlns="http://www.w3.org/2000/svg" p-id="987" data-spm-anchor-id="a313x.7781069.0.i0" width="35" height="35"><path d="M410.49 97.74H155.08a56.74 56.74 0 0 0-56.84 56.73V410a56.84 56.84 0 0 0 56.84 56.84h255.41A56.83 56.83 0 0 0 467.32 410V154.58a56.83 56.83 0 0 0-56.83-56.84zM410.49 558.74H155.08a56.74 56.74 0 0 0-56.84 56.73V871a56.84 56.84 0 0 0 56.84 56.84h255.41A56.83 56.83 0 0 0 467.32 871V615.58a56.83 56.83 0 0 0-56.83-56.84zM871.49 558.74H616.08a56.74 56.74 0 0 0-56.84 56.73V871a56.84 56.84 0 0 0 56.84 56.84h255.41A56.83 56.83 0 0 0 928.32 871V615.58a56.83 56.83 0 0 0-56.83-56.84z" fill="#66EEFF" p-id="988"></path><path d="M410.49 558.74h-4.14A475 475 0 0 0 299.52 859.6a481.16 481.16 0 0 0 4.84 68.22h106.13A56.83 56.83 0 0 0 467.32 871V615.58a56.83 56.83 0 0 0-56.83-56.84zM871.49 558.74H616.08a56.74 56.74 0 0 0-56.84 56.73V871a56.84 56.84 0 0 0 56.84 56.84h255.41A56.83 56.83 0 0 0 928.32 871V615.58a56.83 56.83 0 0 0-56.83-56.84z" fill="#C2F8FF" p-id="989"></path></svg></span><span style="font-size:30px;"> 特别声明</span></div><div class="tbsm-wz">千屹博客旗下的所有文章，是通过本人课堂学习和课外自学所精心整理的知识巨著<br/>难免会有出错的地方<br/>如果细心的你发现了小失误，可以在下方评论区告诉我，或者私信我！<br />非常感谢大家的热烈支持！</div></div>]]></content>
    
    
    
    <tags>
      
      <tag>Centos 7</tag>
      
      <tag>Ansible</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>Ansible-templates</title>
    <link href="/2023/11/13/ansible/Ansible-templates/"/>
    <url>/2023/11/13/ansible/Ansible-templates/</url>
    
    <content type="html"><![CDATA[<meta name="referrer" content="no-referrer"/><h1 id="Ansible-templates"><a href="#Ansible-templates" class="headerlink" title="Ansible-templates"></a>Ansible-templates</h1><h2 id="JINJA2语法简要介绍"><a href="#JINJA2语法简要介绍" class="headerlink" title="JINJA2语法简要介绍"></a>JINJA2语法简要介绍</h2><p>Jinja2语言，支持的数据类型：</p><figure class="highlight jboss-cli"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><code class="hljs jboss-cli">字符串：使用单引号或双引号<br>数字：整数，浮点数<br>列表：[item1, item2, <span class="hljs-string">...</span>]<br>元组：<span class="hljs-params">(item1, item2, ...)</span><br>字典：&#123;key1<span class="hljs-function">:value1</span>, key2<span class="hljs-function">:value2</span>, <span class="hljs-string">...</span>&#125;<br>布尔型：<span class="hljs-literal">true</span>/<span class="hljs-literal">false</span><br></code></pre></td></tr></table></figure><p>支持的运算及操作：</p><figure class="highlight arcade"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs arcade">算术运算：+, -, *, /, <span class="hljs-comment">//, %, **</span><br>比较操作：==, !=, &gt;, &gt;=, &lt;, &lt;=<br>逻辑运算：and，or，not<br>流表达式：<span class="hljs-keyword">For</span>，<span class="hljs-keyword">If</span>，<span class="hljs-built_in">When</span><br></code></pre></td></tr></table></figure><h2 id="Playbook的进阶应用"><a href="#Playbook的进阶应用" class="headerlink" title="Playbook的进阶应用"></a>Playbook的进阶应用</h2><h3 id="使用when实现条件判断"><a href="#使用when实现条件判断" class="headerlink" title="使用when实现条件判断"></a>使用when实现条件判断</h3><p>条件测试:如果需要根据变量、facts或此前任务的执行结果来做为某task执行与否的前提时要用到条件测试。<strong>剧本中不能使用if判断，需要使用when判断。</strong></p><p>when语句：在task后添加when子句即可使用条件测试，可以使用facts或playbook中定义的变量，支持Jinja2表达式语法</p><p>示例：</p><figure class="highlight arcade"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs arcade">tasks:<br>  - name: <span class="hljs-string">&quot;shutdown RedHat flavored systems&quot;</span><br>    command: <span class="hljs-regexp">/sbin/</span>shutdown -h <span class="hljs-built_in">now</span><br>    <span class="hljs-built_in">when</span>: ansible_os_family == <span class="hljs-string">&quot;RedHat&quot;</span>  当系统属于红帽系列,执行command模块，注意：<span class="hljs-string">&#x27;所有变量&#x27;</span>都可以直接在条件语句中使用，而无需使用双大括号<br></code></pre></td></tr></table></figure><p>也可以使用多个when进行多条件判断，等效于and。</p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><code class="hljs yaml"><span class="hljs-string">vim</span> <span class="hljs-string">test_when.yml</span><br><span class="hljs-meta">---</span><br><span class="hljs-bullet">-</span> <span class="hljs-attr">hosts:</span> <span class="hljs-string">all</span><br>  <span class="hljs-attr">tasks:</span><br>  <span class="hljs-bullet">-</span> <span class="hljs-attr">name:</span> <span class="hljs-string">copy</span> <span class="hljs-string">file</span><br>    <span class="hljs-attr">copy:</span><br>      <span class="hljs-attr">src:</span> <span class="hljs-string">/etc/hosts</span><br>      <span class="hljs-attr">dest:</span> <span class="hljs-string">/root/hosts_when</span><br>    <span class="hljs-attr">when:</span> <span class="hljs-string">ansible_hostname</span> <span class="hljs-string">is</span> <span class="hljs-string">match</span> <span class="hljs-string">&quot;node1&quot;</span><span class="hljs-comment">#when支持通配符</span><br><br><span class="hljs-string">ansible</span> <span class="hljs-string">all</span> <span class="hljs-string">--list</span><br><span class="hljs-string">ansible-playbook</span>  <span class="hljs-string">test_when.yml</span><br><span class="hljs-string">ansible</span> <span class="hljs-string">all</span> <span class="hljs-string">-m</span> <span class="hljs-string">shell</span> <span class="hljs-string">-a</span> <span class="hljs-string">&quot;ls -l /root/hosts_when&quot;</span><br></code></pre></td></tr></table></figure><h3 id="使用with-items实现迭代"><a href="#使用with-items实现迭代" class="headerlink" title="使用with_items实现迭代"></a>使用with_items实现迭代</h3><p>迭代：当有需要重复性执行的任务时，可以使用迭代机制<br>    &gt; 对迭代项的引用，固定变量名为”item”</p><blockquote><p>要在task中使用with_items给定要迭代的元素列表，<br>    &gt; 列表格式：<br>         字符串<br>         字典</p></blockquote><h3 id="示例：打印1、2、3"><a href="#示例：打印1、2、3" class="headerlink" title="示例：打印1、2、3"></a><strong>示例：打印1、2、3</strong></h3><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><code class="hljs yaml"><span class="hljs-string">vim</span> <span class="hljs-string">test_items.yml</span><br><br><span class="hljs-meta">---</span><br><span class="hljs-bullet">-</span> <span class="hljs-attr">name:</span> <span class="hljs-string">add</span> <span class="hljs-string">serveral</span> <span class="hljs-string">users</span><br>  <span class="hljs-attr">gather_facts:</span> <span class="hljs-literal">no</span><br>  <span class="hljs-attr">hosts:</span> <span class="hljs-string">all</span><br>  <span class="hljs-attr">tasks:</span><br>  <span class="hljs-bullet">-</span> <span class="hljs-attr">name:</span> <span class="hljs-string">test</span> <span class="hljs-string">loop</span><br>    <span class="hljs-attr">debug:</span> <br>      <span class="hljs-attr">msg:</span> <span class="hljs-string">&quot;name --- <span class="hljs-template-variable">&#123;&#123; item &#125;&#125;</span>&quot;</span> <span class="hljs-comment">#&#123;&#123; item &#125;&#125; 系统自定义变量</span><br>    <span class="hljs-attr">with_items:</span>   <span class="hljs-comment">##with_items定义&#123;&#123; item &#125;&#125; 的值和个数,      一般放到模块的末尾，与模块同一缩进级别    </span><br>    <span class="hljs-bullet">-</span> <span class="hljs-string">one</span><br>    <span class="hljs-bullet">-</span> <span class="hljs-string">two</span><br>    <span class="hljs-bullet">-</span> <span class="hljs-string">three</span><br></code></pre></td></tr></table></figure><h3 id="示例：创建用户"><a href="#示例：创建用户" class="headerlink" title="示例：创建用户"></a>示例：创建用户</h3><figure class="highlight pf"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><code class="hljs pf">vim test_items.yml<br><br>---<br>- name: add serveral users<br>  hosts: <span class="hljs-literal">all</span><br>  tasks:<br>  - <span class="hljs-keyword">user</span>:<br>      name: <span class="hljs-string">&quot;&#123;&#123; item  &#125;&#125;&quot;</span>  <span class="hljs-comment">#&#123;&#123; item &#125;&#125; 系统自定义变量</span><br>      <span class="hljs-keyword">state</span>: present<br>    with_items:           <span class="hljs-comment">##with_items定义&#123;&#123; item &#125;&#125; 的值和个数,一般放到模块的末尾，与模块同一缩进级别    </span><br>    - testuser1<br>    - testuser2<br><br>ansible <span class="hljs-literal">all</span> --list<br>ansible-playbook  test_items.yml<br>ansible <span class="hljs-literal">all</span> -m shell -a <span class="hljs-string">&quot;getent passwd testuser1&quot;</span><br><br>上面语句的功能等同于下面的语句：<br>- name: add <span class="hljs-keyword">user</span> testuser1<br>  <span class="hljs-keyword">user</span>: name=testuser1 <span class="hljs-keyword">state</span>=present <br>- name: add <span class="hljs-keyword">user</span> testuser2<br>  <span class="hljs-keyword">user</span>: name=testuser2 <span class="hljs-keyword">state</span>=present <br></code></pre></td></tr></table></figure><h3 id="示例：拷贝多个文件"><a href="#示例：拷贝多个文件" class="headerlink" title="示例：拷贝多个文件"></a>示例：拷贝多个文件</h3><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><code class="hljs yaml"><span class="hljs-string">touch</span> <span class="hljs-string">/root/1.txt</span> <span class="hljs-string">/root/2.txt</span><br><br><span class="hljs-string">vim</span> <span class="hljs-string">test_items2.yml</span><br><span class="hljs-meta">---</span><br><span class="hljs-bullet">-</span> <span class="hljs-attr">name:</span> <span class="hljs-string">copy</span> <span class="hljs-string">serveral</span> <span class="hljs-string">files</span><br>  <span class="hljs-attr">hosts:</span> <span class="hljs-string">all</span><br>  <span class="hljs-attr">tasks:</span><br>  <span class="hljs-bullet">-</span> <span class="hljs-attr">copy:</span><br>      <span class="hljs-attr">src:</span> <span class="hljs-string">/root/&#123;&#123;</span> <span class="hljs-string">item</span>  <span class="hljs-string">&#125;&#125;</span><br>      <span class="hljs-attr">dest:</span> <span class="hljs-string">/etc/&#123;&#123;</span> <span class="hljs-string">item</span> <span class="hljs-string">&#125;&#125;</span><br>    <span class="hljs-attr">with_items:</span>          <br>    <span class="hljs-bullet">-</span> <span class="hljs-number">1.</span><span class="hljs-string">txt</span><br>    <span class="hljs-bullet">-</span> <span class="hljs-number">2.</span><span class="hljs-string">txt</span><br><br><span class="hljs-string">ansible-playbook</span>  <span class="hljs-string">test_items2.yml</span><br><span class="hljs-string">ansible</span> <span class="hljs-string">all</span> <span class="hljs-string">-m</span> <span class="hljs-string">shell</span> <span class="hljs-string">-a</span> <span class="hljs-string">&quot;ls -l /etc/*.txt&quot;</span><br></code></pre></td></tr></table></figure><h3 id="示例：迭代字典"><a href="#示例：迭代字典" class="headerlink" title="示例：迭代字典"></a>示例：迭代字典</h3><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><code class="hljs yaml"><span class="hljs-string">with_items中可以使用元素还可为hashes</span><br><span class="hljs-string">示例：</span><br><span class="hljs-string">vim</span> <span class="hljs-string">test_items3.yml</span><br><span class="hljs-meta">---</span><br><span class="hljs-bullet">-</span> <span class="hljs-attr">name:</span> <span class="hljs-string">add</span> <span class="hljs-string">several</span> <span class="hljs-string">users</span><br>  <span class="hljs-attr">gather_facts:</span> <span class="hljs-literal">no</span><br>  <span class="hljs-attr">hosts:</span> <span class="hljs-string">all</span><br>  <span class="hljs-attr">tasks:</span><br>  <span class="hljs-bullet">-</span> <span class="hljs-attr">user:</span><br>      <span class="hljs-attr">name:</span> <span class="hljs-string">&quot;<span class="hljs-template-variable">&#123;&#123; item.name &#125;&#125;</span>&quot;</span><br>      <span class="hljs-attr">state:</span> <span class="hljs-string">present</span><br>      <span class="hljs-attr">groups:</span> <span class="hljs-string">&quot; <span class="hljs-template-variable">&#123;&#123; item.groups &#125;&#125;</span>&quot;</span><br>    <span class="hljs-attr">with_items:</span><br>    <span class="hljs-bullet">-</span> &#123; <span class="hljs-attr">name:</span> <span class="hljs-string">&#x27;testuser3&#x27;</span>, <span class="hljs-attr">groups:</span> <span class="hljs-string">&#x27;wheel&#x27;</span> &#125;<br>    <span class="hljs-bullet">-</span> &#123; <span class="hljs-attr">name:</span> <span class="hljs-string">&#x27;testuser4&#x27;</span>, <span class="hljs-attr">groups:</span> <span class="hljs-string">&#x27;root&#x27;</span> &#125;<br><br><br><span class="hljs-string">ansible-playbook</span>  <span class="hljs-string">test_items3.yml</span><br><span class="hljs-string">ansible</span> <span class="hljs-string">all</span> <span class="hljs-string">-m</span> <span class="hljs-string">shell</span> <span class="hljs-string">-a</span> <span class="hljs-string">&quot;getent passwd testuser3&quot;</span><br><span class="hljs-string">ansible</span> <span class="hljs-string">all</span> <span class="hljs-string">-m</span> <span class="hljs-string">shell</span> <span class="hljs-string">-a</span> <span class="hljs-string">&quot;id testuser3&quot;</span><br><span class="hljs-string">ansible</span> <span class="hljs-string">all</span> <span class="hljs-string">-m</span> <span class="hljs-string">shell</span> <span class="hljs-string">-a</span> <span class="hljs-string">&quot;getent passwd testuser4&quot;</span><br><span class="hljs-string">ansible</span> <span class="hljs-string">all</span> <span class="hljs-string">-m</span> <span class="hljs-string">shell</span> <span class="hljs-string">-a</span> <span class="hljs-string">&quot;id testuser4&quot;</span><br><br></code></pre></td></tr></table></figure><h3 id="课堂作业：使用with—items拷贝多个文件"><a href="#课堂作业：使用with—items拷贝多个文件" class="headerlink" title="课堂作业：使用with—items拷贝多个文件"></a>课堂作业：使用with—items拷贝多个文件</h3><p>要求：item列表条目为字典类型，包含src、dest、mode3个键值对，使用with_items实现多个文件的拷贝，并赋予设定的权限。</p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><code class="hljs yaml"><span class="hljs-string">touch</span> <span class="hljs-string">/root/3.txt</span> <span class="hljs-string">/root/4.txt</span><br><span class="hljs-string">vim</span> <span class="hljs-string">test_items4.yml</span><br><span class="hljs-meta">---</span><br><span class="hljs-bullet">-</span> <span class="hljs-attr">name:</span> <span class="hljs-string">copy</span> <span class="hljs-string">several</span> <span class="hljs-string">files</span><br>  <span class="hljs-attr">hosts:</span> <span class="hljs-string">all</span><br>  <span class="hljs-attr">tasks:</span><br>  <span class="hljs-bullet">-</span> <span class="hljs-attr">copy:</span><br>      <span class="hljs-attr">src:</span> <span class="hljs-string">&quot;<span class="hljs-template-variable">&#123;&#123; item.src &#125;&#125;</span>&quot;</span><br>      <span class="hljs-attr">dest:</span> <span class="hljs-string">&quot;<span class="hljs-template-variable">&#123;&#123; item.dest &#125;&#125;</span>&quot;</span><br>      <span class="hljs-attr">mode:</span> <span class="hljs-string">&quot;<span class="hljs-template-variable">&#123;&#123; item.mode &#125;&#125;</span>&quot;</span><br>    <span class="hljs-attr">with_items:</span>          <br>    <span class="hljs-bullet">-</span> &#123; <span class="hljs-attr">src:</span> <span class="hljs-string">&quot;/root/3.txt&quot;</span>, <span class="hljs-attr">dest:</span> <span class="hljs-string">&quot;/root/&quot;</span>, <span class="hljs-attr">mode:</span> <span class="hljs-string">&quot;0644&quot;</span> &#125;<br>    <span class="hljs-bullet">-</span> &#123; <span class="hljs-attr">src:</span> <span class="hljs-string">&quot;/root/4.txt&quot;</span>, <span class="hljs-attr">dest:</span> <span class="hljs-string">&quot;/root/&quot;</span>, <span class="hljs-attr">mode:</span> <span class="hljs-string">&quot;0644&quot;</span> &#125;<br><br><span class="hljs-string">ansible-playbook</span>  <span class="hljs-string">test_items4.yml</span><br><span class="hljs-string">ansible</span> <span class="hljs-string">all</span> <span class="hljs-string">-m</span> <span class="hljs-string">shell</span> <span class="hljs-string">-a</span> <span class="hljs-string">&quot;ls -l /root/*.txt&quot;</span><br><br></code></pre></td></tr></table></figure><h4 id="when和with-items组合使用"><a href="#when和with-items组合使用" class="headerlink" title="when和with items组合使用"></a>when和with items组合使用</h4><p> 当when和with_items一起使用的时候，每个项都会单独被when语句处理</p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><code class="hljs yaml"><span class="hljs-string">vim</span> <span class="hljs-string">test_when_items.yml</span><br><span class="hljs-meta">---</span><br><span class="hljs-bullet">-</span> <span class="hljs-attr">hosts:</span> <span class="hljs-string">all</span><br>  <span class="hljs-attr">tasks:</span><br>  <span class="hljs-bullet">-</span> <span class="hljs-attr">command:</span> <span class="hljs-string">echo</span> &#123;&#123; <span class="hljs-string">item</span> &#125;&#125;<br>    <span class="hljs-attr">with_items:</span> [ <span class="hljs-number">1</span>,<span class="hljs-number">2</span>,<span class="hljs-number">3</span>,<span class="hljs-number">4</span>,<span class="hljs-number">5</span>,<span class="hljs-number">6</span>,<span class="hljs-number">8</span>,<span class="hljs-number">10</span>]<br>    <span class="hljs-attr">when:</span> <span class="hljs-string">item</span> <span class="hljs-string">&gt;</span> <span class="hljs-number">5</span><br>         <br> <span class="hljs-string">ansible-playbook</span> <span class="hljs-string">test_when_items.yml</span><br></code></pre></td></tr></table></figure><h2 id="templates-模板"><a href="#templates-模板" class="headerlink" title="templates 模板"></a>templates 模板</h2><p>templates功能：根据模板文件动态生成对应的配置文件，命名必须以.j2结尾，支持jinja2语法。</p><p>在呈现 JINJA2模板时，文件中引用的变量和表达式被替换为对应的值。模板中使用的变量可以在 Playbook 的 vars 部分中指定。可以将受管主机的事实用作模板中的变量。</p><p>分隔符使用规范：</p><figure class="highlight django"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs django"><span class="hljs-template-tag">&#123;% <span class="hljs-name">EXPR</span> %&#125;</span><span class="language-xml">：用于表达式或逻辑（如循环、判断等）</span><br><span class="language-xml"></span><br><span class="language-xml"></span><span class="hljs-template-variable">&#123;&#123; EXPR &#125;&#125;</span><span class="language-xml">：用于向最终用户输出表达式或变量的结果。在呈现时将被替换为一个或多个值，对最终用户可见。</span><br><span class="language-xml"></span><br><span class="language-xml"></span><span class="hljs-comment">&#123;# COMMENT #&#125;</span><span class="language-xml">，用于注释，不会出现在最终文件中。</span><br></code></pre></td></tr></table></figure><h3 id="templates的使用场景"><a href="#templates的使用场景" class="headerlink" title="templates的使用场景"></a>templates的使用场景</h3><p>在实际的工作中由于每台服务器的环境配置都可能不同，但是往往很多服务的配置文件都需要根据服务器环境进行不同的配置，比如Nginx最大进程数、Redis最大内存等。</p><p>为了解决这个问题可以使用Ansible的template模块，该模块和copy模块作用基本一样，都是把管理端的文件复制到客户端主机上，但是区别在于template模块可以通过变量来获取配置值，支持多种判断、循环、逻辑运算等，而copy只能原封不动的把文件内容复制过去。</p><h4 id="示例：httpd-conf的templates模板"><a href="#示例：httpd-conf的templates模板" class="headerlink" title="示例：httpd.conf的templates模板"></a>示例：httpd.conf的templates模板</h4><p>创建并编辑httpd.conf.j2文件</p><figure class="highlight accesslog"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><code class="hljs accesslog">yum -y install httpd<br>rpm -qa httpd<br> <br>cp /etc/httpd/conf/httpd.conf /root/httpd.conf.j2<br> <br>vim /root/httpd.conf.j2<br> <br>---------<span class="hljs-number">42</span>行----------<br>Listen &#123;&#123;port&#125;&#125;<br> <br>----------<span class="hljs-number">95</span>行---------<br>ServerName &#123;&#123;domain&#125;&#125;<br> <br>vim /etc/ansible/hosts<br> <br><span class="hljs-string">[websrvs]</span><br><span class="hljs-number">192.168.142.101</span> port=<span class="hljs-number">80</span> domain=www.node1.com<br><span class="hljs-number">192.168.142.102</span> port=<span class="hljs-number">81</span> domain=www.node2.com<br></code></pre></td></tr></table></figure><p>卸载受控机上的httpd服务</p><figure class="highlight livecodeserver"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs livecodeserver">ansible websrvs -m <span class="hljs-built_in">shell</span> -<span class="hljs-keyword">a</span> <span class="hljs-string">&#x27;yum remove -y httpd&#x27;</span><br>ansible websrvs -m <span class="hljs-built_in">shell</span> -<span class="hljs-keyword">a</span> <span class="hljs-string">&#x27;yum remove -y nginx&#x27;</span><br></code></pre></td></tr></table></figure><p>新建yaml文件</p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br></pre></td><td class="code"><pre><code class="hljs yaml"><span class="hljs-string">cd</span> <span class="hljs-string">/root</span><br><span class="hljs-string">vim</span> <span class="hljs-string">a.yaml</span><br><span class="hljs-meta">---</span><br><span class="hljs-bullet">-</span> <span class="hljs-attr">hosts:</span> <span class="hljs-string">websrvs</span><br>  <span class="hljs-attr">remote_user:</span> <span class="hljs-string">root</span><br>  <span class="hljs-attr">vars:</span><br>  <span class="hljs-bullet">-</span> <span class="hljs-attr">package:</span> <span class="hljs-string">httpd</span><br>  <span class="hljs-bullet">-</span> <span class="hljs-attr">service:</span> <span class="hljs-string">httpd</span><br>  <span class="hljs-attr">tasks:</span><br>  <span class="hljs-bullet">-</span> <span class="hljs-attr">name:</span> <span class="hljs-string">install</span> <span class="hljs-string">service</span><br>    <span class="hljs-attr">yum:</span><br>      <span class="hljs-attr">name:</span> <span class="hljs-string">&quot;<span class="hljs-template-variable">&#123;&#123; package &#125;&#125;</span>&quot;</span><br>      <span class="hljs-attr">state:</span> <span class="hljs-string">latest</span><br><br>  <span class="hljs-bullet">-</span> <span class="hljs-attr">name:</span> <span class="hljs-string">httpd.conf</span><br>    <span class="hljs-attr">template:</span><br>      <span class="hljs-attr">src:</span> <span class="hljs-string">/root/httpd.conf.j2</span><br>      <span class="hljs-attr">dest:</span> <span class="hljs-string">/etc/httpd/conf/httpd.conf</span><br>    <span class="hljs-attr">notify:</span> <span class="hljs-string">restart</span> <span class="hljs-string">service</span><br><br>  <span class="hljs-bullet">-</span> <span class="hljs-attr">name:</span> <span class="hljs-string">start</span> <span class="hljs-string">service</span><br>    <span class="hljs-attr">service:</span><br>      <span class="hljs-attr">name:</span> <span class="hljs-string">&quot;<span class="hljs-template-variable">&#123;&#123; service &#125;&#125;</span>&quot;</span><br>      <span class="hljs-attr">state:</span> <span class="hljs-string">started</span><br>      <span class="hljs-attr">enabled:</span> <span class="hljs-literal">true</span><br> <br> <span class="hljs-attr">handlers:</span><br>  <span class="hljs-bullet">-</span> <span class="hljs-attr">name:</span> <span class="hljs-string">restart</span> <span class="hljs-string">service</span><br>    <span class="hljs-attr">service:</span><br>      <span class="hljs-attr">name:</span> <span class="hljs-string">&quot;<span class="hljs-template-variable">&#123;&#123; service &#125;&#125;</span>&quot;</span><br>      <span class="hljs-attr">state:</span> <span class="hljs-string">restarted</span><br><br></code></pre></td></tr></table></figure><p>执行yaml文件并验证</p><figure class="highlight livecodeserver"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><code class="hljs livecodeserver">ansible-playbook <span class="hljs-keyword">a</span>.yaml <span class="hljs-comment">--syntax-check</span><br>ansible-playbook <span class="hljs-keyword">a</span>.yaml<br>ansible websrvs -<span class="hljs-keyword">a</span> <span class="hljs-string">&#x27;systemctl status httpd&#x27;</span><br>ansible websrvs -m <span class="hljs-built_in">shell</span> -<span class="hljs-keyword">a</span> <span class="hljs-string">&#x27;ss -ntl&#x27;</span><br>ansible websrvs -m <span class="hljs-built_in">shell</span> -<span class="hljs-keyword">a</span> <span class="hljs-string">&#x27;netstat -ntlp |grep httpd&#x27;</span><br>ansible websrvs -m <span class="hljs-built_in">shell</span> -<span class="hljs-keyword">a</span> <span class="hljs-string">&#x27;lsof -i:80&#x27;</span><br>ansible websrvs -m <span class="hljs-built_in">shell</span> -<span class="hljs-keyword">a</span> <span class="hljs-string">&#x27;lsof -i:81&#x27;</span><br></code></pre></td></tr></table></figure><h4 id="tamplates-for-循环"><a href="#tamplates-for-循环" class="headerlink" title="tamplates-for(循环)"></a>tamplates-for(循环)</h4><p>语法：</p><figure class="highlight django"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs django"><span class="hljs-template-tag">&#123;% <span class="hljs-name"><span class="hljs-name">for</span></span> 变量 <span class="hljs-keyword">in</span> 列表 %&#125;</span><span class="language-xml"></span><br><span class="language-xml"></span><span class="hljs-template-variable">&#123;&#123; 文本内容调用变量 &#125;&#125;</span><span class="language-xml"></span><br><span class="language-xml"></span><span class="hljs-template-tag">&#123;% <span class="hljs-name"><span class="hljs-name">endfor</span></span> %&#125;</span><br></code></pre></td></tr></table></figure><p>示例：使用for循环遍历调用users列表变量的元素</p><figure class="highlight crmsh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs crmsh">&#123;%  for <span class="hljs-keyword">user</span> <span class="hljs-title">in</span> users %&#125;<br>&#123;&#123;  <span class="hljs-keyword">user</span> <span class="hljs-title">&#125;&#125;</span><br><span class="hljs-title">&#123;% endfor</span> %&#125;<br></code></pre></td></tr></table></figure><h3 id="示例：yaml文件中变量的调用"><a href="#示例：yaml文件中变量的调用" class="headerlink" title="示例：yaml文件中变量的调用"></a>示例：yaml文件中变量的调用</h3><p>编写yaml文件 jinja2_for.yml</p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><code class="hljs yaml"><span class="hljs-string">vim</span> <span class="hljs-string">jinja2_for.yml</span><br><span class="hljs-meta">---</span><br><span class="hljs-bullet">-</span> <span class="hljs-attr">name:</span> <span class="hljs-string">jinja2_for</span> <span class="hljs-string">example</span><br>  <span class="hljs-attr">hosts:</span> <span class="hljs-string">all</span><br>  <span class="hljs-attr">remote_user:</span> <span class="hljs-string">root</span><br>  <span class="hljs-attr">vars:</span><br>    <span class="hljs-attr">users:</span><br>    <span class="hljs-bullet">-</span> <span class="hljs-string">user1</span><br>    <span class="hljs-bullet">-</span> <span class="hljs-string">user2</span><br>  <span class="hljs-attr">tasks:</span><br>  <span class="hljs-bullet">-</span> <span class="hljs-attr">name:</span> <span class="hljs-string">Copy</span> <span class="hljs-string">template</span><br>    <span class="hljs-attr">template:</span> <br>      <span class="hljs-attr">src:</span> <span class="hljs-string">/root/users.j2</span><br>      <span class="hljs-attr">dest:</span> <span class="hljs-string">/root/users</span> <br></code></pre></td></tr></table></figure><p>编写&#x2F;root&#x2F;users.j2文件</p><figure class="highlight crmsh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs crmsh">vim /root/users.j2<br>&#123;% for <span class="hljs-keyword">user</span> <span class="hljs-title">in</span> users %&#125;<br>username: &#123;&#123; <span class="hljs-keyword">user</span> <span class="hljs-title">&#125;&#125;</span><br><span class="hljs-title">&#123;% endfor</span> %&#125;<br></code></pre></td></tr></table></figure><p>执行并验证</p><figure class="highlight stylus"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs stylus">ansible-playbook jinjia2_for<span class="hljs-selector-class">.yml</span> <span class="hljs-attr">--syntax-check</span><br>ansible-playbook jinjia2_for<span class="hljs-selector-class">.yml</span><br>ansible <span class="hljs-attribute">all</span> -m shell -a <span class="hljs-string">&quot;cat /root/users&quot;</span><br></code></pre></td></tr></table></figure><p><strong>扩展示例：</strong></p><p>以下示例模板使用for语句逐一运行users变量中的所有值，将user替换为各个值，但值为root时除外。</p><figure class="highlight django"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><code class="hljs django"><span class="language-xml">vim users.j2</span><br><span class="language-xml"></span><br><span class="language-xml"></span><span class="hljs-comment">&#123;# for statement #&#125;</span><span class="language-xml"></span><br><span class="language-xml"></span><span class="hljs-template-tag">&#123;% <span class="hljs-name"><span class="hljs-name">for</span></span> user <span class="hljs-keyword">in</span> users if not user ==&quot;root&quot; %&#125;</span><span class="language-xml"></span><br><span class="language-xml">User number </span><span class="hljs-template-variable">&#123;&#123; loop.index &#125;&#125;</span><span class="language-xml">- </span><span class="hljs-template-variable">&#123;&#123; user &#125;&#125;</span><span class="language-xml"></span><br><span class="language-xml"></span><span class="hljs-template-tag">&#123;% <span class="hljs-name"><span class="hljs-name">endfor</span></span> %&#125;</span><br></code></pre></td></tr></table></figure><p>loop.index变量扩展至循环当前所处的索引号。它在循环第一次执行时值为1，每一次迭代递增1.</p><figure class="highlight stylus"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs stylus">ansible-playbook jinjia2_for<span class="hljs-selector-class">.yml</span> <span class="hljs-attr">--syntax-check</span><br>ansible-playbook jinjia2_for<span class="hljs-selector-class">.yml</span><br><br>ansible <span class="hljs-attribute">all</span> -m shell -a <span class="hljs-string">&quot;cat /root/users&quot;</span><br></code></pre></td></tr></table></figure><h3 id="示例：事实变量的调用"><a href="#示例：事实变量的调用" class="headerlink" title="示例：事实变量的调用"></a>示例：事实变量的调用</h3><p>编写yaml文件  jinja2_for2.yml</p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><code class="hljs yaml"><span class="hljs-string">vim</span> <span class="hljs-string">jinja2_for2.yml</span><br><span class="hljs-meta">---</span><br><span class="hljs-bullet">-</span> <span class="hljs-attr">name:</span> <span class="hljs-string">jinja2_for</span> <span class="hljs-string">example2</span><br>  <span class="hljs-attr">hosts:</span> <span class="hljs-string">all</span><br>  <span class="hljs-attr">remote_user:</span> <span class="hljs-string">root</span><br>  <span class="hljs-attr">vars:</span><br>    <span class="hljs-attr">users:</span><br>    <span class="hljs-bullet">-</span> <span class="hljs-string">user1</span><br>    <span class="hljs-bullet">-</span> <span class="hljs-string">user2</span><br>  <span class="hljs-attr">tasks:</span><br>  <span class="hljs-bullet">-</span> <span class="hljs-attr">name:</span> <span class="hljs-string">Copy</span> <span class="hljs-string">template</span><br>    <span class="hljs-attr">template:</span> <br>      <span class="hljs-attr">src:</span> <span class="hljs-string">/root/host.j2</span><br>      <span class="hljs-attr">dest:</span> <span class="hljs-string">/root/hosts</span> <br></code></pre></td></tr></table></figure><p>编写&#x2F;root&#x2F;host.j2文件</p><figure class="highlight twig"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs twig"><span class="language-xml">vim /root/host.j2</span><br><span class="language-xml"></span><span class="hljs-template-tag">&#123;%</span> <span class="hljs-name">for</span> host <span class="hljs-keyword">in</span> groups[<span class="hljs-string">&#x27;websrvs&#x27;</span>] <span class="hljs-template-tag">%&#125;</span><span class="language-xml"></span><br><span class="language-xml"></span><span class="hljs-template-variable">&#123;&#123; ansible_facts.default_ipv<span class="hljs-number">4</span>.address &#125;&#125;</span><span class="hljs-template-variable">&#123;&#123; ansible_facts.fqdn &#125;&#125;</span><span class="language-xml"></span><br><span class="language-xml"></span><span class="hljs-template-tag">&#123;%</span> <span class="hljs-name">endfor</span> <span class="hljs-template-tag">%&#125;</span><br></code></pre></td></tr></table></figure><p>执行并验证</p><figure class="highlight stylus"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs stylus">ansible-playbook jinjia2_for2<span class="hljs-selector-class">.yml</span> <span class="hljs-attr">--syntax-check</span><br>ansible-playbook jinjia2_for2<span class="hljs-selector-class">.yml</span><br><br>ansible websrvs -m shell -<span class="hljs-selector-tag">a</span> <span class="hljs-string">&quot;cat /root/hosts&quot;</span><br></code></pre></td></tr></table></figure><h4 id="tamplates-if（判断）"><a href="#tamplates-if（判断）" class="headerlink" title="tamplates-if（判断）"></a>tamplates-if（判断）</h4><p>Jinja2使用 if 语句来提供条件控制。如果满足条件，允许在文件中添加一行内容。</p><p>语法：</p><figure class="highlight django"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs django"><span class="hljs-template-tag">&#123;% <span class="hljs-name"><span class="hljs-name">if</span></span> 条件 %&#125;</span><span class="language-xml"></span><br><span class="language-xml"></span><span class="hljs-template-variable">&#123;&#123; 语句 &#125;&#125;</span><span class="language-xml"></span><br><span class="language-xml"></span><span class="hljs-template-tag">&#123;% <span class="hljs-name"><span class="hljs-name">endif</span></span> %&#125;</span><br></code></pre></td></tr></table></figure><h3 id="示例："><a href="#示例：" class="headerlink" title="示例："></a>示例：</h3><p>编写yaml文件 jinja2_if.yml</p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><code class="hljs yaml"><span class="hljs-string">vim</span> <span class="hljs-string">jinja2_if.yml</span><br><span class="hljs-meta">---</span><br><span class="hljs-bullet">-</span> <span class="hljs-attr">name:</span> <span class="hljs-string">jinja2_if</span> <span class="hljs-string">example</span><br>  <span class="hljs-attr">hosts:</span> <span class="hljs-string">websrvs</span><br>  <span class="hljs-attr">remote_user:</span> <span class="hljs-string">root</span><br><br>  <span class="hljs-attr">tasks:</span><br>  <span class="hljs-bullet">-</span> <span class="hljs-attr">name:</span> <span class="hljs-string">Copy</span> <span class="hljs-string">template</span><br>    <span class="hljs-attr">template:</span> <br>      <span class="hljs-attr">src:</span> <span class="hljs-string">/root/host2.j2</span><br>      <span class="hljs-attr">dest:</span> <span class="hljs-string">/root/hosts2</span> <br></code></pre></td></tr></table></figure><p>编辑host2.j2文件</p><figure class="highlight twig"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs twig"><span class="language-xml">vim /root/host2.j2</span><br><span class="language-xml"></span><br><span class="language-xml"></span><span class="hljs-template-tag">&#123;%</span> <span class="hljs-name">if</span> ansible_facts.default_ipv<span class="hljs-number">4</span>.address ==<span class="hljs-string">&#x27;192.168.142.101&#x27;</span> <span class="hljs-template-tag">%&#125;</span><span class="language-xml"></span><br><span class="language-xml"></span><span class="hljs-template-variable">&#123;&#123; ansible_facts.default_ipv<span class="hljs-number">4</span>.address &#125;&#125;</span><span class="hljs-template-variable">&#123;&#123; ansible_facts.fqdn &#125;&#125;</span><span class="language-xml"></span><br><span class="language-xml"></span><span class="hljs-template-tag">&#123;%</span> <span class="hljs-name">endif</span> <span class="hljs-template-tag">%&#125;</span><br></code></pre></td></tr></table></figure><p>执行并验证</p><figure class="highlight stylus"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs stylus">ansible-playbook jinja2_if<span class="hljs-selector-class">.yml</span> <span class="hljs-attr">--syntax-check</span><br>ansible-playbook jinja2_if<span class="hljs-selector-class">.yml</span><br>ansible <span class="hljs-attribute">all</span> -m shell -a <span class="hljs-string">&quot;cat /root/hosts2&quot;</span><br></code></pre></td></tr></table></figure><h2 id="综合案例：nginx-templates"><a href="#综合案例：nginx-templates" class="headerlink" title="综合案例：nginx templates"></a>综合案例：nginx templates</h2><p>0、编辑主机清单，组websrvs，包含2台受控主机</p><p>1、主控端安装ngxin、拷贝nginx配置文件为nginx.conf.j2模板文件。创建nginx首页模版，命名为html.j2,引用实事变量：主机名，文件内容格式如： Welcome to </p><p>2、编写test_template.yaml文件，要求tasks</p><p>​      1）安装epel源 2）安装nginx 3）拷贝nginx.conf.j2模板文件为受控主机的nginx配置文件4）拷贝html.j2模板文件为受控主机的nginx首页文件4）开启服务</p><p>3、校验playbook语法并执行，验证受控主机的nginx进程数\服务端口\首页</p><p>4、修改nginx.conf.j2模板文件，配置 worker_processes数量为实事变量：受控主机处理器vcpu个数的两倍，保存</p><p>5、修改test_template.yaml文件，添加notify和handlers，在配置文件变化时，重启nginx</p><p>6、校验playbook语法并执行，验证受控主机的nginx进程数</p><p>7、修改hosts文件为每台主机定义服务端口变量 第一台 8082，第二台8083</p><p>8、修改test_template.yaml文件，修改监听端口行，增加主机端口变量的引用</p><p>9、校验playbook语法并执行，验证受控主机的nginx服务端口</p><p>10、修改test_template.yaml，增加端口变量定义，端口88</p><p>11、校验playbook语法并执行，验证受控主机的nginx服务端口</p><p>1、主控端安装ngxin、拷贝nginx配置文件为nginx.conf.j2模板文件</p><figure class="highlight vim"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><code class="hljs vim">yum install -<span class="hljs-keyword">y</span> nginx<br><span class="hljs-keyword">cp</span> /etc/nginx/nginx.<span class="hljs-keyword">conf</span> /root/nginx.<span class="hljs-keyword">conf</span>.j2<br><span class="hljs-keyword">echo</span> <span class="hljs-string">&quot;welcome to &#123;&#123; ansible_hostname  &#125;&#125;&quot;</span> &gt; html.j2<br><br>ansible <span class="hljs-keyword">all</span> -<span class="hljs-keyword">m</span> setup |<span class="hljs-keyword">grep</span> <span class="hljs-built_in">hostname</span><br>ansible <span class="hljs-keyword">all</span> -<span class="hljs-keyword">m</span> setup |<span class="hljs-keyword">grep</span> vcpu<br></code></pre></td></tr></table></figure><p>2、创建nginx首页模版，命名为html.j2,引用实事变量：主机名</p><p>内容格式如： Welcome to </p><p>2、编写test_template.yaml文件</p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><code class="hljs yaml"><span class="hljs-string">vim</span> <span class="hljs-string">test_template.yaml</span><br><span class="hljs-meta">---</span><br><span class="hljs-bullet">-</span> <span class="hljs-attr">hosts:</span> <span class="hljs-string">websrvs</span><br>  <span class="hljs-attr">remote_user:</span> <span class="hljs-string">root</span><br>  <span class="hljs-attr">tasks:</span><br>  <span class="hljs-bullet">-</span> <span class="hljs-attr">name:</span> <span class="hljs-string">install</span> <span class="hljs-string">epel</span><br>    <span class="hljs-attr">yum:</span><br>      <span class="hljs-attr">name:</span> <span class="hljs-string">epel-release</span><br>  <span class="hljs-bullet">-</span> <span class="hljs-attr">name:</span> <span class="hljs-string">install</span> <span class="hljs-string">package</span><br>    <span class="hljs-attr">yum:</span><br>      <span class="hljs-attr">name:</span> <span class="hljs-string">nginx</span><br>  <span class="hljs-bullet">-</span> <span class="hljs-attr">name:</span> <span class="hljs-string">copy</span> <span class="hljs-string">template</span><br>    <span class="hljs-attr">template:</span><br>      <span class="hljs-attr">src:</span> <span class="hljs-string">/root/nginx.conf.j2</span><br>      <span class="hljs-attr">dest:</span> <span class="hljs-string">/etc/nginx/nginx.conf</span><br>  <span class="hljs-bullet">-</span> <span class="hljs-attr">name:</span> <span class="hljs-string">copy</span> <span class="hljs-string">template</span><br>    <span class="hljs-attr">template:</span><br>      <span class="hljs-attr">src:</span> <span class="hljs-string">/root/html.j2</span><br>      <span class="hljs-attr">dest:</span> <span class="hljs-string">/usr/share/nginx/html</span><br>  <span class="hljs-bullet">-</span> <span class="hljs-attr">name:</span> <span class="hljs-string">copy</span> <span class="hljs-string">html</span><br>    <span class="hljs-attr">template:</span><br>      <span class="hljs-attr">src:</span> <span class="hljs-string">/root/html.j2</span><br>      <span class="hljs-attr">dest:</span> <span class="hljs-string">/usr/share/nginx/html/index.html</span>    <br>  <span class="hljs-bullet">-</span> <span class="hljs-attr">name:</span> <span class="hljs-string">start</span> <span class="hljs-string">service</span><br>    <span class="hljs-attr">service:</span><br>      <span class="hljs-attr">name:</span> <span class="hljs-string">nginx</span><br>      <span class="hljs-attr">state:</span> <span class="hljs-string">started</span><br>      <span class="hljs-attr">enabled:</span> <span class="hljs-literal">yes</span><br></code></pre></td></tr></table></figure><p>执行并验证</p><figure class="highlight livecodeserver"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><code class="hljs livecodeserver">ansible-playbook test_template.yaml  <span class="hljs-comment">--syntax-check</span><br>ansible-playbook test_template.yaml  <br>ansible all -m <span class="hljs-built_in">shell</span> -<span class="hljs-keyword">a</span> <span class="hljs-string">&#x27;systemctl status nginx&#x27;</span><br>ansible all -m <span class="hljs-built_in">shell</span> -<span class="hljs-keyword">a</span> <span class="hljs-string">&#x27;ss -ntpl|grep nginx&#x27;</span><br><span class="hljs-comment">#可以查看到进程，每个cpu一个</span><br>ansible all -m <span class="hljs-built_in">shell</span> -<span class="hljs-keyword">a</span> <span class="hljs-string">&#x27;ps aux|grep nginx&#x27;</span><br></code></pre></td></tr></table></figure><p>3、修改template文件，修改进程数为cpu内核的2倍</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs i">ansible websrvs -m setup|grep &quot;cpu&quot;<br><br>vim nginx.conf.j2<br>修改第6行<br>worker_processes &#123;&#123; ansible_processor_vcpus*2  &#125;&#125;    #worker_processes auto<br></code></pre></td></tr></table></figure><p>修改test_template.yaml文件，添加notify和handlers，在配置文件变化时，重启nginx</p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><code class="hljs yaml"><span class="hljs-string">vim</span> <span class="hljs-string">test_template.yaml</span><br><span class="hljs-meta">---</span><br><span class="hljs-bullet">-</span> <span class="hljs-attr">hosts:</span> <span class="hljs-string">websrvs</span><br>  <span class="hljs-attr">remote_user:</span> <span class="hljs-string">root</span><br>  <span class="hljs-attr">tasks:</span><br>  <span class="hljs-bullet">-</span> <span class="hljs-attr">name:</span> <span class="hljs-string">install</span> <span class="hljs-string">package</span><br>    <span class="hljs-attr">yum:</span><br>      <span class="hljs-attr">name:</span> <span class="hljs-string">nginx</span><br>  <span class="hljs-bullet">-</span> <span class="hljs-attr">name:</span> <span class="hljs-string">copy</span> <span class="hljs-string">template</span><br>    <span class="hljs-attr">template:</span><br>      <span class="hljs-attr">src:</span> <span class="hljs-string">/root/nginx.conf.j2</span><br>      <span class="hljs-attr">dest:</span> <span class="hljs-string">/etc/nginx/nginx.conf</span><br>    <span class="hljs-attr">notify:</span><br>    <span class="hljs-bullet">-</span> <span class="hljs-string">restart</span> <span class="hljs-string">service</span><br>  <span class="hljs-bullet">-</span> <span class="hljs-attr">name:</span> <span class="hljs-string">copy</span> <span class="hljs-string">html</span><br>    <span class="hljs-attr">template:</span><br>      <span class="hljs-attr">src:</span> <span class="hljs-string">/root/html.j2</span><br>      <span class="hljs-attr">dest:</span> <span class="hljs-string">/usr/share/nginx/html/index.html</span>    <br>  <span class="hljs-bullet">-</span> <span class="hljs-attr">name:</span> <span class="hljs-string">start</span> <span class="hljs-string">service</span><br>    <span class="hljs-attr">service:</span><br>      <span class="hljs-attr">name:</span> <span class="hljs-string">nginx</span><br>      <span class="hljs-attr">state:</span> <span class="hljs-string">started</span><br>      <span class="hljs-attr">enabled:</span> <span class="hljs-literal">yes</span><br>  <span class="hljs-attr">handlers:</span><br>  <span class="hljs-bullet">-</span> <span class="hljs-attr">name:</span> <span class="hljs-string">restart</span> <span class="hljs-string">service</span><br>    <span class="hljs-attr">service:</span><br>      <span class="hljs-attr">name:</span> <span class="hljs-string">nginx</span><br>      <span class="hljs-attr">state:</span> <span class="hljs-string">restarted</span><br></code></pre></td></tr></table></figure><p>执行并验证</p><figure class="highlight livecodeserver"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs livecodeserver">ansible-playbook test_template.yaml<br><span class="hljs-comment">#可以查看到进程，</span><br>ansible all -m <span class="hljs-built_in">shell</span> -<span class="hljs-keyword">a</span> <span class="hljs-string">&#x27;ps aux|grep nginx&#x27;</span> <span class="hljs-comment">#查看nginx进程数为cpu核数的2倍</span><br></code></pre></td></tr></table></figure><p>检验nginx配置文件是否存在语法错误</p><p>nginx -t </p><p>nginx和httpd服务，web服务保证只有一个运行。</p><p>4、使用主机变量，修改服务端口</p><p>修改hosts文件增加端口变量</p><figure class="highlight apache"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><code class="hljs apache"><span class="hljs-comment">#使用主机变量</span><br><span class="hljs-comment">#修改nginx对应的端口</span><br><span class="hljs-attribute">vim</span> /etc/ansible/hosts<span class="hljs-meta"></span><br><span class="hljs-meta">[websrvs]</span><br><span class="hljs-attribute">192</span>.<span class="hljs-number">168</span>.<span class="hljs-number">142</span>.<span class="hljs-number">101</span> http_port=<span class="hljs-number">8083</span><br><span class="hljs-attribute">192</span>.<span class="hljs-number">168</span>.<span class="hljs-number">142</span>.<span class="hljs-number">102</span> http_port=<span class="hljs-number">8084</span><br></code></pre></td></tr></table></figure><p>修改模板文件，增加端口引用</p><figure class="highlight handlebars"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><code class="hljs handlebars"><span class="language-xml">vim nginx.conf.j2</span><br><span class="language-xml">修改39、40行</span><br><span class="language-xml">server&#123;</span><br><span class="language-xml">    listen   </span><span class="hljs-template-variable">&#123;&#123; <span class="hljs-name">http_port</span> &#125;&#125;</span><span class="language-xml"> ;</span><br><span class="language-xml">    listen   [::]:</span><span class="hljs-template-variable">&#123;&#123;  <span class="hljs-name">http_port</span>  &#125;&#125;</span><span class="language-xml"> ;</span><br><span class="language-xml">&#125;</span><br></code></pre></td></tr></table></figure><p>执行并验证</p><figure class="highlight livecodeserver"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs livecodeserver">ansible-playbook test_template.yaml<br>ansible websrvs -m <span class="hljs-built_in">shell</span> -<span class="hljs-keyword">a</span> <span class="hljs-string">&#x27;ss -ntpl|grep nginx&#x27;</span><br></code></pre></td></tr></table></figure><p>5、使用playbook变量</p><p>修改test_template.yaml，增加端口信息</p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br></pre></td><td class="code"><pre><code class="hljs yaml"><span class="hljs-string">vim</span> <span class="hljs-string">test_template.yaml</span><br><br><span class="hljs-meta">---</span><br><span class="hljs-bullet">-</span> <span class="hljs-attr">hosts:</span> <span class="hljs-string">websrvs</span><br>  <span class="hljs-attr">remote_user:</span> <span class="hljs-string">root</span><br>  <span class="hljs-string">vars：</span><br>  <span class="hljs-bullet">-</span> <span class="hljs-attr">http_port:</span> <span class="hljs-number">88</span><br>  <span class="hljs-attr">tasks:</span><br>  <span class="hljs-bullet">-</span> <span class="hljs-attr">name:</span> <span class="hljs-string">install</span> <span class="hljs-string">package</span><br>    <span class="hljs-attr">yum:</span><br>      <span class="hljs-attr">name:</span> <span class="hljs-string">nginx</span><br>  <span class="hljs-bullet">-</span> <span class="hljs-attr">name:</span> <span class="hljs-string">copy</span> <span class="hljs-string">template</span><br>    <span class="hljs-attr">template:</span><br>      <span class="hljs-attr">src:</span> <span class="hljs-string">/root/nginx.conf.j2</span><br>      <span class="hljs-attr">dest:</span> <span class="hljs-string">/etc/nginx/nginx.conf</span><br>    <span class="hljs-attr">notify:</span><br>    <span class="hljs-bullet">-</span> <span class="hljs-string">restart</span> <span class="hljs-string">service</span><br>  <span class="hljs-bullet">-</span> <span class="hljs-attr">name:</span> <span class="hljs-string">copy</span> <span class="hljs-string">html</span><br>    <span class="hljs-attr">template:</span><br>      <span class="hljs-attr">src:</span> <span class="hljs-string">/root/html.j2</span><br>      <span class="hljs-attr">dest:</span> <span class="hljs-string">/usr/share/nginx/html/index.html</span>   <br>  <span class="hljs-bullet">-</span> <span class="hljs-attr">name:</span> <span class="hljs-string">start</span> <span class="hljs-string">service</span><br>    <span class="hljs-attr">service:</span><br>      <span class="hljs-attr">name:</span> <span class="hljs-string">nginx</span><br>      <span class="hljs-attr">state:</span> <span class="hljs-string">started</span><br>      <span class="hljs-attr">enabled:</span> <span class="hljs-literal">yes</span><br>  <span class="hljs-attr">handlers:</span><br>  <span class="hljs-bullet">-</span> <span class="hljs-attr">name:</span> <span class="hljs-string">restart</span> <span class="hljs-string">service</span><br>    <span class="hljs-attr">service:</span><br>      <span class="hljs-attr">name:</span> <span class="hljs-string">nginx</span><br>      <span class="hljs-attr">state:</span> <span class="hljs-string">restarted</span><br><br></code></pre></td></tr></table></figure><p>执行并验证</p><figure class="highlight livecodeserver"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs livecodeserver">ansible-playbook test_template.yaml<br>ansible websrvs -m <span class="hljs-built_in">shell</span> -<span class="hljs-keyword">a</span> <span class="hljs-string">&#x27;ss -ntpl|grep nginx&#x27;</span><br><span class="hljs-comment">#发现端口变成88</span><br></code></pre></td></tr></table></figure><p>6、使用命令行变量</p><figure class="highlight livecodeserver"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs livecodeserver">ansible-playbook -e <span class="hljs-string">&quot;http_port=99&quot;</span>  test_template.yaml<br>ansible websrvs -m <span class="hljs-built_in">shell</span> -<span class="hljs-keyword">a</span> <span class="hljs-string">&#x27;ss -ntpl|grep nginx&#x27;</span><br><span class="hljs-comment">#发现端口变成99</span><br></code></pre></td></tr></table></figure><p><code>可以返回目录！</code></p><p><a href="https://blog.qianyios.top/2023/09/10/ansible/Ansible-%E6%80%BB%E6%89%8B%E5%86%8C/">Ansible练习目录 - 严千屹博客 (qianyios.top)</a></p><div class="tbsm" style="margin-top:54px;"><div class="tbsm-top"><span><svg t="1674654360507" class="icon" viewBox="0 0 1024 1024" version="1.1" xmlns="http://www.w3.org/2000/svg" p-id="987" data-spm-anchor-id="a313x.7781069.0.i0" width="35" height="35"><path d="M410.49 97.74H155.08a56.74 56.74 0 0 0-56.84 56.73V410a56.84 56.84 0 0 0 56.84 56.84h255.41A56.83 56.83 0 0 0 467.32 410V154.58a56.83 56.83 0 0 0-56.83-56.84zM410.49 558.74H155.08a56.74 56.74 0 0 0-56.84 56.73V871a56.84 56.84 0 0 0 56.84 56.84h255.41A56.83 56.83 0 0 0 467.32 871V615.58a56.83 56.83 0 0 0-56.83-56.84zM871.49 558.74H616.08a56.74 56.74 0 0 0-56.84 56.73V871a56.84 56.84 0 0 0 56.84 56.84h255.41A56.83 56.83 0 0 0 928.32 871V615.58a56.83 56.83 0 0 0-56.83-56.84z" fill="#66EEFF" p-id="988"></path><path d="M410.49 558.74h-4.14A475 475 0 0 0 299.52 859.6a481.16 481.16 0 0 0 4.84 68.22h106.13A56.83 56.83 0 0 0 467.32 871V615.58a56.83 56.83 0 0 0-56.83-56.84zM871.49 558.74H616.08a56.74 56.74 0 0 0-56.84 56.73V871a56.84 56.84 0 0 0 56.84 56.84h255.41A56.83 56.83 0 0 0 928.32 871V615.58a56.83 56.83 0 0 0-56.83-56.84z" fill="#C2F8FF" p-id="989"></path></svg></span><span style="font-size:30px;"> 特别声明</span></div><div class="tbsm-wz">千屹博客旗下的所有文章，是通过本人课堂学习和课外自学所精心整理的知识巨著<br/>难免会有出错的地方<br/>如果细心的你发现了小失误，可以在下方评论区告诉我，或者私信我！<br />非常感谢大家的热烈支持！</div></div>]]></content>
    
    
    
    <tags>
      
      <tag>Centos 7</tag>
      
      <tag>Ansible</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>Ansible-Playbook</title>
    <link href="/2023/10/02/ansible/Ansible-playblock/"/>
    <url>/2023/10/02/ansible/Ansible-playblock/</url>
    
    <content type="html"><![CDATA[<meta name="referrer" content="no-referrer"/><h1 id="Ansible-Playbook"><a href="#Ansible-Playbook" class="headerlink" title="Ansible-Playbook"></a>Ansible-Playbook</h1><h2 id="介绍"><a href="#介绍" class="headerlink" title="介绍"></a>介绍</h2><blockquote><p>playbook是由一个或多个”play”组成的列表<br>play的主要功能在于将预定义的一组主机，装扮成事先通过ansible中的task定义好的角色。<br>Task实际是调用ansible的一个module，将多个play组织在一个playbook中，<br>即可以让它们联合起来，按事先编排的机制执行预定义的动作<br>Playbook采用YAML语言编写</p></blockquote><figure class="highlight mel"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs mel">用户通过ansible命令直接调用yml语言写好的playbook,playbook由多条<span class="hljs-keyword">play</span>组成<br>每条<span class="hljs-keyword">play</span>都有一个任务(task)相对应的操作,然后调用模块modules，应用在主机清单上,通过ssh远程连接<br>从而控制远程主机或者网络设备<br></code></pre></td></tr></table></figure><h2 id="YAML语法"><a href="#YAML语法" class="headerlink" title="YAML语法"></a>YAML语法</h2><figure class="highlight node-repl"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><code class="hljs node-repl"><span class="hljs-meta prompt_">&gt;</span> <span class="language-javascript">在单一档案中，可用连续三个连字号（---）区分多个档案。</span><br>  另外，还有选择性的连续三个点号( ... )用来表示档案结尾<br><span class="hljs-meta prompt_">&gt;</span> <span class="language-javascript">次行开始正常写<span class="hljs-title class_">Playbook</span>的内容，一般建议写明该<span class="hljs-title class_">Playbook</span>的功能</span><br><span class="hljs-meta prompt_">&gt;</span> <span class="language-javascript">使用#号注释代码</span><br><span class="hljs-meta prompt_">&gt;</span> <span class="language-javascript">缩进必须是统一的，不能空格和tab混用，一般缩进<span class="hljs-number">2</span>个空格</span><br><span class="hljs-meta prompt_">&gt;</span> <span class="language-javascript">缩进的级别也必须是一致的，同样的缩进代表同样的级别，程序判别配置的级别是通过缩进结合换行来实现的</span><br><span class="hljs-meta prompt_">&gt;</span> <span class="language-javascript"><span class="hljs-variable constant_">YAML</span>文件内容是区别大小写的，key/value的值均需大小写敏感</span><br><span class="hljs-meta prompt_">&gt;</span> <span class="language-javascript">多个key/value可同行写也可换行写，同行使用:分隔，同一行使用 , 逗号分隔</span><br><span class="hljs-meta prompt_">&gt;</span> <span class="language-javascript">value可以是个字符串，也可是另一个列表[]</span><br><span class="hljs-meta prompt_">&gt;</span> <span class="language-javascript">一个完整的代码块功能需最少元素需包括 name 和 task</span><br><span class="hljs-meta prompt_">&gt;</span> <span class="language-javascript">一个name只能包括一个task</span><br><span class="hljs-meta prompt_">&gt;</span> <span class="language-javascript"><span class="hljs-variable constant_">YAML</span>中不允许在双引号中出现转义符号，所以都是以单引号来避免转义符错误</span><br><span class="hljs-meta prompt_">&gt;</span> <span class="language-javascript">使用 | 和 &gt; 来分隔多行，实际上这只是一行。 </span><br><span class="hljs-meta prompt_">&gt;</span> <span class="language-javascript"><span class="hljs-variable constant_">YAML</span>文件扩展名通常为yml或yaml</span><br></code></pre></td></tr></table></figure><p>三种常见的数据交换格式</p><p><img src="https://article.biliimg.com/bfs/article/b007eccea7a39bec583b0893e2463cc9697559838.png" alt="7"></p><figure class="highlight dts"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><code class="hljs dts">YAML的语法和其他高阶语言类似，并且可以简单表达清单、散列表、标量等数据结构。<br>序列（Sequence）里的项用<span class="hljs-string">&quot;-&quot;</span>来代表，Map里的键值对（字典）用<span class="hljs-string">&quot;:&quot;</span>分隔<br>示例<br><span class="hljs-symbol">    name:</span> John Smith<br><span class="hljs-symbol">    age:</span> <span class="hljs-number">41</span><br><span class="hljs-symbol">    gender:</span> Male<br><span class="hljs-symbol">    spouse:</span><br><span class="hljs-symbol">      name:</span> Jane Smith<br><span class="hljs-symbol">      age:</span> <span class="hljs-number">37</span><br><span class="hljs-symbol">      gender:</span> Female<br><span class="hljs-symbol">    children:</span><br>      - name: Jimmy Smith<br><span class="hljs-symbol">        age:</span> <span class="hljs-number">17</span><br><span class="hljs-symbol">        gender:</span> Male<br>      - name: Jenny Smith<br>        age <span class="hljs-number">13</span><br><span class="hljs-symbol">        gender:</span> Female<br></code></pre></td></tr></table></figure><h2 id="修改vim"><a href="#修改vim" class="headerlink" title="修改vim"></a>修改vim</h2><figure class="highlight routeros"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><code class="hljs routeros">vim ~/.vimrc<br><span class="hljs-built_in">set</span> nu       <br><span class="hljs-built_in">set</span> paste    <br><span class="hljs-built_in">set</span> cursorline <br><span class="hljs-built_in">set</span> cursorcolumn <br>autocmd FileType yaml setlocal ai et <span class="hljs-attribute">ts</span>=2 <span class="hljs-attribute">sw</span>=2 <br><br><br><span class="hljs-built_in">set</span> nu       #显示行号<br><span class="hljs-built_in">set</span> paste    #黏贴内容保留格式<br><span class="hljs-built_in">set</span> cursorline #行定位<br><span class="hljs-built_in">set</span> cursorcolumn #列定位<br>autocmd FileType yaml setlocal ai et <span class="hljs-attribute">ts</span>=2 <span class="hljs-attribute">sw</span>=2 <br><span class="hljs-comment">#FileType 代表文件类型,后边跟参数yaml，就是这个作用于yaml文件，编写其他文件时不起作用</span><br><span class="hljs-comment">#ts=2是tabstop=2的缩写，表示使用2个空格自动代替tab键</span><br><span class="hljs-comment">#et=expandtab 表示tab键的缩写</span><br><span class="hljs-comment">#sw=2 是shiftwidth=2的缩写，表示开启自动缩进对齐，缩进宽度为2个空格</span><br><span class="hljs-comment">#ai=auto indent   自动退格对齐\</span><br><br></code></pre></td></tr></table></figure><p>将这段代码添加到 <code>~/.vimrc</code> 文件中，以使 Vim 在启动时自动应用这些设置</p><h2 id="playbook基础组件"><a href="#playbook基础组件" class="headerlink" title="playbook基础组件"></a>playbook基础组件</h2><p>一个简单的剧本模型（YAML语言） </p><p>1&gt; 缩进：用两个空格缩进 </p><p>2&gt; 列表：用 - </p><p>3&gt; 字典：key: value </p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><code class="hljs yaml"><span class="hljs-meta">--- </span><br><span class="hljs-bullet">-</span> <span class="hljs-attr">hosts:</span> <span class="hljs-string">YYY</span>          <span class="hljs-comment">#待操作主机集，可以不写，执行时通过 -i 调用host文件</span><br>  <span class="hljs-string">remote_user：</span> <span class="hljs-string">root</span>  <span class="hljs-comment">#在远端使用哪个用户执行</span><br>  <span class="hljs-attr">tasks:</span>              <span class="hljs-comment">#任务集（必须）</span><br>  <span class="hljs-bullet">-</span> <span class="hljs-attr">name:</span> <span class="hljs-string">task1</span>       <span class="hljs-comment">#只是一个文本提示，执行时会输出其中内容（例如输出Install httpd）</span><br>    <span class="hljs-attr">module1:</span>          <span class="hljs-comment">#真正干活的部分，其实就是前面讲过的ansible各种模块</span><br>      <span class="hljs-attr">argument1 :</span> <span class="hljs-string">value1</span> <br>      <span class="hljs-attr">argument2 :</span> <span class="hljs-string">value2</span> <br>  <span class="hljs-bullet">-</span> <span class="hljs-attr">name:</span> <span class="hljs-string">task2</span> <br>    <span class="hljs-attr">module2:</span><br>      <span class="hljs-attr">argument1 :</span> <span class="hljs-string">value1</span> <br>      <span class="hljs-attr">argument2 :</span> <span class="hljs-string">value2</span> <br><span class="hljs-string">...</span> <br></code></pre></td></tr></table></figure><p>解释：</p><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs markdown">Hosts：<br><span class="hljs-code">    &gt; playbook中的每一个play的目的都是为了让特定主机以某个指定的用户身份执行任务。</span><br><span class="hljs-code">      hosts用于指定要执行指定任务的主机，须事先定义在主机清单中</span><br><span class="hljs-code"></span><br></code></pre></td></tr></table></figure><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><code class="hljs yaml"><span class="hljs-attr">remote_user:</span> <br>    <span class="hljs-string">可用于Host和task中。</span><br>    <span class="hljs-string">也可以通过指定其通过sudo的方式在远程主机上执行任务，其可用于play全局或某任务；</span><br>    <span class="hljs-string">此外，甚至可以在sudo时使用sudo_user指定sudo时切换的用户</span><br>    <span class="hljs-bullet">-</span> <span class="hljs-attr">hosts:</span> <span class="hljs-string">all</span><br>      <span class="hljs-attr">remote_user:</span> <span class="hljs-string">root</span>   <span class="hljs-string">(可省略,默认为root)</span>  <span class="hljs-string">以root身份连接</span><br>      <span class="hljs-attr">tasks:</span>    <span class="hljs-string">指定任务</span><br>      <span class="hljs-bullet">-</span> <span class="hljs-attr">name:</span> <span class="hljs-string">test</span> <span class="hljs-string">connection</span><br>        <span class="hljs-attr">ping:</span><br>          <span class="hljs-attr">remote_user:</span> <span class="hljs-string">magedu</span><br>          <span class="hljs-attr">sudo:</span> <span class="hljs-literal">yes</span>           <span class="hljs-string">默认sudo为root</span><br>          <span class="hljs-string">sudo_user:wang</span>      <span class="hljs-string">sudo为wang</span><br></code></pre></td></tr></table></figure><figure class="highlight ada"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><code class="hljs ada"><span class="hljs-keyword">task</span>列表和action<br>    任务列表<span class="hljs-keyword">task</span>:由多个动作,多个任务组合起来的,每个任务都调用的模块,一个模块一个模块执行<br>    <span class="hljs-number">1</span>&gt; play的主体部分是<span class="hljs-keyword">task</span> list，<span class="hljs-keyword">task</span> list中的各任务按次序逐个在hosts中指定的所有主机上执行，<br>       即在所有主机上完成第一个任务后，再开始第二个任务<br><br>    <span class="hljs-number">2</span>&gt; <span class="hljs-keyword">task</span>的目的是使用指定的参数执行模块，而在模块参数中可以使用变量。<br>   模块执行是幂等的，这意味着多次执行是安全的，因为其结果均一致<br><br>    <span class="hljs-number">3</span>&gt; 每个<span class="hljs-keyword">task</span>都应该有其name，用于playbook的执行结果输出，建议其内容能清晰地描述任务执行步骤。<br>   如果未提供name，则action的结果将用于输出<br></code></pre></td></tr></table></figure><h2 id="playbook书写风格"><a href="#playbook书写风格" class="headerlink" title="playbook书写风格"></a>playbook书写风格</h2><p>简单案例：</p><p>编写echo.yaml文件，内容如下</p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><code class="hljs yaml"><span class="hljs-string">vim</span> <span class="hljs-string">echo.yaml</span><br><span class="hljs-meta">---</span><br><span class="hljs-bullet">-</span> <span class="hljs-attr">hosts:</span> <span class="hljs-number">192.168</span><span class="hljs-number">.48</span><span class="hljs-number">.102</span><br>  <span class="hljs-attr">tasks:</span><br>  <span class="hljs-bullet">-</span> <span class="hljs-attr">name:</span> <span class="hljs-string">输出1</span><br>    <span class="hljs-attr">shell:</span> <span class="hljs-string">echo</span> <span class="hljs-string">&quot;1&quot;</span><br>  <span class="hljs-bullet">-</span> <span class="hljs-attr">name:</span> <span class="hljs-string">输出2</span><br>    <span class="hljs-attr">shell:</span> <span class="hljs-string">echo</span> <span class="hljs-string">&quot;2&quot;</span><br><span class="hljs-string">...</span><br><span class="hljs-comment">#执行该剧本文件：</span><br><span class="hljs-string">ansible-playbook</span> <span class="hljs-string">echo.yaml</span>  <br></code></pre></td></tr></table></figure><p>命令执行返回的结果:</p><p>第一行PLAY表示执行的主机或者主机组。<br>第二行TASK[Gathering Facts]，在 Playbook 中并没有定义，这是Ansible自带的task 收集主机的信息，此功能非常实用，后面的任务中会详细讲解。这里仅需知晓task为Ansible自带的功能，可以通过Playbook中添加 gather_facts: no 进行关闭。<br>下面两个task是自行编辑的task，可以发现没有返回结果，但是当出现黄色的changed时代表执行或者修改成功。changed代表前后状态发生改变,例如使用copy模块，拷贝同一个东西，第一次执行成功的时候是changed状态，第二次再执行的时候就是ok状态。ok状态代表:Ansible检查了需要更改的内容发现前后没有变化，所以直接返回ok状态，实际上 Ansible并没有去执行该操作。最后代表状态,即 Playbook的执行结果。ok表示检查了但不需要操作的任务量。failed表示执行失败的数量，changRed代表状unreachable表示不可达的主机数态更改的数量，ok+changed 才代表执行完成的任务数量。</p><h2 id="编写playbook"><a href="#编写playbook" class="headerlink" title="编写playbook"></a>编写playbook</h2><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><code class="hljs yaml"><span class="hljs-string">vim</span> <span class="hljs-string">httpd.yaml</span><br><span class="hljs-string">---</span> <span class="hljs-comment">##列出第一个play </span><br><span class="hljs-bullet">-</span> <span class="hljs-attr">name:</span> <span class="hljs-string">Install</span> <span class="hljs-string">httpd</span> <span class="hljs-string">package</span> <span class="hljs-string">and</span> <span class="hljs-string">start</span> <span class="hljs-string">httpd</span> <span class="hljs-string">service</span> <span class="hljs-comment">##标明 该play的用途 </span><br>  <span class="hljs-attr">hosts:</span> <span class="hljs-number">192.168</span><span class="hljs-number">.142</span><span class="hljs-number">.101</span> <span class="hljs-comment">##指定对其运行play中任务的主机（必填项，指定多台主机可以使用分组，或者 , 分隔） </span><br>  <span class="hljs-attr">tasks:</span> <span class="hljs-comment">##play的任务列表 </span><br>  <span class="hljs-bullet">-</span> <span class="hljs-attr">name:</span> <span class="hljs-string">Install</span> <span class="hljs-string">httpd</span> <span class="hljs-string">package</span> <span class="hljs-comment">##任务1的描述 </span><br>    <span class="hljs-attr">yum:</span> <span class="hljs-comment">##任务1调用yum模块，模块内容往下写 </span><br>      <span class="hljs-attr">name:</span> <span class="hljs-string">httpd</span> <span class="hljs-comment">##参数1：yum模块需要使用的软件包 </span><br>      <span class="hljs-attr">state:</span> <span class="hljs-string">present</span> <span class="hljs-comment">##参数2：安装软件包#以上任务等同于 ansible 192.168.142.101 -m yum -a &quot;name=httpd state=present&quot; </span><br><br>  <span class="hljs-bullet">-</span> <span class="hljs-attr">name:</span> <span class="hljs-string">Start</span> <span class="hljs-string">httpd</span> <span class="hljs-string">service</span> <span class="hljs-comment">##任务2的描述 </span><br>    <span class="hljs-attr">service:</span> <span class="hljs-comment">##任务2调用服务模块 </span><br>      <span class="hljs-attr">name:</span> <span class="hljs-string">httpd</span> <span class="hljs-comment">##参数1：service调用的服务名称 </span><br>      <span class="hljs-attr">state:</span> <span class="hljs-string">started</span> <span class="hljs-comment">##参数2：service调用服务要达到的目标状态 </span><br>      <span class="hljs-attr">enabled:</span> <span class="hljs-literal">yes</span> <span class="hljs-comment">##参数3：调用的服务开机启动 </span><br><span class="hljs-comment">#以上任务等同于 ansible 192.168.142.101 -m service -a &quot;name=httpd state=started enabled=yes&quot; </span><br></code></pre></td></tr></table></figure><p><img src="https://article.biliimg.com/bfs/article/c46682ee4cffdd1539963dde5b5edab5697559838.png" alt="image-20221114191416282"></p><h2 id="运行playbook"><a href="#运行playbook" class="headerlink" title="运行playbook"></a>运行playbook</h2><figure class="highlight scss"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><code class="hljs scss">运行playbook的方式<br>    ansible-playbook &lt;filename<span class="hljs-selector-class">.yaml</span>&gt; ... <span class="hljs-selector-attr">[options]</span><br><br>常见选项<br>    <span class="hljs-attr">--check</span> -C       只检测可能会发生的改变，但不真正执行操作 <br>                     (只检查语法,如果执行过程中出现问题,-C无法检测出来)<br>                     (执行playbook生成的文件不存在,后面的程序如果依赖这些文件,也会导致检测失败)<br>    <span class="hljs-attr">--list-hosts</span>     列出运行任务的主机<br>    <span class="hljs-attr">--list-tags</span>      列出tag  (列出标签)<br>    <span class="hljs-attr">--list-tasks</span>     列出task (列出任务)<br>    <span class="hljs-attr">--limit</span> 主机列表 只针对主机列表中的主机执行<br>    -v -vv -vvv      显示过程<br><br>示例<br>    ansible-playbook hello<span class="hljs-selector-class">.yaml</span> <span class="hljs-attr">--check</span> 只检测<br>    ansible-playbook hello<span class="hljs-selector-class">.yaml</span> <span class="hljs-attr">--list-hosts</span>  显示运行任务的主机<br>    ansible-playbook hello<span class="hljs-selector-class">.yaml</span> <span class="hljs-attr">--limit</span> <span class="hljs-number">192.168</span><span class="hljs-selector-class">.142</span><span class="hljs-selector-class">.101</span>  限制主机<br>    ansible-playbook hello<span class="hljs-selector-class">.yaml</span> <span class="hljs-attr">--list-tasks</span>  显示运行任务的主机<br><br></code></pre></td></tr></table></figure><p><strong>1、在ansible工作目录运行</strong> 完整剧本：httpd.yaml</p><figure class="highlight livecodeserver"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs livecodeserver">执行剧本<br>ansible-playbook playbooks/httpd.yaml<br>验证服务<br>ansible <span class="hljs-number">192.168</span><span class="hljs-number">.142</span><span class="hljs-number">.101</span> -m <span class="hljs-built_in">shell</span> -<span class="hljs-keyword">a</span> <span class="hljs-string">&#x27;rpm -qa |grep httpd&#x27;</span><br>ansible <span class="hljs-number">192.168</span><span class="hljs-number">.142</span><span class="hljs-number">.101</span> -m <span class="hljs-built_in">shell</span> -<span class="hljs-keyword">a</span> <span class="hljs-string">&#x27;netstat -ntulp |grep 80&#x27;</span><br></code></pre></td></tr></table></figure><p><img src="https://article.biliimg.com/bfs/article/12d9f66a9caa9cfe06c19ca92fd8662c697559838.png" alt="image-20221025160724333"></p><p><strong>2.提高输出的详细程度</strong></p><p><img src="https://article.biliimg.com/bfs/article/bfa1dd22cd3e992ef457e888ddcd6bf2697559838.png" alt="image-20221025160900182"></p><p>注：通常使用 ansible-playbook -v 即可。</p><p><img src="https://article.biliimg.com/bfs/article/31018a07367a6220d66792ac41b3cb4e697559838.png" alt="image-20221025160914676"></p><p><strong>3.执行空运行（冒烟运行）</strong></p><p><img src="https://article.biliimg.com/bfs/article/2ccd61fdd9d2e7f873069b5e700fac0f697559838.png" alt="image-20221025160948414"></p><p><img src="https://article.biliimg.com/bfs/article/937ba28b59d7461e73bb76d0684fecf6697559838.png" alt="image-20221025160959873"></p><h2 id="handlers-notify"><a href="#handlers-notify" class="headerlink" title="handlers+notify"></a>handlers+notify</h2><p>Handlers 实际上就是一个<font color='red'>触发</font>器，是task列表，这些task与前述的task并没有本质上的不同,用于当关注的资源发生变化时，才会采取一定的操作。任务都有状态changed或者ok，只有在任务执行状态为change时，才执行该任务调用的handler。</p><p>Notify此action可用于在每个play的最后被触发，这样可避免多次有改变发生时每次都执行指定的操作，仅在所有的变化发生完成后一次性地执行指定操作。在notify中列出的操作称为handler，也<font color='red'>即notify中调用handler中定义的操作</font></p><p><font color='red'>示例1：</font></p><ol><li>使用playbook安装httpd，并验证服务启动，查看httpd使用的端口</li></ol><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><code class="hljs shell">vim httpd3.yaml<br>---<br>- hosts: all<br>  remote_user: root<br><br>  tasks:<br>  - name: Install httpd<br>    yum:<br>      name: httpd<br>      state: present<br>  - name: ensure apache is running<br>    service:<br>      name: httpd<br>      state: started<br>      enabled: yes<br><br>ansible-playbook httpd3.yaml<br>ansible all -m shell -a &#x27;systemctl status httpd&#x27;<br>ansible all -m shell -a &#x27;netstat -tunlp|grep httpd&#x27;<br></code></pre></td></tr></table></figure><ol start="2"><li>在被控端（<font color='red'>两台机</font>）修改httpd的conf文件，监听端口改成8080</li></ol><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs yaml"><span class="hljs-string">mkdir</span> <span class="hljs-string">-p</span> <span class="hljs-string">/root/ansible/files</span><br><span class="hljs-string">cp</span> <span class="hljs-string">/etc/httpd/conf/httpd.conf</span>  <span class="hljs-string">/root/ansible/files</span><br><span class="hljs-comment">#如果前面httpd3运行成功，说明成功安装httpd，则httpd.conf会存在</span><br><span class="hljs-string">vim</span> <span class="hljs-string">/root/ansible/files/httpd.conf</span><br><span class="hljs-comment">#将Listen 80 修改为Listen 8080</span><br></code></pre></td></tr></table></figure><ol start="3"><li>修改剧本文件，增加拷贝配置文件的task，并重新执行剧本。</li></ol><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br></pre></td><td class="code"><pre><code class="hljs yaml"><span class="hljs-string">vim</span> <span class="hljs-string">httpd4.yaml</span><br><span class="hljs-meta">---</span><br><span class="hljs-bullet">-</span> <span class="hljs-attr">hosts:</span> <span class="hljs-string">all</span><br>  <span class="hljs-attr">remote_user:</span> <span class="hljs-string">root</span><br>  <span class="hljs-attr">tasks:</span>   <br>  <span class="hljs-bullet">-</span> <span class="hljs-attr">name:</span> <span class="hljs-string">Install</span> <span class="hljs-string">httpd</span><br>    <span class="hljs-attr">yum:</span><br>      <span class="hljs-attr">name:</span> <span class="hljs-string">httpd</span><br>      <span class="hljs-attr">state:</span> <span class="hljs-string">present</span><br>  <span class="hljs-bullet">-</span> <span class="hljs-attr">name:</span> <span class="hljs-string">backup</span> <span class="hljs-string">httpd.conf</span><br>    <span class="hljs-attr">shell:</span> <span class="hljs-string">cp</span> <span class="hljs-string">/etc/httpd/conf/httpd.conf&#123;,.bak&#125;</span><br>  <span class="hljs-comment">#备份原文件</span><br>  <span class="hljs-bullet">-</span> <span class="hljs-attr">name:</span> <span class="hljs-string">copy</span> <span class="hljs-string">configure</span> <span class="hljs-string">file</span><br>    <span class="hljs-attr">copy:</span> <br>      <span class="hljs-attr">src:</span> <span class="hljs-string">/root/ansible/files/httpd.conf</span> <br>      <span class="hljs-attr">dest:</span> <span class="hljs-string">/etc/httpd/conf/</span><br>      <span class="hljs-attr">backup:</span> <span class="hljs-literal">yes</span><br>  <span class="hljs-comment">#第二步修改了8080端口，将文件移回原处覆盖源文件</span><br>  <span class="hljs-bullet">-</span> <span class="hljs-attr">name:</span> <span class="hljs-string">ensure</span> <span class="hljs-string">apache</span> <span class="hljs-string">is</span> <span class="hljs-string">running</span><br>    <span class="hljs-attr">service:</span><br>      <span class="hljs-attr">name:</span> <span class="hljs-string">httpd</span><br>      <span class="hljs-attr">state:</span> <span class="hljs-string">started</span><br>      <span class="hljs-attr">enabled:</span> <span class="hljs-literal">yes</span><br><br><span class="hljs-string">ansible-playbook</span> <span class="hljs-string">httpd4.yaml</span><br><span class="hljs-string">ansible</span> <span class="hljs-string">all</span> <span class="hljs-string">-m</span> <span class="hljs-string">shell</span> <span class="hljs-string">-a</span> <span class="hljs-string">&#x27;cat /etc/httpd/conf/httpd.conf|grep 8080&#x27;</span><br><span class="hljs-string">ansible</span> <span class="hljs-string">all</span> <span class="hljs-string">-m</span> <span class="hljs-string">shell</span> <span class="hljs-string">-a</span> <span class="hljs-string">&#x27;systemctl status httpd&#x27;</span><br><span class="hljs-string">ansible</span> <span class="hljs-string">all</span> <span class="hljs-string">-m</span> <span class="hljs-string">shell</span> <span class="hljs-string">-a</span> <span class="hljs-string">&#x27;netstat -tunlp|grep httpd&#x27;</span><br><span class="hljs-comment">#发现修改配置，但没有生效，因为没有重启httpd应用</span><br></code></pre></td></tr></table></figure><ol start="3"><li>增加handlers和notify</li></ol><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br></pre></td><td class="code"><pre><code class="hljs yaml"><span class="hljs-string">vim</span> <span class="hljs-string">httpd4.yaml</span><br><span class="hljs-meta">---</span><br><span class="hljs-bullet">-</span> <span class="hljs-attr">hosts:</span> <span class="hljs-string">all</span><br>  <span class="hljs-attr">remote_user:</span> <span class="hljs-string">root</span><br>  <span class="hljs-attr">tasks:</span>   <br>  <span class="hljs-bullet">-</span> <span class="hljs-attr">name:</span> <span class="hljs-string">Install</span> <span class="hljs-string">httpd</span><br>    <span class="hljs-attr">yum:</span><br>      <span class="hljs-attr">name:</span> <span class="hljs-string">httpd</span><br>      <span class="hljs-attr">state:</span> <span class="hljs-string">present</span><br>  <span class="hljs-bullet">-</span> <span class="hljs-attr">name:</span> <span class="hljs-string">copy</span> <span class="hljs-string">configure</span> <span class="hljs-string">file</span><br>    <span class="hljs-attr">copy:</span> <br>      <span class="hljs-attr">src:</span> <span class="hljs-string">/root/ansible/files/httpd.conf</span> <br>      <span class="hljs-attr">dest:</span> <span class="hljs-string">/etc/httpd/conf/</span><br>      <span class="hljs-attr">backup:</span> <span class="hljs-literal">yes</span><br>    <span class="hljs-comment">#调用触发列表里的 restart httpd任务，调用之后重启httpd，配置文件即刻生效</span><br>    <span class="hljs-attr">notify:</span> <span class="hljs-string">restart</span> <span class="hljs-string">httpd</span><br>  <span class="hljs-bullet">-</span> <span class="hljs-attr">name:</span> <span class="hljs-string">ensure</span> <span class="hljs-string">apache</span> <span class="hljs-string">is</span> <span class="hljs-string">running</span><br>    <span class="hljs-attr">service:</span><br>      <span class="hljs-attr">name:</span> <span class="hljs-string">httpd</span><br>      <span class="hljs-attr">state:</span> <span class="hljs-string">started</span><br>      <span class="hljs-attr">enabled:</span> <span class="hljs-literal">yes</span><br><span class="hljs-comment">#触发器列表</span><br>  <span class="hljs-attr">handlers:</span><br>  <span class="hljs-bullet">-</span> <span class="hljs-attr">name:</span> <span class="hljs-string">restart</span> <span class="hljs-string">httpd</span><br>    <span class="hljs-attr">service:</span> <br>      <span class="hljs-attr">name:</span> <span class="hljs-string">httpd</span> <br>      <span class="hljs-attr">state:</span> <span class="hljs-string">restarted</span><br>        <br>        <br><span class="hljs-string">ansible-playbook</span> <span class="hljs-string">httpd4.yaml</span><br><span class="hljs-string">ansible</span> <span class="hljs-string">all</span> <span class="hljs-string">-m</span> <span class="hljs-string">shell</span> <span class="hljs-string">-a</span> <span class="hljs-string">&#x27;netstat -tunlp|grep httpd&#x27;</span><br><span class="hljs-string">发现端口是8080（即成功）</span><br></code></pre></td></tr></table></figure><p>修改&#x2F;root&#x2F;ansible&#x2F;files&#x2F;httpd.conf ，将端口修改为8081，重新执行httpd4.yaml，并验证服务端口已经改变。</p><figure class="highlight livecodeserver"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs livecodeserver">ansible-playbook httpd4.yaml<br>ansible all -m <span class="hljs-built_in">shell</span> -<span class="hljs-keyword">a</span> <span class="hljs-string">&#x27;netstat -tunlp|grep httpd&#x27;</span><br></code></pre></td></tr></table></figure><p>发现端口变成8081，说明只有在任务执行状态为change时，才执行该任务调用的handler。</p><h2 id="TAGS"><a href="#TAGS" class="headerlink" title="TAGS"></a>TAGS</h2><p><font color='red'>tage: 添加标签 </font><br><font color='orange'>可以指定某一个任务添加一个标签,添加标签以后,想执行某个动作可以做出挑选来执行,多个动作可以使用同一个标签</font></p><p>停止httpd服务</p><figure class="highlight pf"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs pf">ansible <span class="hljs-literal">all</span> -m service -a &#x27;name=httpd  <span class="hljs-keyword">state</span>=stopped&#x27;<br>ansible <span class="hljs-literal">all</span> -m shell -a &#x27;ss -tln |grep :<span class="hljs-number">8081</span>&#x27;<br></code></pre></td></tr></table></figure><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br></pre></td><td class="code"><pre><code class="hljs yaml">[<span class="hljs-string">root@controller</span> <span class="hljs-string">~</span>]<span class="hljs-comment"># vi httpd5.yaml</span><br><span class="hljs-meta">---</span><br><span class="hljs-bullet">-</span> <span class="hljs-attr">hosts:</span> <span class="hljs-string">all</span><br>  <span class="hljs-attr">remote_user:</span> <span class="hljs-string">root</span><br>  <span class="hljs-attr">tasks:</span><br>  <span class="hljs-bullet">-</span> <span class="hljs-attr">name:</span> <span class="hljs-string">install</span> <span class="hljs-string">httpd</span><br>    <span class="hljs-attr">yum:</span><br>      <span class="hljs-attr">name:</span> <span class="hljs-string">httpd</span><br>      <span class="hljs-attr">state:</span> <span class="hljs-string">present</span><br>    <span class="hljs-attr">tags:</span> <span class="hljs-string">install</span> <span class="hljs-comment">#install标签</span><br>  <span class="hljs-bullet">-</span> <span class="hljs-attr">name:</span> <span class="hljs-string">set</span> <span class="hljs-string">listen8080</span><br>    <span class="hljs-attr">shell:</span> <span class="hljs-string">sed</span> <span class="hljs-string">-i</span> <span class="hljs-string">&quot;s/Listen 80/Listen 8080/g&quot;</span> <span class="hljs-string">/etc/httpd/conf/httpd.conf</span><br>    <span class="hljs-attr">tags:</span> <span class="hljs-string">set8080</span> <span class="hljs-comment">#设置8080标签</span><br>  <span class="hljs-bullet">-</span> <span class="hljs-attr">name:</span> <span class="hljs-string">backup</span> <span class="hljs-string">cofing</span><br>    <span class="hljs-attr">copy:</span><br>      <span class="hljs-attr">src:</span> <span class="hljs-string">/etc/httpd/conf/httpd.conf</span><br>      <span class="hljs-attr">dest:</span> <span class="hljs-string">/etc/httpd/conf/httpd.conf</span><br>      <span class="hljs-attr">backup:</span> <span class="hljs-literal">yes</span><br>    <span class="hljs-attr">notify:</span> <span class="hljs-string">restart</span> <span class="hljs-string">httpd</span><br>    <span class="hljs-attr">tags:</span> <span class="hljs-string">backup</span> <span class="hljs-comment">#备份标签</span><br>  <span class="hljs-bullet">-</span> <span class="hljs-attr">name:</span> <span class="hljs-string">配置</span> <span class="hljs-string">httpd</span> <span class="hljs-string">服务</span><br>    <span class="hljs-attr">service:</span><br>      <span class="hljs-attr">name:</span> <span class="hljs-string">httpd</span><br>      <span class="hljs-attr">state:</span> <span class="hljs-string">started</span><br>      <span class="hljs-attr">enabled:</span> <span class="hljs-literal">yes</span><br>    <span class="hljs-attr">tags:</span> <span class="hljs-string">started</span> <span class="hljs-comment">#开启httpd服务标签</span><br>  <span class="hljs-attr">handlers:</span><br>  <span class="hljs-bullet">-</span> <span class="hljs-attr">name:</span> <span class="hljs-string">restart</span> <span class="hljs-string">httpd</span><br>    <span class="hljs-attr">service:</span><br>      <span class="hljs-attr">name:</span> <span class="hljs-string">httpd</span><br>      <span class="hljs-attr">state:</span> <span class="hljs-string">restarted</span><br>    <span class="hljs-attr">tags:</span> <span class="hljs-string">restart</span>  <span class="hljs-comment">#重启服务标签</span><br><span class="hljs-string">...</span><br><br></code></pre></td></tr></table></figure><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs yaml"><span class="hljs-string">ansible-playbook</span> <span class="hljs-string">-tstarted</span> <span class="hljs-string">httpd5.yaml</span>   <br><span class="hljs-comment">#指定执行started 这个标签</span><br><span class="hljs-string">ansible</span> <span class="hljs-string">all</span> <span class="hljs-string">-m</span> <span class="hljs-string">shell</span> <span class="hljs-string">-a</span> <span class="hljs-string">&#x27;ss -tln |grep :8080&#x27;</span><br><span class="hljs-string">ansible-playbook</span> <span class="hljs-string">-t</span> <span class="hljs-string">install,conf</span> <span class="hljs-string">httpd.yaml</span>   <br><span class="hljs-comment">#指定执行install,backup 两个标签</span><br></code></pre></td></tr></table></figure><h2 id="管理变量"><a href="#管理变量" class="headerlink" title="管理变量"></a>管理变量</h2><p><img src="https://article.biliimg.com/bfs/article/f78072ce4403efc2e8da3f64366b58cc697559838.png" alt="image-20221025165509586"></p><p>变量定义：key&#x3D;value<br>    示例：http_port&#x3D;80</p><p>变量调用方式：<br>    1&gt; 通过 调用变量，<font color='red'>且变量名前后必须有空格</font>，有时用”“才生效 (<font color='red'>引号</font>）</p><h3 id="在playbook中定义"><a href="#在playbook中定义" class="headerlink" title="在playbook中定义"></a>在playbook中定义</h3><p>vars语句定义全局变量（该变量作用于整个Play） </p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><code class="hljs yaml"><span class="hljs-string">vim</span> <span class="hljs-string">test_vars.yaml</span><br><br><span class="hljs-meta">---</span><br><span class="hljs-bullet">-</span> <span class="hljs-attr">name:</span> <span class="hljs-string">test_var</span><br>  <span class="hljs-attr">hosts:</span> <span class="hljs-string">all</span><br>  <span class="hljs-attr">vars:</span><br>    <span class="hljs-attr">username:</span> <span class="hljs-string">test_user1</span><br>  <span class="hljs-attr">tasks:</span><br>  <span class="hljs-bullet">-</span> <span class="hljs-attr">name:</span>  <span class="hljs-string">create</span> <span class="hljs-string">user</span> <span class="hljs-string">via</span> <span class="hljs-string">a</span> <span class="hljs-string">variable</span> <span class="hljs-string">file</span><br>    <span class="hljs-attr">user:</span><br>      <span class="hljs-attr">name:</span> <span class="hljs-string">&quot;<span class="hljs-template-variable">&#123;&#123; username &#125;&#125;</span>&quot;</span>    <br>      <span class="hljs-comment">#冒号后面不能以&#123;开头，不然会报语法错误，需要加上引号。</span><br>      <span class="hljs-attr">state:</span> <span class="hljs-string">present</span><br><span class="hljs-comment">#创建一个test_user1的用户</span><br> <br> <span class="hljs-string">ansible-playbook</span> <span class="hljs-string">-v</span> <span class="hljs-string">test_vars.yaml</span> <br> <br> <span class="hljs-string">ansible</span> <span class="hljs-string">all</span> <span class="hljs-string">-m</span> <span class="hljs-string">shell</span> <span class="hljs-string">-a</span> <span class="hljs-string">&#x27;getent passwd test_user1&#x27;</span><br></code></pre></td></tr></table></figure><p><img src="https://article.biliimg.com/bfs/article/5bcc2cd724365fe8baecd882b723c0f2697559838.png" alt="image-20221025165757353"></p><p>执行结果： </p><p><img src="https://article.biliimg.com/bfs/article/d078d3bd0b5569c17008b82167d7c24e697559838.png" alt="image-20221025165815465"></p><h4 id="课堂练习"><a href="#课堂练习" class="headerlink" title="课堂练习"></a>课堂练习</h4><p>通过playbook中定义用户名和组名，实现变量引用，创建用户和组。</p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><code class="hljs yaml"><span class="hljs-string">vim</span> <span class="hljs-string">var.yaml</span><br><span class="hljs-meta">---</span><br><span class="hljs-bullet">-</span> <span class="hljs-attr">hosts:</span> <span class="hljs-string">all</span><br>  <span class="hljs-attr">remote_user:</span> <span class="hljs-string">root</span><br>  <span class="hljs-attr">vars:</span><br>  <span class="hljs-bullet">-</span> <span class="hljs-attr">username:</span> <span class="hljs-string">user1</span><br>  <span class="hljs-bullet">-</span> <span class="hljs-attr">groupname:</span> <span class="hljs-string">group1</span><br>  <span class="hljs-attr">tasks:</span><br>  <span class="hljs-bullet">-</span> <span class="hljs-attr">name:</span> <span class="hljs-string">create</span> <span class="hljs-string">group</span><br>    <span class="hljs-attr">group:</span> <br>      <span class="hljs-attr">name:</span> <span class="hljs-string">&quot;<span class="hljs-template-variable">&#123;&#123; groupname &#125;&#125;</span>&quot;</span> <br>      <span class="hljs-attr">state:</span> <span class="hljs-string">present</span><br>  <span class="hljs-bullet">-</span> <span class="hljs-attr">name:</span> <span class="hljs-string">create</span> <span class="hljs-string">user</span><br>    <span class="hljs-attr">user:</span> <br>      <span class="hljs-attr">name:</span> <span class="hljs-string">&quot;<span class="hljs-template-variable">&#123;&#123; username &#125;&#125;</span>&quot;</span> <br>      <span class="hljs-attr">state:</span> <span class="hljs-string">present</span><br><br><span class="hljs-string">ansible-playbook</span> <span class="hljs-string">-v</span> <span class="hljs-string">var.yaml</span><br><span class="hljs-string">ansible</span> <span class="hljs-string">all</span> <span class="hljs-string">-m</span> <span class="hljs-string">shell</span> <span class="hljs-string">-a</span> <span class="hljs-string">&#x27;getent passwd user1&#x27;</span><br><span class="hljs-string">ansible</span> <span class="hljs-string">all</span> <span class="hljs-string">-m</span> <span class="hljs-string">shell</span> <span class="hljs-string">-a</span> <span class="hljs-string">&#x27;getent group group1&#x27;</span><br></code></pre></td></tr></table></figure><ol start="2"><li></li></ol><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><code class="hljs yaml"><span class="hljs-string">开启防火墙</span><br><span class="hljs-string">ansible</span> <span class="hljs-string">all</span> <span class="hljs-string">-m</span> <span class="hljs-string">shell</span> <span class="hljs-string">-a</span> <span class="hljs-string">&#x27;systemctl start firewalld&#x27;</span><br><br><span class="hljs-string">vim</span> <span class="hljs-string">firewall.yaml</span><br><span class="hljs-meta">---</span><br><span class="hljs-bullet">-</span> <span class="hljs-attr">hosts:</span> <span class="hljs-string">all</span><br>  <span class="hljs-attr">remote_user:</span> <span class="hljs-string">root</span><br>  <span class="hljs-attr">vars:</span><br>  <span class="hljs-bullet">-</span> <span class="hljs-attr">http_port:</span> <span class="hljs-number">80</span><br>  <span class="hljs-attr">tasks:</span><br>  <span class="hljs-bullet">-</span> <span class="hljs-attr">name:</span> <span class="hljs-string">insert</span> <span class="hljs-string">firewalld</span> <span class="hljs-string">rule</span> <span class="hljs-string">for</span> <span class="hljs-string">httpd</span><br>    <span class="hljs-attr">firewalld:</span> <br>      <span class="hljs-attr">port:</span> <span class="hljs-string">&quot;<span class="hljs-template-variable">&#123;&#123; http_port &#125;&#125;</span>/tcp&quot;</span> <br>      <span class="hljs-attr">permanent:</span> <span class="hljs-literal">true</span> <br>      <span class="hljs-attr">state:</span> <span class="hljs-string">enabled</span> <br>      <span class="hljs-attr">immediate:</span> <span class="hljs-literal">yes</span><br>    <br><span class="hljs-string">ansible-playbook</span> <span class="hljs-string">-v</span> <span class="hljs-string">firewall.yaml</span><br><br><span class="hljs-string">ansible</span> <span class="hljs-string">all</span> <span class="hljs-string">-m</span> <span class="hljs-string">shell</span> <span class="hljs-string">-a</span> <span class="hljs-string">&#x27;systemctl stop firewalld&#x27;</span><br><span class="hljs-string">ansible</span> <span class="hljs-string">all</span> <span class="hljs-string">-m</span> <span class="hljs-string">shell</span> <span class="hljs-string">-a</span> <span class="hljs-string">&#x27;firewall-cmd --query-port=80/tcp&#x27;</span>  <br></code></pre></td></tr></table></figure><h3 id="在独立的变量YAML文件中定义"><a href="#在独立的变量YAML文件中定义" class="headerlink" title="在独立的变量YAML文件中定义"></a>在独立的变量YAML文件中定义</h3><p>当变量较多的时候，或者变量需要多个playbook重用的时候，可以把变量放到独立的文件中，通过关键字”var_files”把文件中定义的变量引用到playbook中。</p><p>vars_files 引用变量文件（只能所用于Play全局，不能在某个task中单独被引用）</p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><code class="hljs yaml"><span class="hljs-string">vim</span> <span class="hljs-string">var_file.yaml</span><br><span class="hljs-attr">username:</span> <span class="hljs-string">test_user3</span><br><br><span class="hljs-string">vim</span> <span class="hljs-string">test_var_file.yaml</span><br><span class="hljs-meta">---</span><br><span class="hljs-bullet">-</span> <span class="hljs-attr">name:</span> <span class="hljs-string">test_var_file</span><br>  <span class="hljs-attr">hosts:</span> <span class="hljs-string">all</span><br>  <span class="hljs-attr">vars_files:</span><br>  <span class="hljs-bullet">-</span> <span class="hljs-string">/root/var_file.yaml</span><br>  <span class="hljs-attr">tasks:</span><br>  <span class="hljs-bullet">-</span> <span class="hljs-attr">name:</span>  <span class="hljs-string">create</span> <span class="hljs-string">user</span> <span class="hljs-string">via</span> <span class="hljs-string">a</span> <span class="hljs-string">variable</span> <span class="hljs-string">file</span><br>    <span class="hljs-attr">user:</span><br>      <span class="hljs-attr">name:</span> <span class="hljs-string">&quot;<span class="hljs-template-variable">&#123;&#123; username &#125;&#125;</span>&quot;</span><br>      <span class="hljs-attr">state:</span> <span class="hljs-string">present</span><br><span class="hljs-string">...</span><br> <br> <span class="hljs-string">ansible-playbook</span> <span class="hljs-string">-v</span> <span class="hljs-string">test_var_file.yaml</span><br> <br> <span class="hljs-string">ansible</span> <span class="hljs-string">all</span> <span class="hljs-string">-m</span> <span class="hljs-string">shell</span> <span class="hljs-string">-a</span> <span class="hljs-string">&#x27;getent passwd test_user3&#x27;</span><br><br></code></pre></td></tr></table></figure><p>练习：将防火墙端口写入</p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><code class="hljs yaml"><span class="hljs-string">将变量写进单独的配置文件中引用</span><br><span class="hljs-string">test_var_file.yaml</span><br><span class="hljs-meta">---</span><br><span class="hljs-bullet">-</span> <span class="hljs-attr">hosts:</span> <span class="hljs-string">all</span><br>  <span class="hljs-attr">remote_user:</span> <span class="hljs-string">root</span><br>  <span class="hljs-attr">vars_files:</span><br>  <span class="hljs-bullet">-</span> <span class="hljs-string">/root/var_file.yaml</span><br>  <span class="hljs-attr">tasks:</span><br>  <span class="hljs-bullet">-</span> <span class="hljs-attr">name:</span> <span class="hljs-string">insert</span> <span class="hljs-string">firewalld</span> <span class="hljs-string">rule</span> <span class="hljs-string">for</span> <span class="hljs-string">httpd</span><br>    <span class="hljs-attr">firewalld:</span> <br>      <span class="hljs-attr">port:</span> <span class="hljs-string">&quot;<span class="hljs-template-variable">&#123;&#123; http_port &#125;&#125;</span>/tcp&quot;</span> <br>      <span class="hljs-attr">permanent:</span> <span class="hljs-literal">true</span> <br>      <span class="hljs-attr">state:</span> <span class="hljs-string">enabled</span> <br>      <span class="hljs-attr">immediate:</span> <span class="hljs-literal">yes</span><br><span class="hljs-string">...</span><br><span class="hljs-string">vim</span> <span class="hljs-string">var_file.yaml</span><br><span class="hljs-attr">http_port:</span> <span class="hljs-number">78</span><br><br><span class="hljs-string">ansible-playbook</span> <span class="hljs-string">-v</span> <span class="hljs-string">test_var_file.yaml</span><br><span class="hljs-string">ansible</span> <span class="hljs-string">all</span> <span class="hljs-string">-m</span> <span class="hljs-string">shell</span> <span class="hljs-string">-a</span> <span class="hljs-string">&#x27;firewall-cmd --query-port=78/tcp&#x27;</span>  <br></code></pre></td></tr></table></figure><h3 id="远程主机上的系统变量（Facts事实）"><a href="#远程主机上的系统变量（Facts事实）" class="headerlink" title="远程主机上的系统变量（Facts事实）"></a>远程主机上的系统变量（Facts事实）</h3><p>ansible会通过setup模块来搜集主机的系统信息，这些搜集到的系统信息叫做Facts。</p><p><img src="https://article.biliimg.com/bfs/article/6f51e9343fac2578b6a1ec24e28ae2ba697559838.png" alt="image-20221026102238684"></p><p>每个playbook在执行前都会默认执行setup模块，所以这些facts信息是可以以变量的形式被使用。</p><h4 id="查看Facts变量"><a href="#查看Facts变量" class="headerlink" title="查看Facts变量"></a>查看Facts变量</h4><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><code class="hljs yaml"><span class="hljs-string">ansible</span> <span class="hljs-string">all</span> <span class="hljs-string">-m</span> <span class="hljs-string">setup</span> <span class="hljs-string">能查看到node节点的所有信息</span><br><span class="hljs-string">ansible</span> <span class="hljs-number">192.168</span><span class="hljs-number">.48</span><span class="hljs-number">.101</span> <span class="hljs-string">-m</span> <span class="hljs-string">setup</span> <span class="hljs-string">|grep</span> <span class="hljs-string">ansible_hostname</span><br><span class="hljs-string">或者可以使用filter过滤信息</span><br><span class="hljs-string">ansible</span> <span class="hljs-string">all</span> <span class="hljs-string">-m</span> <span class="hljs-string">setup</span> <span class="hljs-string">-a</span> <span class="hljs-string">&#x27;filter=&quot;ansible_hostname&quot;&#x27;</span>  <span class="hljs-string">查询主机名</span><br><span class="hljs-string">ansible</span> <span class="hljs-string">all</span> <span class="hljs-string">-m</span> <span class="hljs-string">setup</span> <span class="hljs-string">-a</span> <span class="hljs-string">&#x27;filter=&quot;ansible_default_ipv4&quot;&#x27;</span>  <span class="hljs-string">查询ipv4地址</span><br><span class="hljs-string">ansible</span> <span class="hljs-string">all</span> <span class="hljs-string">-m</span> <span class="hljs-string">setup</span> <span class="hljs-string">-a</span> <span class="hljs-string">&quot;filter=ansible_memory_mb&quot;</span><span class="hljs-string">查询内存</span><br><br><br><span class="hljs-string">其他常用信息列出如下：</span><br><span class="hljs-string">ansible_all_ipv4_addresses：仅显示ipv4的信息。</span><br><span class="hljs-string">ansible_devices：仅显示磁盘设备信息。</span><br><span class="hljs-string">ansible_distribution：显示是什么系统，例：centos,suse等。</span><br><span class="hljs-string">ansible_distribution_major_version：显示是系统主版本。</span><br><span class="hljs-string">ansible_distribution_version：仅显示系统版本。</span><br><span class="hljs-string">ansible_machine：显示系统类型，例：32位，还是64位。</span><br><span class="hljs-string">ansible_eth0：仅显示eth0的信息。</span><br><span class="hljs-string">ansible_hostname：仅显示主机名。</span><br><span class="hljs-string">ansible_kernel：仅显示内核版本。</span><br><span class="hljs-string">ansible_lvm：显示lvm相关信息。</span><br><span class="hljs-string">ansible_memtotal_mb：显示系统总内存。</span><br><span class="hljs-string">ansible_memfree_mb：显示可用系统内存。</span><br><span class="hljs-string">ansible_memory_mb：详细显示内存情况。</span><br><span class="hljs-string">ansible_swaptotal_mb：显示总的swap内存。</span><br><span class="hljs-string">ansible_swapfree_mb：显示swap内存的可用内存。</span><br><span class="hljs-string">ansible_mounts：显示系统磁盘挂载情况。</span><br><span class="hljs-string">ansible_processor：显示cpu个数(具体显示每个cpu的型号)。</span><br><span class="hljs-string">ansible_processor_vcpus：显示cpu个数(只显示总的个数)。</span><br></code></pre></td></tr></table></figure><h4 id="使用Facts变量"><a href="#使用Facts变量" class="headerlink" title="使用Facts变量"></a>使用Facts变量</h4><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><code class="hljs yaml"><span class="hljs-string">vim</span> <span class="hljs-string">var2.yaml</span><br><span class="hljs-meta">---</span><br><span class="hljs-bullet">-</span> <span class="hljs-attr">hosts:</span> <span class="hljs-string">all</span><br>  <span class="hljs-attr">remote_user:</span> <span class="hljs-string">root</span><br>  <span class="hljs-attr">tasks:</span><br>  <span class="hljs-bullet">-</span> <span class="hljs-attr">name:</span> <span class="hljs-string">create</span> <span class="hljs-string">log</span> <span class="hljs-string">file</span><br>    <span class="hljs-attr">file:</span> <br>      <span class="hljs-attr">name:</span> <span class="hljs-string">/root/&#123;&#123;</span> <span class="hljs-string">ansible_hostname</span> <span class="hljs-string">&#125;&#125;</span> <br>      <span class="hljs-attr">state:</span> <span class="hljs-string">touch</span><br><br><span class="hljs-string">ansible-playbook</span> <span class="hljs-string">var2.yaml</span><br><br><span class="hljs-string">ansible</span> <span class="hljs-string">all</span> <span class="hljs-string">-m</span> <span class="hljs-string">shell</span> <span class="hljs-string">-a</span> <span class="hljs-string">&#x27;ls /root|grep node*&#x27;</span><br></code></pre></td></tr></table></figure><h4 id="复杂Facts变量的使用"><a href="#复杂Facts变量的使用" class="headerlink" title="复杂Facts变量的使用"></a>复杂Facts变量的使用</h4><p><img src="https://article.biliimg.com/bfs/article/c21fe0ade0684e94e4a521fa2a2ed8e0697559838.png" alt="image-20231002194745624"></p><p>方式1：使用中括号</p><figure class="highlight handlebars"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs handlebars"><span class="hljs-template-variable">&#123;&#123; <span class="hljs-name">ansible_date_time</span>[&quot;date&quot;] &#125;&#125;</span><br></code></pre></td></tr></table></figure><p>方式2：使用点号（<font color='red'>推荐</font>）</p><figure class="highlight handlebars"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs handlebars"><span class="hljs-template-variable">&#123;&#123; <span class="hljs-name">ansible_date_time.date</span> &#125;&#125;</span><br></code></pre></td></tr></table></figure><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><code class="hljs yaml"><span class="hljs-string">vim</span> <span class="hljs-string">var2.yaml</span><br><span class="hljs-meta">---</span><br><span class="hljs-bullet">-</span> <span class="hljs-attr">hosts:</span> <span class="hljs-string">all</span><br>  <span class="hljs-attr">remote_user:</span> <span class="hljs-string">root</span><br>  <span class="hljs-attr">tasks:</span><br>  <span class="hljs-bullet">-</span> <span class="hljs-attr">name:</span> <span class="hljs-number">22</span><br>    <span class="hljs-attr">copy:</span><br>      <span class="hljs-attr">content:</span> <span class="hljs-string">&quot;<span class="hljs-template-variable">&#123;&#123; ansible_date_time.date &#125;&#125;</span>&quot;</span><br>      <span class="hljs-attr">dest:</span> <span class="hljs-string">/tmp/f1</span><br><br><span class="hljs-string">ansible-playbook</span> <span class="hljs-string">var2.yaml</span><br><br><span class="hljs-string">ansible</span> <span class="hljs-string">all</span> <span class="hljs-string">-m</span> <span class="hljs-string">shell</span> <span class="hljs-string">-a</span> <span class="hljs-string">&#x27;cat /tmp/f1&#x27;</span><br></code></pre></td></tr></table></figure><h4 id="关闭Facts"><a href="#关闭Facts" class="headerlink" title="关闭Facts"></a>关闭Facts</h4><p>搜集facts会消耗额外时间，可以在剧本中设置是否开启和关闭facts搜集。</p><p>开启gather_facts:yes，关闭gather_facts:no</p><p><img src="https://article.biliimg.com/bfs/article/16fbeb5ec8842853cb0f9a16b9b47a83697559838.png" alt="image-20221026112345723"></p><h3 id="在-x2F-etc-x2F-ansible-x2F-hosts-主机清单-中定义变量"><a href="#在-x2F-etc-x2F-ansible-x2F-hosts-主机清单-中定义变量" class="headerlink" title="在&#x2F;etc&#x2F;ansible&#x2F;hosts(主机清单)中定义变量"></a>在&#x2F;etc&#x2F;ansible&#x2F;hosts(主机清单)中定义变量</h3><p><font color='red'>普通变量</font>：主机组中主机单独定义，优先级高于公共变量(单个主机 )<br><font color='red'>公共(组)变量</font>：针对主机组中所有主机定义统一变量(一组主机的同一类别)</p><p>可以是主机级别或者是主机组级别的 </p><p><strong>定义主机级别变量</strong></p><figure class="highlight accesslog"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs accesslog">vim  /etc/ansible/hosts<br><span class="hljs-string">[all]</span><br><span class="hljs-number">192.168.48.101</span> username=test_user3   #主机级别变量<br><span class="hljs-number">192.168.48.102</span> username=test_user4  <br><br></code></pre></td></tr></table></figure><p>编辑剧本文件</p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><code class="hljs yaml"><span class="hljs-string">vim</span> <span class="hljs-string">test_vars2.yaml</span><br><span class="hljs-meta">---</span><br><span class="hljs-bullet">-</span> <span class="hljs-attr">name:</span> <span class="hljs-string">test</span> <span class="hljs-string">inventory</span> <span class="hljs-string">vars</span><br>  <span class="hljs-attr">hosts:</span> <span class="hljs-string">all</span><br>  <span class="hljs-attr">tasks:</span><br>  <span class="hljs-bullet">-</span> <span class="hljs-attr">name:</span>  <span class="hljs-string">create</span> <span class="hljs-string">user</span> <span class="hljs-string">via</span> <span class="hljs-string">a</span> <span class="hljs-string">variable</span> <span class="hljs-string">file</span><br>    <span class="hljs-attr">user:</span><br>      <span class="hljs-attr">name:</span> <span class="hljs-string">&quot;<span class="hljs-template-variable">&#123;&#123; username &#125;&#125;</span>&quot;</span><br>      <span class="hljs-attr">state:</span> <span class="hljs-string">present</span><br><br><span class="hljs-string">ansible-playbook</span> <span class="hljs-string">-v</span> <span class="hljs-string">test_vars2.yaml</span> <br> <br><span class="hljs-string">ansible</span> <span class="hljs-string">all</span> <span class="hljs-string">-m</span> <span class="hljs-string">shell</span> <span class="hljs-string">-a</span> <span class="hljs-string">&#x27;getent passwd test_user3&#x27;</span><br><span class="hljs-string">ansible</span> <span class="hljs-string">all</span> <span class="hljs-string">-m</span> <span class="hljs-string">shell</span> <span class="hljs-string">-a</span> <span class="hljs-string">&#x27;getent passwd test_user4&#x27;</span><br></code></pre></td></tr></table></figure><p><strong>主机组级别定义变量（相对于主机级别定义的变量，优先级较低）</strong></p><figure class="highlight accesslog"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><code class="hljs accesslog">vim  /etc/ansible/hosts<br><span class="hljs-string">[all]</span><br><span class="hljs-number">192.168.142.101</span> username=test_user3   #主机级别变量<br><span class="hljs-number">192.168.142.102</span>   <br><br><span class="hljs-string">[all:vars]</span><br>username=test_user5<br><br>ansible-playbook -v test_vars2.yaml <br>发现第一台主机不变，第二台主机创建新的用户test_user5,证明主机组变量比主机变量优先级低<br></code></pre></td></tr></table></figure><h3 id="通过命令行指定变量"><a href="#通过命令行指定变量" class="headerlink" title="通过命令行指定变量"></a>通过命令行指定变量</h3><figure class="highlight routeros"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs routeros">ansible-playbook -e 变量 剧本（优先级最高）<br><br>ansible-playbook -v -e <span class="hljs-attribute">username</span>=test_user10 test_vars2.yaml <br></code></pre></td></tr></table></figure><p><img src="https://article.biliimg.com/bfs/article/708347818364da1e99c7195f2341fa3f697559838.png" alt="image-20231002210715495"></p><p>安装httpd服务</p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><code class="hljs yaml"><span class="hljs-string">示例：test_vars3.yaml</span> <br><span class="hljs-meta">---</span><br><span class="hljs-bullet">-</span> <span class="hljs-attr">hosts:</span> <span class="hljs-string">all</span><br>  <span class="hljs-attr">remote_user:</span> <span class="hljs-string">root</span><br>  <span class="hljs-attr">tasks:</span><br>  <span class="hljs-bullet">-</span> <span class="hljs-attr">name:</span> <span class="hljs-string">install</span> <span class="hljs-string">package</span><br>    <span class="hljs-attr">yum:</span><br>      <span class="hljs-attr">name:</span> <span class="hljs-string">&quot;<span class="hljs-template-variable">&#123;&#123; pkname &#125;&#125;</span>&quot;</span><br>      <span class="hljs-attr">state:</span> <span class="hljs-string">present</span><br>  <span class="hljs-bullet">-</span> <span class="hljs-attr">name:</span> <span class="hljs-string">start</span> <span class="hljs-string">service</span><br>    <span class="hljs-attr">service:</span><br>      <span class="hljs-attr">name:</span> <span class="hljs-string">&quot;<span class="hljs-template-variable">&#123;&#123; pkname &#125;&#125;</span>&quot;</span><br>      <span class="hljs-attr">state:</span> <span class="hljs-string">started</span><br>      <span class="hljs-attr">enabled:</span> <span class="hljs-literal">yes</span><br><br><br><span class="hljs-string">ansible-playbook</span> <span class="hljs-string">–e</span> <span class="hljs-string">pkname=httpd</span> <span class="hljs-string">test_vars3.yaml</span> <br></code></pre></td></tr></table></figure><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><code class="hljs yaml"><span class="hljs-string">示例：test_vars3.yaml</span> <br><span class="hljs-meta">---</span><br><span class="hljs-bullet">-</span> <span class="hljs-attr">hosts:</span> <span class="hljs-string">all</span><br>  <span class="hljs-attr">remote_user:</span> <span class="hljs-string">root</span><br>  <span class="hljs-attr">tasks:</span><br>  <span class="hljs-bullet">-</span> <span class="hljs-attr">name:</span> <span class="hljs-string">install</span> <span class="hljs-string">package</span><br>    <span class="hljs-attr">yum:</span> <br>      <span class="hljs-attr">name:</span> <span class="hljs-string">&quot;<span class="hljs-template-variable">&#123;&#123; pkname1 &#125;&#125;</span>&quot;</span> <br>      <span class="hljs-attr">state:</span> <span class="hljs-string">present</span><br>  <span class="hljs-bullet">-</span> <span class="hljs-attr">name:</span> <span class="hljs-string">install</span> <span class="hljs-string">package</span><br>    <span class="hljs-attr">yum:</span> <br>      <span class="hljs-attr">name:</span> <span class="hljs-string">&quot;<span class="hljs-template-variable">&#123;&#123; pkname2 &#125;&#125;</span>&quot;</span> <br>      <span class="hljs-attr">state:</span> <span class="hljs-string">present</span><br>  <br><span class="hljs-string">ansible-playbook</span> <span class="hljs-string">-e</span> <span class="hljs-string">&#x27;pkname1=httpd pkname2=tree&#x27;</span> <span class="hljs-string">-v</span> <span class="hljs-string">test_vars3.yaml</span> <br></code></pre></td></tr></table></figure><h3 id="复杂变量的使用"><a href="#复杂变量的使用" class="headerlink" title="复杂变量的使用"></a>复杂变量的使用</h3><h4 id="数组"><a href="#数组" class="headerlink" title="数组"></a><strong>数组</strong></h4><p>如果我们定义变量，而这些值都属于同一类型的元素，那么我们必定要用数组。</p><p>例如：</p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><code class="hljs yaml"><span class="hljs-string">vim</span> <span class="hljs-string">test_com_var.yaml</span><br><br><span class="hljs-meta">---</span><br><span class="hljs-bullet">-</span> <span class="hljs-attr">hosts:</span> <span class="hljs-string">all</span><br>  <span class="hljs-attr">vars:</span><br>    <span class="hljs-attr">user_name:</span><br>    <span class="hljs-bullet">-</span> <span class="hljs-string">test_user11</span><br>    <span class="hljs-bullet">-</span> <span class="hljs-string">test_user12</span><br>    <span class="hljs-bullet">-</span> <span class="hljs-string">test_user13</span><br>    <span class="hljs-bullet">-</span> <span class="hljs-string">test_user14</span><br>  <span class="hljs-attr">tasks:</span><br>  <span class="hljs-bullet">-</span> <span class="hljs-attr">name:</span> <span class="hljs-string">create</span> <span class="hljs-string">users</span><br>    <span class="hljs-attr">user:</span><br>      <span class="hljs-attr">name:</span> <span class="hljs-string">&quot;<span class="hljs-template-variable">&#123;&#123; user_name[1] &#125;&#125;</span>&quot;</span><br>      <span class="hljs-attr">state:</span> <span class="hljs-string">present</span><br></code></pre></td></tr></table></figure><p><img src="https://article.biliimg.com/bfs/article/edcb62f67c7a37e39d593bddabd8cf23697559838.png" alt="image-20221115081508398"></p><p>验证：ansible-playbook -v test_com_var.yaml</p><p><img src="https://article.biliimg.com/bfs/article/a4ad67cee649feb001d0f04711de0527697559838.png" alt="image-20221026101059249"></p><p>注意：在用user模块建用户的时候，只能调用数组中的某一个值，不能全部调用，否则报错“用户名不合法”</p><p><img src="https://article.biliimg.com/bfs/article/61190a72709aef0948711d6ee9cf3df3697559838.png" alt="image-20221026101118216"></p><p><img src="https://article.biliimg.com/bfs/article/0976fd543c54d709a9bd957f2441ee0c697559838.png" alt="image-20221115081951322"></p><h4 id="字典（dictionary）"><a href="#字典（dictionary）" class="headerlink" title="字典（dictionary）"></a>字典（dictionary）</h4><p>如果我们的变量信息中具备多种不同的元素时，采用字典。</p><p>例如：</p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><code class="hljs yaml"><span class="hljs-string">vim</span> <span class="hljs-string">test_com_var.yaml</span><br><br><span class="hljs-meta">---</span><br><span class="hljs-bullet">-</span> <span class="hljs-attr">name:</span> <span class="hljs-string">test_dict</span><br>  <span class="hljs-attr">hosts:</span> <span class="hljs-string">all</span><br>  <span class="hljs-attr">vars:</span><br>    <span class="hljs-attr">user_info:</span><br>      <span class="hljs-attr">test_user20:</span><br>        <span class="hljs-attr">name:</span> <span class="hljs-string">test_user20</span><br>        <span class="hljs-attr">shell:</span> <span class="hljs-string">/bin/bash</span><br>        <span class="hljs-attr">comment:</span> <span class="hljs-string">test_user20</span><br>      <span class="hljs-attr">test_user21:</span><br>        <span class="hljs-attr">name:</span> <span class="hljs-string">test_user21</span><br>        <span class="hljs-attr">shell:</span> <span class="hljs-string">/bin/bash</span><br>        <span class="hljs-attr">comment:</span> <span class="hljs-string">test_user21</span><br>  <span class="hljs-attr">tasks:</span><br>  <span class="hljs-bullet">-</span> <span class="hljs-attr">name:</span> <span class="hljs-string">create</span> <span class="hljs-string">users</span> <span class="hljs-string">via</span> <span class="hljs-string">dict</span><br>    <span class="hljs-attr">user:</span><br>      <span class="hljs-attr">name:</span> <span class="hljs-string">&quot;<span class="hljs-template-variable">&#123;&#123; user_info[&#x27;test_user20&#x27;][&#x27;name&#x27;] &#125;&#125;</span>&quot;</span><br>      <span class="hljs-attr">shell:</span> <span class="hljs-string">&quot;<span class="hljs-template-variable">&#123;&#123; user_info[&#x27;test_user20&#x27;][&#x27;shell&#x27;] &#125;&#125;</span>&quot;</span><br>      <span class="hljs-attr">state:</span> <span class="hljs-string">present</span><br><br></code></pre></td></tr></table></figure><p><img src="https://article.biliimg.com/bfs/article/a47134dc276bfe8a86054888a36cda08697559838.png" alt="image-20221026101138894"></p><p><img src="https://article.biliimg.com/bfs/article/9a4372ef8f474a433a378851b422692d697559838.png" alt="image-20221115083012804"></p><p>变量引用的另一种写法：引用对象写法（python语法）</p><p><img src="https://article.biliimg.com/bfs/article/ecdf5a8cae3a8ddf8a59fa9284d22b53697559838.png" alt="image-20221026101222577"></p><p>注意：以点作为分隔（引用对象）这种方式，可能会和python本身的语义引起冲突，所以不建议使用这种方式</p><h3 id="注册变量"><a href="#注册变量" class="headerlink" title="注册变量"></a>注册变量</h3><p>注册变量是指将一个任务（task）的输出结果定义到一个变量中，这个变量就可以在随后的任务中像普通变量一样使用。<br>很多情况下，注册变量用来收集shell的执行结果，结果中包含标准输入和标准输出。接下来使用shell模块执行命令将命令结果传入名为var_echo 的变量并使用debug进行检测。<br>register 的使用形如 register: varname，即 register模块后直接加变量名即可，而register这一行仅仅需要写在需要收集输出的那一行下即可。</p><p>案例：</p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><code class="hljs yaml"><span class="hljs-string">vim</span> <span class="hljs-string">test_com_var.yaml</span><br><br><span class="hljs-meta">---</span><br><span class="hljs-bullet">-</span> <span class="hljs-attr">name:</span> <span class="hljs-string">test_dict</span><br>  <span class="hljs-attr">hosts:</span> <span class="hljs-string">all</span><br>  <span class="hljs-attr">vars:</span><br>    <span class="hljs-attr">user_info:</span><br>      <span class="hljs-attr">test_user20:</span><br>        <span class="hljs-attr">name:</span> <span class="hljs-string">test_user20</span><br>        <span class="hljs-attr">shell:</span> <span class="hljs-string">/bin/bash</span><br>        <span class="hljs-attr">comment:</span> <span class="hljs-string">test_user20</span><br>      <span class="hljs-attr">test_user21:</span><br>        <span class="hljs-attr">name:</span> <span class="hljs-string">test_user21</span><br>        <span class="hljs-attr">shell:</span> <span class="hljs-string">/bin/bash</span><br>        <span class="hljs-attr">comment:</span> <span class="hljs-string">test_user21</span><br>  <span class="hljs-attr">tasks:</span><br>  <span class="hljs-bullet">-</span> <span class="hljs-attr">name:</span> <span class="hljs-string">create</span> <span class="hljs-string">users</span> <span class="hljs-string">via</span> <span class="hljs-string">dict</span><br>    <span class="hljs-attr">user:</span><br>      <span class="hljs-attr">name:</span> <span class="hljs-string">&quot;<span class="hljs-template-variable">&#123;&#123; user_info.test_user21.name &#125;&#125;</span>&quot;</span><br>      <span class="hljs-attr">shell:</span> <span class="hljs-string">&quot;<span class="hljs-template-variable">&#123;&#123; user_info.test_user21.shell &#125;&#125;</span>&quot;</span><br>      <span class="hljs-attr">state:</span> <span class="hljs-string">present</span><br><br><span class="hljs-string">ansible-playbook</span> <span class="hljs-string">test_com_var.yaml</span><br><br></code></pre></td></tr></table></figure><p>执行结果如下：</p><p><img src="https://article.biliimg.com/bfs/article/8c2e6ad90848a247afb10762d9b418c3697559838.png" alt="image-20221115083847092"></p><p>修改剧本文件，加入debug模块</p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br></pre></td><td class="code"><pre><code class="hljs yaml"><span class="hljs-string">vim</span> <span class="hljs-string">test_com_var.yaml</span><br><br><span class="hljs-bullet">-</span> <span class="hljs-attr">name:</span> <span class="hljs-string">test_dict</span><br>  <span class="hljs-attr">hosts:</span> <span class="hljs-string">all</span><br>  <span class="hljs-attr">vars:</span><br>    <span class="hljs-attr">user_info:</span><br>      <span class="hljs-attr">test_user20:</span><br>        <span class="hljs-attr">name:</span> <span class="hljs-string">test_user20</span><br>        <span class="hljs-attr">shell:</span> <span class="hljs-string">/sbin/nologin</span><br>        <span class="hljs-attr">comment:</span> <span class="hljs-string">test_user20</span><br>      <span class="hljs-attr">test_user21:</span><br>        <span class="hljs-attr">name:</span> <span class="hljs-string">test_user21</span><br>        <span class="hljs-attr">shell:</span> <span class="hljs-string">/sbin/nologin</span><br>        <span class="hljs-attr">comment:</span> <span class="hljs-string">test_user21</span><br>  <span class="hljs-attr">tasks:</span><br>  <span class="hljs-bullet">-</span> <span class="hljs-attr">name:</span> <span class="hljs-string">create</span> <span class="hljs-string">users</span> <span class="hljs-string">via</span> <span class="hljs-string">dict</span><br>    <span class="hljs-attr">user:</span><br>      <span class="hljs-attr">name:</span> <span class="hljs-string">&quot;<span class="hljs-template-variable">&#123;&#123; user_info.test_user21.name &#125;&#125;</span>&quot;</span><br>      <span class="hljs-attr">shell:</span> <span class="hljs-string">&quot;<span class="hljs-template-variable">&#123;&#123; user_info.test_user21.shell &#125;&#125;</span>&quot;</span><br>      <span class="hljs-attr">state:</span> <span class="hljs-string">present</span><br>    <span class="hljs-attr">register:</span> <span class="hljs-string">user_result</span><br><br>  <span class="hljs-bullet">-</span> <span class="hljs-attr">name:</span> <span class="hljs-string">debug</span> <span class="hljs-string">result</span> <span class="hljs-string">of</span> <span class="hljs-string">user</span> <span class="hljs-string">creation</span><br>    <span class="hljs-attr">debug:</span><br>      <span class="hljs-attr">msg:</span> <span class="hljs-string">&quot;<span class="hljs-template-variable">&#123;&#123; user_result &#125;&#125;</span>&quot;</span><br><br>      <br><span class="hljs-string">ansible-playbook</span> <span class="hljs-string">test_com_var.yaml</span><br><br></code></pre></td></tr></table></figure><p>运行结果：</p><p><img src="https://article.biliimg.com/bfs/article/4263c7e11746203447b31ae82baecc1c697559838.png" alt="image-20221115084502083"></p><p>可以引用结果中的部分元素（user_result[‘uid’] &#x2F; user_result.uid）</p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><code class="hljs yaml"><span class="hljs-string">vim</span> <span class="hljs-string">test_com_var.yaml</span><br><br><span class="hljs-bullet">-</span> <span class="hljs-attr">name:</span> <span class="hljs-string">test_dict</span><br>  <span class="hljs-attr">hosts:</span> <span class="hljs-string">all</span><br>  <span class="hljs-attr">vars:</span><br>    <span class="hljs-attr">user_info:</span><br>      <span class="hljs-attr">test_user20:</span><br>        <span class="hljs-attr">name:</span> <span class="hljs-string">test_user20</span><br>        <span class="hljs-attr">shell:</span> <span class="hljs-string">/sbin/nologin</span><br>        <span class="hljs-attr">comment:</span> <span class="hljs-string">test_user20</span><br>      <span class="hljs-attr">test_user21:</span><br>        <span class="hljs-attr">name:</span> <span class="hljs-string">test_user21</span><br>        <span class="hljs-attr">shell:</span> <span class="hljs-string">/sbin/nologin</span><br>        <span class="hljs-attr">comment:</span> <span class="hljs-string">test_user21</span><br>  <span class="hljs-attr">tasks:</span><br>  <span class="hljs-bullet">-</span> <span class="hljs-attr">name:</span> <span class="hljs-string">create</span> <span class="hljs-string">users</span> <span class="hljs-string">via</span> <span class="hljs-string">dict</span><br>    <span class="hljs-attr">user:</span><br>      <span class="hljs-attr">name:</span> <span class="hljs-string">&quot;<span class="hljs-template-variable">&#123;&#123; user_info.test_user21.name &#125;&#125;</span>&quot;</span><br>      <span class="hljs-attr">shell:</span> <span class="hljs-string">&quot;<span class="hljs-template-variable">&#123;&#123; user_info.test_user21.shell &#125;&#125;</span>&quot;</span><br>      <span class="hljs-attr">state:</span> <span class="hljs-string">present</span><br>    <span class="hljs-attr">register:</span> <span class="hljs-string">user_result</span><br><br>  <span class="hljs-bullet">-</span> <span class="hljs-attr">name:</span> <span class="hljs-string">debug</span> <span class="hljs-string">result</span> <span class="hljs-string">of</span> <span class="hljs-string">user</span> <span class="hljs-string">creation</span><br>    <span class="hljs-attr">debug:</span><br>      <span class="hljs-attr">msg:</span> <span class="hljs-string">&quot;<span class="hljs-template-variable">&#123;&#123; user_result.uid &#125;&#125;</span>&quot;</span><br>      <br>  <span class="hljs-string">ansible-playbook</span> <span class="hljs-string">test_com_var.yaml</span>    <br></code></pre></td></tr></table></figure><p>运行结果：</p><p><img src="https://article.biliimg.com/bfs/article/13dbaa9414afada7463189546ea6c80b697559838.png" alt="image-20221115084642928"></p><p>可以对输出结果进行迭代引用（用register存在多个变量中）</p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br></pre></td><td class="code"><pre><code class="hljs yaml"><span class="hljs-string">vim</span> <span class="hljs-string">test_com_var.yaml</span><br><span class="hljs-meta">---</span><br><span class="hljs-bullet">-</span> <span class="hljs-attr">name:</span> <span class="hljs-string">test_dict</span><br>  <span class="hljs-attr">hosts:</span> <span class="hljs-string">all</span><br>  <span class="hljs-attr">vars:</span><br>    <span class="hljs-attr">user_info:</span><br>      <span class="hljs-attr">test_user20:</span><br>        <span class="hljs-attr">name:</span> <span class="hljs-string">test_user20</span><br>        <span class="hljs-attr">shell:</span> <span class="hljs-string">/sbin/nologin</span><br>        <span class="hljs-attr">comment:</span> <span class="hljs-string">test_user20</span><br>      <span class="hljs-attr">test_user21:</span><br>        <span class="hljs-attr">name:</span> <span class="hljs-string">test_user21</span><br>        <span class="hljs-attr">shell:</span> <span class="hljs-string">/sbin/nologin</span><br>        <span class="hljs-attr">comment:</span> <span class="hljs-string">test_user21</span><br>  <span class="hljs-attr">tasks:</span><br>  <span class="hljs-bullet">-</span> <span class="hljs-attr">name:</span> <span class="hljs-string">create</span> <span class="hljs-string">users</span> <span class="hljs-string">via</span> <span class="hljs-string">dict</span><br>    <span class="hljs-attr">user:</span><br>      <span class="hljs-attr">name:</span> <span class="hljs-string">&quot;<span class="hljs-template-variable">&#123;&#123; user_info.test_user21.name &#125;&#125;</span>&quot;</span><br>      <span class="hljs-attr">shell:</span> <span class="hljs-string">&quot;<span class="hljs-template-variable">&#123;&#123; user_info.test_user21.shell &#125;&#125;</span>&quot;</span><br>      <span class="hljs-attr">state:</span> <span class="hljs-string">present</span><br>    <span class="hljs-attr">register:</span> <span class="hljs-string">user_result</span><br><br>  <span class="hljs-bullet">-</span> <span class="hljs-attr">name:</span> <span class="hljs-string">debug</span> <span class="hljs-string">result</span> <span class="hljs-string">of</span> <span class="hljs-string">user</span> <span class="hljs-string">creation</span><br>    <span class="hljs-attr">debug:</span><br>      <span class="hljs-attr">msg:</span> <span class="hljs-string">&quot;<span class="hljs-template-variable">&#123;&#123; user_result.uid &#125;&#125;</span>&quot;</span><br>    <span class="hljs-attr">register:</span> <span class="hljs-string">shell_result</span><br>  <br>  <span class="hljs-bullet">-</span> <span class="hljs-attr">name:</span> <span class="hljs-string">debug</span> <span class="hljs-string">result</span> <span class="hljs-string">of</span> <span class="hljs-string">shell</span><br>    <span class="hljs-attr">debug:</span><br>      <span class="hljs-attr">msg:</span> <span class="hljs-string">&quot;<span class="hljs-template-variable">&#123;&#123; shell_result &#125;&#125;</span>&quot;</span><br>      <br>  <span class="hljs-string">ansible-playbook</span> <span class="hljs-string">test_com_var.yaml</span>    <br></code></pre></td></tr></table></figure><p><img src="https://article.biliimg.com/bfs/article/3abff5b477f3ae9808d397b9e1286d99697559838.png" alt="image-20221026101500419"></p><h2 id="Ansible-Vault（Ansible-保管箱）"><a href="#Ansible-Vault（Ansible-保管箱）" class="headerlink" title="Ansible Vault（Ansible 保管箱）"></a>Ansible Vault（Ansible 保管箱）</h2><p>作用：加密敏感的数据、密码等信息，通常情况下都是定义在变量内的敏感信息。</p><p>应用的情景：</p><p>1&gt; 加密变量文件（敏感数据、密码信息等）</p><p>2&gt; 加密证书</p><p>命令：ansible-vault</p><p>命令用法：</p><h3 id="创建一个加密文件："><a href="#创建一个加密文件：" class="headerlink" title="创建一个加密文件："></a>创建一个加密文件：</h3><p><strong>ansible-vault create sec.yaml</strong></p><p><img src="https://article.biliimg.com/bfs/article/4bf66544172baaa22b127443a978be40697559838.png" alt="image-20221026101756674"></p><p>使用vim sec.ym或者cat sec.yaml只能看到加密后的内容</p><p><img src="https://article.biliimg.com/bfs/article/68314fc976276b2975fb3d52742e20ea697559838.png" alt="image-20221115085325103"></p><h3 id="如何查看加密过的文件内容："><a href="#如何查看加密过的文件内容：" class="headerlink" title="如何查看加密过的文件内容："></a>如何查看加密过的文件内容：</h3><p><img src="https://article.biliimg.com/bfs/article/14fe04c3039fe9cfe810004853e59016697559838.png" alt="image-20221026101816806"></p><h3 id="如何在剧本中调用加密文件"><a href="#如何在剧本中调用加密文件" class="headerlink" title="如何在剧本中调用加密文件"></a>如何在剧本中调用加密文件</h3><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><code class="hljs yaml"><span class="hljs-string">vim</span> <span class="hljs-string">test_vault.yaml</span><br><br><span class="hljs-meta">---</span><br><span class="hljs-bullet">-</span> <span class="hljs-attr">name:</span> <span class="hljs-string">Create</span> <span class="hljs-string">users</span> <span class="hljs-string">via</span> <span class="hljs-string">vault</span><br>  <span class="hljs-attr">hosts:</span> <span class="hljs-string">all</span><br>  <span class="hljs-attr">vars_files:</span><br>  <span class="hljs-bullet">-</span> <span class="hljs-string">/root/sec.yaml</span><br>  <span class="hljs-attr">tasks:</span><br>  <span class="hljs-bullet">-</span> <span class="hljs-attr">name:</span> <span class="hljs-string">Create</span> <span class="hljs-string">users</span><br>    <span class="hljs-attr">user:</span><br>      <span class="hljs-attr">name:</span> <span class="hljs-string">&quot;<span class="hljs-template-variable">&#123;&#123; username &#125;&#125;</span>&quot;</span><br>      <span class="hljs-attr">state:</span> <span class="hljs-string">present</span><br><br></code></pre></td></tr></table></figure><p>执行剧本时报错</p><p><img src="https://article.biliimg.com/bfs/article/a942b029e8cffcb7b857486c27d19583697559838.png" alt="image-20221115090123132"></p><p>解决方法：</p><p>方法一：ansible-playbook 命令时候添加–ask-vault-pass参数</p><p>ansible-playbook –ask-vault-pass test_vault.yaml</p><p><img src="https://article.biliimg.com/bfs/article/9eb6174f3f35b29429e8b3089e6d25be697559838.png" alt="image-20221115090305979"></p><p>方法二：ansible-playbook –vault-id @prompt test_vault.yaml（2.3之后使用，建议）</p><p><img src="https://article.biliimg.com/bfs/article/612afec3ca092c25d8604f604ad302fe697559838.png" alt="image-20221115090343892"></p><p>方法三：ansible-playbook –vault-password-file&#x3D;pass.yaml  test_vault.yaml</p><p>（纯文本形式的密码存放在文件中，只能单行写一个密码，需要对该密码文件加强安全措施）</p><figure class="highlight apache"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs apache"><span class="hljs-attribute">echo</span> <span class="hljs-number">123456</span> &gt; pass.yaml<br></code></pre></td></tr></table></figure><p><img src="https://article.biliimg.com/bfs/article/bc84d28f41ed4f20137c4c744b748d36697559838.png" alt="image-20221115090537834"></p><h3 id="解密"><a href="#解密" class="headerlink" title="解密"></a>解密</h3><p><img src="https://article.biliimg.com/bfs/article/1d2002f491af2c2302c666a25ba38d54697559838.png" alt="image-20221115090755579"></p><h3 id="加密一个已存在的文件"><a href="#加密一个已存在的文件" class="headerlink" title="加密一个已存在的文件"></a>加密一个已存在的文件</h3><p><img src="https://article.biliimg.com/bfs/article/682116210a67b5fccf7aa4a1bf74f675697559838.png" alt="image-20221115090808908"></p><h3 id="重置加密文件的密码"><a href="#重置加密文件的密码" class="headerlink" title="重置加密文件的密码"></a>重置加密文件的密码</h3><p><img src="https://article.biliimg.com/bfs/article/9f7965df621233fc50dd3dd8fad6fe59697559838.png" alt="image-20221115090908211"></p><h3 id="编辑已存在的加密文件"><a href="#编辑已存在的加密文件" class="headerlink" title="编辑已存在的加密文件"></a>编辑已存在的加密文件</h3><p><img src="https://article.biliimg.com/bfs/article/bb38281a2469d80b7b5a92aee903fb2f697559838.png" alt="image-20221115090956109"></p><p>Tips：如果我们使用加密文件保存变量、密码等敏感数据，最好采用隐藏文件来存放，增强安全性。</p><p><img src="https://article.biliimg.com/bfs/article/513eaa7e350017054dc9d4dc76d3c0f1697559838.png" alt="image-20221115091217928"></p><p><img src="https://article.biliimg.com/bfs/article/146e8caac6a7bc6ce0f1c86afb7107dd697559838.png" alt="image-20221115091252760"></p><figure class="highlight stylus"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs stylus">ansible-playbook <span class="hljs-attr">--vault-password-file</span>=<span class="hljs-selector-class">.pass</span><span class="hljs-selector-class">.yaml</span>  test_vault.yaml<br></code></pre></td></tr></table></figure><p><img src="https://article.biliimg.com/bfs/article/78c893523f2a65300a84a287173234e0697559838.png" alt="image-20221115091403345"></p><h2 id="综合实践"><a href="#综合实践" class="headerlink" title="综合实践"></a>综合实践</h2><p>编辑剧本文件实现以下功能：</p><p>0、设置主机组 all</p><p>1、设置变量 定义nginx服务端口为8081</p><p>2、关闭facts</p><p>3、调用service模块，卸载受控端的httpd</p><p>4、调用SELinux模块，关闭selinux</p><p>5、调用yum模块安装epel源</p><p>6、调用yum模块安装nginx</p><p>7、调用lineinfile模块修改nginx配置文件中的监听端口，使用自定义的服务端口变量，并将结果注册到 port_result</p><p>8、调用service模块启动nginx，并设置为开机自启动</p><p>9、调用debug模块，msg信息为port_result</p><p>10、验证受控端服务及端口</p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br></pre></td><td class="code"><pre><code class="hljs yaml"><span class="hljs-meta">---</span><br><span class="hljs-bullet">-</span> <span class="hljs-attr">hosts:</span> <span class="hljs-string">all</span><br>  <span class="hljs-attr">gather_facts:</span> <span class="hljs-literal">no</span><br>  <span class="hljs-attr">vars:</span> <br>    <span class="hljs-attr">nginx_port:</span> <span class="hljs-string">&quot;8081&quot;</span><br>  <span class="hljs-attr">tasks:</span>   <br>  <span class="hljs-bullet">-</span> <span class="hljs-attr">name:</span> <span class="hljs-string">uninstall</span> <span class="hljs-string">httpd</span><br>    <span class="hljs-attr">yum:</span><br>      <span class="hljs-attr">name:</span> <span class="hljs-string">httpd</span><br>      <span class="hljs-attr">state:</span> <span class="hljs-string">absent</span><br>  <span class="hljs-bullet">-</span> <span class="hljs-attr">name:</span> <span class="hljs-string">stop</span> <span class="hljs-string">selinux</span><br>    <span class="hljs-attr">selinux:</span><br>      <span class="hljs-attr">state:</span> <span class="hljs-string">disabled</span><br>  <span class="hljs-bullet">-</span> <span class="hljs-attr">name:</span> <span class="hljs-string">install</span> <span class="hljs-string">epel</span><br>    <span class="hljs-attr">yum:</span><br>      <span class="hljs-attr">name:</span> <span class="hljs-string">epel-release</span><br>      <span class="hljs-attr">state:</span> <span class="hljs-string">present</span><br>  <span class="hljs-bullet">-</span> <span class="hljs-attr">name:</span> <br>    <span class="hljs-attr">yum:</span><br>      <span class="hljs-attr">name:</span> <span class="hljs-string">nginx</span><br>      <span class="hljs-attr">state:</span> <span class="hljs-string">present</span><br>  <span class="hljs-bullet">-</span> <span class="hljs-attr">name:</span> <span class="hljs-string">set</span> <span class="hljs-string">nginx_port</span><br>    <span class="hljs-attr">lineinfile:</span><br>      <span class="hljs-attr">path:</span> <span class="hljs-string">/etc/nginx/nginx.conf</span><br>      <span class="hljs-attr">regexp:</span> <span class="hljs-string">&quot;        listen       80;&quot;</span><br>      <span class="hljs-attr">line:</span> <span class="hljs-string">&quot;        listen       <span class="hljs-template-variable">&#123;&#123; nginx_port &#125;&#125;</span>;&quot;</span><br>    <span class="hljs-attr">register:</span> <span class="hljs-string">port_result</span>   <br>  <span class="hljs-bullet">-</span> <span class="hljs-attr">name:</span> <span class="hljs-string">start</span> <span class="hljs-string">nginx</span><br>    <span class="hljs-attr">service:</span><br>      <span class="hljs-attr">name:</span> <span class="hljs-string">nginx</span><br>      <span class="hljs-attr">state:</span> <span class="hljs-string">started</span><br>      <span class="hljs-attr">enabled:</span> <span class="hljs-literal">yes</span><br>  <span class="hljs-bullet">-</span> <span class="hljs-attr">name:</span> <span class="hljs-string">debug</span> <span class="hljs-string">msg</span><br>    <span class="hljs-attr">debug:</span><br>      <span class="hljs-attr">msg:</span> <span class="hljs-string">&quot;<span class="hljs-template-variable">&#123;&#123; port_result &#125;&#125;</span>&quot;</span><br><br><br><span class="hljs-string">ansible-playbook</span>  <span class="hljs-string">install_nginx.yaml</span> <span class="hljs-string">-C</span><br><br><span class="hljs-string">ansible-playbook</span> <span class="hljs-string">install_nginx.yaml</span>  <br><br><span class="hljs-string">ansible</span> <span class="hljs-string">all</span> <span class="hljs-string">-m</span> <span class="hljs-string">shell</span> <span class="hljs-string">-a</span>  <span class="hljs-string">&quot;ps aux |grep nginx &quot;</span>  <br><br><span class="hljs-string">ansible</span> <span class="hljs-string">all</span> <span class="hljs-string">-m</span> <span class="hljs-string">shell</span> <span class="hljs-string">-a</span>  <span class="hljs-string">&quot;netstat -lntp |grep nginx &quot;</span> <br><br></code></pre></td></tr></table></figure><p><img src="https://article.biliimg.com/bfs/article/6a4af081ecfd58d113d8b0c6b7f85ad9697559838.png" alt="image-20230926165830835"></p><p><img src="https://article.biliimg.com/bfs/article/2e0444231030be4337f1ac7c7e6f57d0697559838.png" alt="image-20230926165852495"></p><p><code>可以返回目录！</code></p><p><a href="https://blog.qianyios.top/2023/09/10/ansible/Ansible-%E6%80%BB%E6%89%8B%E5%86%8C/">Ansible练习目录 - 严千屹博客 (qianyios.top)</a></p><div class="tbsm" style="margin-top:54px;"><div class="tbsm-top"><span><svg t="1674654360507" class="icon" viewBox="0 0 1024 1024" version="1.1" xmlns="http://www.w3.org/2000/svg" p-id="987" data-spm-anchor-id="a313x.7781069.0.i0" width="35" height="35"><path d="M410.49 97.74H155.08a56.74 56.74 0 0 0-56.84 56.73V410a56.84 56.84 0 0 0 56.84 56.84h255.41A56.83 56.83 0 0 0 467.32 410V154.58a56.83 56.83 0 0 0-56.83-56.84zM410.49 558.74H155.08a56.74 56.74 0 0 0-56.84 56.73V871a56.84 56.84 0 0 0 56.84 56.84h255.41A56.83 56.83 0 0 0 467.32 871V615.58a56.83 56.83 0 0 0-56.83-56.84zM871.49 558.74H616.08a56.74 56.74 0 0 0-56.84 56.73V871a56.84 56.84 0 0 0 56.84 56.84h255.41A56.83 56.83 0 0 0 928.32 871V615.58a56.83 56.83 0 0 0-56.83-56.84z" fill="#66EEFF" p-id="988"></path><path d="M410.49 558.74h-4.14A475 475 0 0 0 299.52 859.6a481.16 481.16 0 0 0 4.84 68.22h106.13A56.83 56.83 0 0 0 467.32 871V615.58a56.83 56.83 0 0 0-56.83-56.84zM871.49 558.74H616.08a56.74 56.74 0 0 0-56.84 56.73V871a56.84 56.84 0 0 0 56.84 56.84h255.41A56.83 56.83 0 0 0 928.32 871V615.58a56.83 56.83 0 0 0-56.83-56.84z" fill="#C2F8FF" p-id="989"></path></svg></span><span style="font-size:30px;"> 特别声明</span></div><div class="tbsm-wz">千屹博客旗下的所有文章，是通过本人课堂学习和课外自学所精心整理的知识巨著<br/>难免会有出错的地方<br/>如果细心的你发现了小失误，可以在下方评论区告诉我，或者私信我！<br />非常感谢大家的热烈支持！</div></div>]]></content>
    
    
    
    <tags>
      
      <tag>Centos 7</tag>
      
      <tag>Ansible</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>超星网课脚本部署教程</title>
    <link href="/2023/09/20/%E8%B6%85%E6%98%9F%E7%BD%91%E8%AF%BE%E8%84%9A%E6%9C%AC%E9%83%A8%E7%BD%B2%E6%95%99%E7%A8%8B/"/>
    <url>/2023/09/20/%E8%B6%85%E6%98%9F%E7%BD%91%E8%AF%BE%E8%84%9A%E6%9C%AC%E9%83%A8%E7%BD%B2%E6%95%99%E7%A8%8B/</url>
    
    <content type="html"><![CDATA[<meta name="referrer" content="no-referrer"/><h1 id="超星网课脚本部署教程"><a href="#超星网课脚本部署教程" class="headerlink" title="超星网课脚本部署教程"></a>超星网课脚本部署教程</h1><h2 id="前提！"><a href="#前提！" class="headerlink" title="前提！"></a>前提！</h2><h3 id="浏览器：（其中一个即可）"><a href="#浏览器：（其中一个即可）" class="headerlink" title="浏览器：（其中一个即可）"></a>浏览器：（其中一个即可）</h3><p>  1.1 <a href="https://www.microsoft.com/zh-cn/edge/download?form=MA13FJ">下载 Microsoft Edge</a>（<font color='red'>以下仅用此浏览器介绍</font>）</p><p>  1.2 <a href="https://www.google.com/intl/zh-CN/chrome/">Google Chrome 网络浏览器</a>（魔法）</p><p>有就下一步，不用重复安装</p><h3 id="edge浏览器安装扩展（选一个即可，可以都测试一下）"><a href="#edge浏览器安装扩展（选一个即可，可以都测试一下）" class="headerlink" title="edge浏览器安装扩展（选一个即可，可以都测试一下）"></a><font color='red'>edge浏览器</font>安装扩展（选一个即可，可以都测试一下）</h3><h4 id="脚本猫"><a href="#脚本猫" class="headerlink" title="脚本猫"></a><a href="https://docs.scriptcat.org/">脚本猫</a></h4><p>点击<a href="https://microsoftedge.microsoft.com/addons/detail/scriptcat/liilgpjgabokdklappibcjfablkpcekh">ScriptCat - Microsoft Edge Addons</a>（edge安装扩展）</p><p><img src="https://article.biliimg.com/bfs/article/86ea42ec2a992d48ff23ddadf03bf812697559838.png" alt="image-20230920190513089"></p><p><img src="https://article.biliimg.com/bfs/article/5b57717ca5f706ac7a1015d96b2def04697559838.png" alt="image-20230920190705841"></p><h4 id="油猴"><a href="#油猴" class="headerlink" title="油猴"></a>油猴</h4><p> 点击<a href="https://microsoftedge.microsoft.com/addons/detail/%E7%AF%A1%E6%94%B9%E7%8C%B4/iikmkjmpaadaobahmlepeloendndfphd?refid=bingshortanswersdownload">篡改猴 - Microsoft Edge Addons</a>（edge安装扩展）</p><p>安装步骤如上</p><p>最后在设置-扩展，看见你安装的扩展即可</p><p><img src="https://article.biliimg.com/bfs/article/e52fd21ab6183f50a988699547fcd336697559838.png" alt="image-20230920201244312"></p><h2 id="脚本"><a href="#脚本" class="headerlink" title="脚本"></a>脚本</h2><p>油叉官网：<a href="https://greasyfork.org/zh-CN">Greasy Fork - 安全、实用的用户脚本大全</a></p><p>可以自行搜索脚本</p><p><img src="https://article.biliimg.com/bfs/article/6bce0499ecee30557eeb422aecfcae9b697559838.png" alt="image-20230921005847300"></p><p>推荐脚本：</p><p>1.<a href="https://greasyfork.org/zh-CN/scripts/451356-%E4%B8%87%E8%83%BD-%E5%85%A8%E5%B9%B3%E5%8F%B0%E8%87%AA%E5%8A%A8%E7%AD%94%E9%A2%98%E8%84%9A%E6%9C%AC">【万能】全平台自动答题脚本 (greasyfork.org)</a></p><p>2.<a href="https://greasyfork.org/zh-CN/scripts/437781-%E8%B6%85%E6%98%9F-%E5%AD%A6%E4%B9%A0%E9%80%9A%E7%BD%91%E8%AF%BE%E5%B0%8F%E5%8A%A9%E6%89%8B-%E4%BF%AE%E5%A4%8D%E8%A7%86%E9%A2%91%E6%92%AD%E6%94%BE-%E8%87%AA%E5%8A%A8%E8%B7%B3%E8%BD%AC%E4%BB%BB%E5%8A%A1%E7%82%B9-%E7%AB%A0%E6%B5%8B%E4%BD%9C%E4%B8%9A%E5%AD%97%E4%BD%93%E8%A7%A3%E5%AF%86-%E8%87%AA%E5%8A%A8%E7%AD%94%E9%A2%98-%E9%A2%98%E5%BA%93%E8%A6%86%E7%9B%96%E7%8E%87%E9%AB%98-%E5%AE%8C%E5%85%A8%E5%85%8D%E8%B4%B9">🥇超星&#x2F;学习通网课小助手|修复视频播放|自动跳转任务点|章测作业字体解密|自动答题|题库覆盖率高、完全免费 (greasyfork.org)</a></p><p>3.<a href="https://greasyfork.org/zh-CN/scripts/435357-%E8%B6%85%E6%98%9F%E5%AD%A6%E4%B9%A0%E9%80%9A%E5%B0%8F%E5%8A%A9%E6%89%8B-%E7%AB%A0%E8%8A%82-%E4%BD%9C%E4%B8%9A-%E8%80%83%E8%AF%95%E8%A6%86%E7%9B%9698-%E5%90%8E%E5%8F%B0%E8%87%AA%E5%8A%A8%E6%8C%82%E6%9C%BA-%E9%97%AF%E5%85%B3%E8%AF%BE%E7%A8%8B-%E8%87%AA%E5%8A%A8%E7%AD%94%E9%A2%98-%E9%98%85%E8%AF%BB%E6%97%B6%E9%95%BF-%E5%85%AC%E5%BC%8F%E9%A2%98-%E5%9B%BE%E7%89%87%E9%A2%98-1-1%E6%97%B6%E9%95%BF-%E4%B8%8D%E6%B8%85%E8%BF%9B%E5%BA%A6-%E4%BA%91%E7%AB%AF%E9%A2%98%E5%BA%93%E5%AE%9E%E6%97%B6%E6%9B%B4%E6%96%B0">🔥超星学习通小助手-章节、作业、考试覆盖98%|后台自动挂机|闯关课程|自动答题|阅读时长|公式题、图片题|1:1时长|不清进度|云端题库实时更新 (greasyfork.org)</a></p><p><font color='red'>自行测试</font>，例子：（安装即可）</p><p><img src="https://article.biliimg.com/bfs/article/e64fff70874dfebb7588e5799958b255697559838.png" alt="image-20230920202025222"></p><p><font color='red'>篡改猴</font>：管理脚本面板（查看安装的脚本）</p><p><img src="https://article.biliimg.com/bfs/article/d01594672cfd05fadc987b282777e9da697559838.png" alt="image-20230920235710807"></p><p><font color='red'>！！</font>进入<a href="http://www.chaoxing.com/">超星学习通测试</a></p><div class="tbsm" style="margin-top:54px;"><div class="tbsm-top"><span><svg t="1674654360507" class="icon" viewBox="0 0 1024 1024" version="1.1" xmlns="http://www.w3.org/2000/svg" p-id="987" data-spm-anchor-id="a313x.7781069.0.i0" width="35" height="35"><path d="M410.49 97.74H155.08a56.74 56.74 0 0 0-56.84 56.73V410a56.84 56.84 0 0 0 56.84 56.84h255.41A56.83 56.83 0 0 0 467.32 410V154.58a56.83 56.83 0 0 0-56.83-56.84zM410.49 558.74H155.08a56.74 56.74 0 0 0-56.84 56.73V871a56.84 56.84 0 0 0 56.84 56.84h255.41A56.83 56.83 0 0 0 467.32 871V615.58a56.83 56.83 0 0 0-56.83-56.84zM871.49 558.74H616.08a56.74 56.74 0 0 0-56.84 56.73V871a56.84 56.84 0 0 0 56.84 56.84h255.41A56.83 56.83 0 0 0 928.32 871V615.58a56.83 56.83 0 0 0-56.83-56.84z" fill="#66EEFF" p-id="988"></path><path d="M410.49 558.74h-4.14A475 475 0 0 0 299.52 859.6a481.16 481.16 0 0 0 4.84 68.22h106.13A56.83 56.83 0 0 0 467.32 871V615.58a56.83 56.83 0 0 0-56.83-56.84zM871.49 558.74H616.08a56.74 56.74 0 0 0-56.84 56.73V871a56.84 56.84 0 0 0 56.84 56.84h255.41A56.83 56.83 0 0 0 928.32 871V615.58a56.83 56.83 0 0 0-56.83-56.84z" fill="#C2F8FF" p-id="989"></path></svg></span><span style="font-size:30px;"> 特别声明</span></div><div class="tbsm-wz">千屹博客旗下的所有文章，是通过本人课堂学习和课外自学所精心整理的知识巨著<br/>难免会有出错的地方<br/>如果细心的你发现了小失误，可以在下方评论区告诉我，或者私信我！<br />非常感谢大家的热烈支持！</div></div>]]></content>
    
    
    
    <tags>
      
      <tag>超星网课</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>Ansible-常用模块</title>
    <link href="/2023/09/20/ansible/Ansible-%E5%B8%B8%E7%94%A8%E6%A8%A1%E5%9D%97/"/>
    <url>/2023/09/20/ansible/Ansible-%E5%B8%B8%E7%94%A8%E6%A8%A1%E5%9D%97/</url>
    
    <content type="html"><![CDATA[<meta name="referrer" content="no-referrer"/><h1 id="Ansible-常用模块"><a href="#Ansible-常用模块" class="headerlink" title="Ansible-常用模块"></a>Ansible-常用模块</h1><h2 id="command模块"><a href="#command模块" class="headerlink" title="command模块"></a>command模块</h2><p>linux命令，不支持管道、重定向等，不建议使用</p><figure class="highlight vim"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs vim">ansible <span class="hljs-keyword">all</span> -<span class="hljs-keyword">m</span> <span class="hljs-keyword">command</span> -<span class="hljs-keyword">a</span> <span class="hljs-string">&quot;pwd&quot;</span><br>ansible <span class="hljs-keyword">all</span> -<span class="hljs-keyword">m</span> <span class="hljs-keyword">command</span> -<span class="hljs-keyword">a</span> <span class="hljs-string">&quot;ls&quot;</span><br>ansible <span class="hljs-keyword">all</span> -<span class="hljs-keyword">m</span> <span class="hljs-keyword">command</span> -<span class="hljs-keyword">a</span> <span class="hljs-string">&quot;cat /etc/passwd |grep student&quot;</span> #这个不能正常使用 ansible <span class="hljs-keyword">all</span> -<span class="hljs-keyword">m</span> <span class="hljs-keyword">command</span> -<span class="hljs-keyword">a</span> <span class="hljs-string">&quot;echo bb &gt;&gt;/tmp/testansible&quot;</span><br>ansible <span class="hljs-keyword">all</span> -<span class="hljs-keyword">m</span> <span class="hljs-keyword">command</span> -<span class="hljs-keyword">a</span> <span class="hljs-string">&quot;cat /tmp/testansible&quot;</span><br></code></pre></td></tr></table></figure><p>#重定向也无法正常使用</p><p>课堂练习：</p><p>使用command命令查询各主机磁盘状态、查询内存状态</p><figure class="highlight vim"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs vim">ansible <span class="hljs-keyword">all</span> -<span class="hljs-keyword">m</span> <span class="hljs-keyword">command</span> -<span class="hljs-keyword">a</span> <span class="hljs-string">&quot;df -h&quot;</span><br>ansible <span class="hljs-keyword">all</span> -<span class="hljs-keyword">m</span> <span class="hljs-keyword">command</span> -<span class="hljs-keyword">a</span> <span class="hljs-string">&quot;free -m&quot;</span><br></code></pre></td></tr></table></figure><h2 id="shell模块"><a href="#shell模块" class="headerlink" title="shell模块"></a>shell模块</h2><p>支持管道、重定向等，常用模块</p><figure class="highlight livecodeserver"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs livecodeserver">ansible all -m <span class="hljs-built_in">shell</span> -<span class="hljs-keyword">a</span> <span class="hljs-string">&quot;cat /etc/passwd | grep student&quot;</span> <span class="hljs-comment">#支持管道</span><br>ansible all -m <span class="hljs-built_in">shell</span> -<span class="hljs-keyword">a</span> <span class="hljs-string">&quot;echo bb &gt;&gt;/tmp/testansible&quot;</span><br>ansible all -m <span class="hljs-built_in">shell</span> -<span class="hljs-keyword">a</span> <span class="hljs-string">&quot;cat /tmp/testansible&quot;</span><br></code></pre></td></tr></table></figure><p>#支持重定向</p><p>课堂练习：</p><p>使用shell模块查看selinux状态</p><figure class="highlight livecodeserver"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs livecodeserver">ansible all -m <span class="hljs-built_in">shell</span> -<span class="hljs-keyword">a</span> <span class="hljs-string">&quot;getenforce&quot;</span><br></code></pre></td></tr></table></figure><p>通过shell模块批量关闭selinux</p><figure class="highlight livecodeserver"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><code class="hljs livecodeserver">临时关闭：<br><br>ansible all -m <span class="hljs-built_in">shell</span> -<span class="hljs-keyword">a</span> <span class="hljs-string">&quot;setenforce 0&quot;</span><br><br>永久关闭：<br><br>ansible all -m <span class="hljs-built_in">shell</span> -<span class="hljs-keyword">a</span> <span class="hljs-string">&quot;sed -ri &#x27;s/SELINUX=enforcing/SELINUX=disabled/g&#x27; /etc/selinux/config&quot;</span><br><br>ansible all -m <span class="hljs-built_in">shell</span> -<span class="hljs-keyword">a</span> <span class="hljs-string">&quot;reboot&quot;</span><br><br></code></pre></td></tr></table></figure><h2 id="文件模块"><a href="#文件模块" class="headerlink" title="文件模块"></a>文件模块</h2><h3 id="copy模块"><a href="#copy模块" class="headerlink" title="copy模块"></a>copy模块</h3><p>从主控端复制文件到远程主机</p><figure class="highlight applescript"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs applescript">ansible-doc <span class="hljs-keyword">copy</span><br></code></pre></td></tr></table></figure><p><font color='red'>常用参数</font></p><p><font color='red'>src</font>：source源路径文件&#x2F;目录。即要复制到远程主机的文件在本地的地址，可以是绝对路径，也可以是 相对路径。如果路径是一个目录，它将递归复制。在这种情况下，<font color='red'>如果路径使用”&#x2F;“来结尾，则只复制目录里的内容，如果没有使用”&#x2F;“来结尾，则包含目录在内的整个内容全部复制。</font></p><p><font color='red'>dest</font>：destnation受管主机上的一个目标路径，即要将源文件复制到的远程主机的绝对路径，<font color='red'>如果源文件是一个目录，那么该路径也必须是个目录（必须）</font></p><p><font color='red'>content</font>：代替src，将本机指定内容传至远程主机并生成目标文件，相当于 echo 重定向内容到文件</p><p><font color='red'>mode</font>：文件权限（chmod）</p><p>linux权限回顾</p><p><img src="https://article.biliimg.com/bfs/article/7c29cd090a58370b68c78b1e9a9ef6bc697559838.png" alt="image-20230919103608153"></p><p>owner：文件属主（chown）<br>group：文件属组（chgrp）<br>backup：在覆盖之前将原文件备份，备份文件包含时间信息。<br>directory_mode： 递归地设定目录的权限，默认为系统默认权限<br>force： 若目标主机包含该文件，但内容不同，如果设置为yes，则强制覆盖，如果为no，则只有当目标 主机的存放位置不存在该文件时，才复制。默认为yes</p><h4 id="使用案例"><a href="#使用案例" class="headerlink" title="使用案例"></a>使用案例</h4><hr><ol><li>复制dir1目录及其文件到受控主机&#x2F;tmp&#x2F;下（无斜杠-操作整个目录）</li></ol><p>注：关于src目录加不加&#x2F;的演示</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><code class="hljs bash"><span class="hljs-comment">#复制dir1目录及其文件到受控主机/tmp/下</span><br>su student<br><span class="hljs-built_in">cd</span> ~<br>ll<br><span class="hljs-built_in">mkdir</span> ansible<br><span class="hljs-built_in">cd</span> ansible/<br><span class="hljs-built_in">mkdir</span> dir1<br><span class="hljs-built_in">echo</span> <span class="hljs-string">&quot;123&quot;</span> &gt;dir1/file1<br>ansible 192.168.48.101 -m copy -a <span class="hljs-string">&quot;src=&#x27;dir1&#x27; dest=/tmp/&quot;</span> <br></code></pre></td></tr></table></figure><p><img src="https://article.biliimg.com/bfs/article/e0747f5b93d18750d5c01ea5376a8b63697559838.png" alt="image-20230919104532341"></p><p>查看受控主机是否复制成功</p><p><img src="https://article.biliimg.com/bfs/article/8e153dc60ce37af5cc2a575b2c9f4bd7697559838.png" alt="image-20230919104230231"></p><p>成功</p><hr><p>2.仅复制dir1目录下的文件（有斜杠-操作目录下的文件，不复制目录）</p><figure class="highlight nginx"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs nginx"><span class="hljs-attribute">ansible</span> <span class="hljs-number">192.168.48.101</span> -m copy -a<span class="hljs-string">&quot;src=&#x27;dir1/&#x27; dest=/tmp/&quot;</span><br></code></pre></td></tr></table></figure><p><img src="https://article.biliimg.com/bfs/article/86f6bb4881717f3815de8868a147cb28697559838.png" alt="image-20230919104627377"></p><hr><h4 id="练习"><a href="#练习" class="headerlink" title="练习"></a>练习</h4><ol><li>将控制主机的copyfile<font color='red'>文件</font>复制到受管主机的 &#x2F;tmp 目录</li></ol><figure class="highlight nginx"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs nginx"><span class="hljs-attribute">echo</span> <span class="hljs-string">&#x27;123&#x27;</span> &gt; copyfile<br>ansible <span class="hljs-number">192.168.48.101</span> -m copy -a <span class="hljs-string">&#x27;src=copyfile dest=/tmp&#x27;</span><br></code></pre></td></tr></table></figure><p><img src="https://article.biliimg.com/bfs/article/96c6046ee46079b2447367aeae47b498697559838.png" alt="image-20230919104938353"></p><ol start="2"><li>直接在受管主机上生成一个指定内容的文件文件</li></ol><figure class="highlight nginx"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs nginx"><span class="hljs-attribute">ansible</span> <span class="hljs-number">192.168.48.101</span> -m copy -a <span class="hljs-string">&quot;content=&#x27;test copy\n&#x27; dest=/tmp/f1&quot;</span><br></code></pre></td></tr></table></figure><p><img src="https://article.biliimg.com/bfs/article/12def21f60afa06fe1b145419768fffa697559838.png" alt="image-20230919105205728"></p><ol start="3"><li>在受管主机上生成指定属性和内容的文件</li></ol><figure class="highlight dos"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs dos">ansible <span class="hljs-number">192</span>.<span class="hljs-number">168</span>.<span class="hljs-number">48</span>.<span class="hljs-number">101</span> -m <span class="hljs-built_in">copy</span> -a &quot;content=&#x27;test <span class="hljs-built_in">copy</span> <span class="hljs-number">2</span>\n&#x27; dest=/tmp/f2 <span class="hljs-built_in">mode</span>=<span class="hljs-number">0644</span> owner=student group=student&quot;<br></code></pre></td></tr></table></figure><p><img src="https://article.biliimg.com/bfs/article/e9d308d15f91e1af78bdbe023e0ca47e697559838.png" alt="image-20230919105358641"></p><ol start="4"><li>在文件覆盖前生成备份文件</li></ol><figure class="highlight livecodeserver"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs livecodeserver">ansible <span class="hljs-number">192.168</span><span class="hljs-number">.48</span><span class="hljs-number">.101</span> -m copy -<span class="hljs-keyword">a</span> <span class="hljs-string">&quot;content=&#x27;test copy 1\n&#x27; dest=/tmp/f1 backup=yes&quot;</span><br><br>ansible <span class="hljs-number">192.168</span><span class="hljs-number">.48</span><span class="hljs-number">.101</span> -m <span class="hljs-built_in">shell</span> -<span class="hljs-keyword">a</span> <span class="hljs-string">&quot;ls -l /tmp/f1*&quot;</span><br></code></pre></td></tr></table></figure><p><img src="https://article.biliimg.com/bfs/article/fc56eb8664984ebfed669f61a7d4aa08697559838.png" alt="image-20230919105648041"></p><p><img src="https://article.biliimg.com/bfs/article/dc7ecaecf5579aed243e908716ceb013697559838.png" alt="image-20230919105803096"></p><h3 id="script模块"><a href="#script模块" class="headerlink" title="script模块"></a>script模块</h3><p>在远程主机上运行ansible服务器上的脚本，优点是不需手动传送脚本至每个服务器。</p><p>其实是ansible自动传到远程主机、执行然后再删除脚本：copy+shell+delete</p><figure class="highlight vim"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs vim"><span class="hljs-keyword">cat</span> &gt;&gt; tesh.<span class="hljs-keyword">sh</span> &lt;&lt; EOF<br>#！/bin/bash <br><span class="hljs-keyword">echo</span> hello<br>EOF<br>ansible <span class="hljs-keyword">all</span> -<span class="hljs-keyword">m</span> script -<span class="hljs-keyword">a</span> tesh.<span class="hljs-keyword">sh</span><br></code></pre></td></tr></table></figure><p><img src="https://article.biliimg.com/bfs/article/a288baa19c33126a6c3aa3dd14aed666697559838.png" alt="image-20230919110133298"></p><p>执行结果显示了每台主机的执行情况。</p><p><code>CHANGED</code> 表示执行过程中发生了变化，即脚本被成功执行。</p><p><code>rc</code> 字段显示返回码为 0，表示执行成功。</p><p><code>stderr</code> 字段显示了标准错误输出，其中包含了连接关闭的信息。</p><p><code>stdout</code> 字段显示了标准输出，其中包含了脚本执行的结果，即 “hello”。</p><figure class="highlight awk"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><code class="hljs awk">cat &gt;&gt;  ansible_ntp.sh &lt;&lt; EOF<br><span class="hljs-comment">#!/bin/bash</span><br>systemctl status ntpd &gt;<span class="hljs-regexp">/dev/</span>null <span class="hljs-number">2</span>&gt;&amp;<span class="hljs-number">1</span><br><span class="hljs-keyword">if</span> [ \$? == <span class="hljs-number">0</span> ]; then<br>echo <span class="hljs-string">&quot;ntp service has been installed&quot;</span><br><span class="hljs-keyword">exit</span><br>fi<br>yum install -y ntp &gt;<span class="hljs-regexp">/dev/</span>null <span class="hljs-number">2</span>&gt;&amp;<span class="hljs-number">1</span><br><span class="hljs-keyword">if</span> [ \$? == <span class="hljs-number">0</span> ]; then<br>systemctl start ntpd<br>systemctl enabled ntpd &gt;<span class="hljs-regexp">/dev/</span>null <span class="hljs-number">2</span>&gt;&amp;<span class="hljs-number">1</span><br>sleep <span class="hljs-number">5</span><br>ntpq -p<br><span class="hljs-keyword">else</span><br>echo <span class="hljs-string">&quot;ntp service install failed,check network or yum&quot;</span><br>fi<br>EOF<br><br>这条命令的意思就是在后台执行这个程序,并将错误输出<span class="hljs-number">2</span>重定向到标准输出<span class="hljs-number">1</span>,然后将标准输出<span class="hljs-number">1</span>全部放 到<span class="hljs-regexp">/dev/</span>null文件,也就是清空.<br>所以可以看出<span class="hljs-string">&quot; &gt;/dev/null 2&gt;&amp;1 &quot;</span>常用来避免shell命令或者程序等运行中有内容输出。<br><br>chmod <span class="hljs-number">777</span> ansible_ntp.sh<br><br>ansible all -m script -a <span class="hljs-string">&quot;ansible_ntp.sh&quot;</span><br></code></pre></td></tr></table></figure><p><img src="https://article.biliimg.com/bfs/article/dc8663539448a67fae9867315e8dc8c4697559838.png" alt="image-20230919112000710"></p><h3 id="fetch模块"><a href="#fetch模块" class="headerlink" title="fetch模块"></a>fetch模块</h3><p>从受管主机上，拉取文件到控制节点（目前不支持目录,可以先打包,再提取文件）</p><p>常见参数</p><p><font color='red'>dest</font>：控制节点的保存路径</p><p><font color='red'>src</font>：受管节点要拉取文件的路径（必须是文件，不能是目录）</p><p><font color='red'>flat</font>：直接保存到目标指定位置，而不是在受管主机名下的文件路径中。</p><p><font color='cornflowerblue'>使用案例</font></p><ol><li>从受管主机拉取指定文件</li></ol><figure class="highlight nginx"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs nginx"><span class="hljs-attribute">ansible</span> <span class="hljs-number">192.168.48.101</span> -m fetch -a <span class="hljs-string">&quot;src=/etc/hosts dest=/home/student/ansible&quot;</span><br></code></pre></td></tr></table></figure><p>索取到本地目录下的文件会<font color='red'>自动生成与目标主机的域名或IP地址的目录</font>存放索取的文件</p><p><img src="https://article.biliimg.com/bfs/article/f407ca643ee7cfe5d8007dea7f9fd238697559838.png" alt="image-20230919122430880"></p><ol start="2"><li>直接拉取受管主机文件到控制节点指定位置</li></ol><p><font color='red'>flat</font>：直接保存到目标指定位置，而不是在受管主机名下的文件路径中。</p><figure class="highlight nginx"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs nginx"><span class="hljs-attribute">ansible</span> <span class="hljs-number">192.168.48.101</span> -m fetch -a <span class="hljs-string">&quot;src=/etc/hosts dest=/home/student/ansible/file1 flat=yes&quot;</span><br></code></pre></td></tr></table></figure><p><img src="https://article.biliimg.com/bfs/article/32b2ddb9b84f8dbc678dd68341166ad5697559838.png" alt="image-20230919124219445"></p><ol start="3"><li>打包目录并所有内容到控制节点指定位置</li></ol><figure class="highlight livecodeserver"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs livecodeserver">ansible <span class="hljs-number">192.168</span><span class="hljs-number">.48</span><span class="hljs-number">.101</span> -m <span class="hljs-built_in">shell</span> -<span class="hljs-keyword">a</span> <span class="hljs-string">&#x27;pwd&#x27;</span><br><br>ansible <span class="hljs-number">192.168</span><span class="hljs-number">.48</span><span class="hljs-number">.101</span> -m <span class="hljs-built_in">shell</span> -<span class="hljs-keyword">a</span> <span class="hljs-string">&#x27;tar cf test.tar.gz /var/log&#x27;</span><br>ansible <span class="hljs-number">192.168</span><span class="hljs-number">.48</span><span class="hljs-number">.101</span> -m <span class="hljs-built_in">shell</span> -<span class="hljs-keyword">a</span> <span class="hljs-string">&#x27;ls -l /home/student/&#x27;</span><br>ansible <span class="hljs-number">192.168</span><span class="hljs-number">.48</span><span class="hljs-number">.101</span> -m fetch -<span class="hljs-keyword">a</span> <span class="hljs-string">&quot;src=/home/student/test.tar.gz dest=/home/student/ansible/ flat=yes&quot;</span><br></code></pre></td></tr></table></figure><p><img src="https://article.biliimg.com/bfs/article/68547c2d3a531be98bff1d4582366ecb697559838.png" alt="image-20230919124935075"></p><p><img src="https://article.biliimg.com/bfs/article/9cdbae64fc8757be84e009e9fc596f07697559838.png" alt="image-20230919125130417"></p><h3 id="file模块"><a href="#file模块" class="headerlink" title="file模块"></a>file模块</h3><p>file 模块可以帮助我们完成一些对文件的基本操作。比如，创建文件或目录、删除文件或目录、修改文 件权限等。</p><p><font color='red'>常用参数</font></p><p><font color='red'>mode</font>： 定义文件&#x2F;目录的权限,比如，如果想要将文件权限设置为”rw-r-x—“，则可以使用mode&#x3D;650进行 设置，或者使用mode&#x3D;0650，效果也是相同的。<br><font color='red'>owner</font>： 定义文件&#x2F;目录的所有者,属主对应的用户必须在远程主机中存在,否则会报错。<br><font color='red'>group</font>： 定义文件&#x2F;目录的属组,属组对应的组必须在远程主机中存在，否则会报错。<br><font color='red'>path</font>： 必选项，定义受管主机的文件&#x2F;目录的路径<br><font color='red'>recurse</font>： 递归地设置文件的属性，只对目录有效<br><font color='red'>src</font>： 要被链接的源文件的路径，只应用于state&#x3D;hard&#x2F;link的情况<br><font color='red'>dest</font>： 被链接到的路径，只应用于state&#x3D;hard&#x2F;link的情况。<br><font color='red'>state</font>： 操作方法<br>    <font color='red'>directory</font>：如果目录不存在，创建目录<br>   <font color='red'>file</font>：即使文件不存在，也不会被创建（只能指定已存在的文件）<br>   <font color='red'>touch</font>：如果文件不存在，则会创建一个新的文件，如果文件或目录已存在，则更新其最后修改时间<br>    <font color='red'>link</font>：创建软链接<br>    <font color='red'>hard</font>：创建硬链接<br>    <font color='red'>absent</font>：删除目录、文件或者取消链接文件，相当于rm -rf<br><font color='red'>force</font>： 只应用于state&#x3D;hard&#x2F;link的情况，若需要在两种情况下<font color='red'>强制创建软链接</font>，一种是源文件不存在但 之后会建立的情况下；另一种是目标软链接已存在，需要先取消之前的软链，然后创建新的软链，有两个选 项：yes|no</p><p><font color='cornflowerblue'>使用案例</font></p><ol><li>创建指定文件属性的空目录</li></ol><figure class="highlight livecodeserver"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs livecodeserver">ansible <span class="hljs-number">192.168</span><span class="hljs-number">.48</span><span class="hljs-number">.101</span> -m <span class="hljs-built_in">file</span> -<span class="hljs-keyword">a</span> <span class="hljs-string">&quot;path=/tmp/dir2 state=directory owner=student group=student mode=0755&quot;</span><br><br>ansible <span class="hljs-number">192.168</span><span class="hljs-number">.48</span><span class="hljs-number">.101</span> -m <span class="hljs-built_in">shell</span> -<span class="hljs-keyword">a</span> <span class="hljs-string">&quot;ls -l /tmp/&quot;</span><br></code></pre></td></tr></table></figure><p><img src="https://article.biliimg.com/bfs/article/43c54cf3a0542ae22dd80f6d5e858fc6697559838.png" alt="image-20230919130328712"></p><ol start="2"><li>创建指定文件属性的空文件</li></ol><figure class="highlight livecodeserver"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs livecodeserver">ansible <span class="hljs-number">192.168</span><span class="hljs-number">.48</span><span class="hljs-number">.101</span> -m <span class="hljs-built_in">file</span> -<span class="hljs-keyword">a</span> <span class="hljs-string">&quot;path=/tmp/file2 state=touch owner=student group=student mode=0755&quot;</span><br>ansible <span class="hljs-number">192.168</span><span class="hljs-number">.48</span><span class="hljs-number">.101</span> -m <span class="hljs-built_in">shell</span> -<span class="hljs-keyword">a</span> <span class="hljs-string">&quot;ls -l /tmp/&quot;</span><br></code></pre></td></tr></table></figure><p><img src="https://article.biliimg.com/bfs/article/c2144663c412d713dc2313e9ba37c608697559838.png" alt="image-20230919130652157"></p><p><font color='red'>注意：为何不能用state&#x3D;file</font></p><p><font color='red'>file</font>：即使文件不存在，也不会被创建（只能指定已存在的文件） </p><p>file3不存在</p><figure class="highlight livecodeserver"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs livecodeserver">ansible <span class="hljs-number">192.168</span><span class="hljs-number">.48</span><span class="hljs-number">.101</span> -m <span class="hljs-built_in">file</span> -<span class="hljs-keyword">a</span> <span class="hljs-string">&quot;path=/tmp/file3 state=file owner=student group=student mode=0755&quot;</span><br></code></pre></td></tr></table></figure><p><img src="https://article.biliimg.com/bfs/article/1ccaa7eeacf2f196a572ebb6e9a7b0f9697559838.png" alt="image-20230919131409780"></p><p>如果指定file1（已存在）呢（将root用户属组改成student）</p><figure class="highlight livecodeserver"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs livecodeserver">ansible <span class="hljs-number">192.168</span><span class="hljs-number">.48</span><span class="hljs-number">.101</span> -m <span class="hljs-built_in">file</span> -<span class="hljs-keyword">a</span> <span class="hljs-string">&quot;path=/tmp/file1 state=file owner=student group=student mode=0755&quot;</span><br></code></pre></td></tr></table></figure><p><img src="https://article.biliimg.com/bfs/article/1087364b1b882f9174d4bae08745861b697559838.png" alt="image-20230919131653294"></p><ol start="3"><li>删除目录、删除文件</li></ol><figure class="highlight livecodeserver"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs livecodeserver">ansible <span class="hljs-number">192.168</span><span class="hljs-number">.48</span><span class="hljs-number">.101</span> -m <span class="hljs-built_in">file</span> -<span class="hljs-keyword">a</span> <span class="hljs-string">&quot;path=/tmp/dir1 state=absent&quot;</span><br>ansible <span class="hljs-number">192.168</span><span class="hljs-number">.48</span><span class="hljs-number">.101</span> -m <span class="hljs-built_in">file</span> -<span class="hljs-keyword">a</span> <span class="hljs-string">&quot;path=/tmp/file1 state=absent&quot;</span><br>ansible <span class="hljs-number">192.168</span><span class="hljs-number">.48</span><span class="hljs-number">.101</span> -m <span class="hljs-built_in">shell</span> -<span class="hljs-keyword">a</span> <span class="hljs-string">&quot;ls -l /tmp/&quot;</span><br></code></pre></td></tr></table></figure><p><img src="https://article.biliimg.com/bfs/article/e5423ea81527317aa1833484a8a2082f697559838.png" alt="image-20230919131825229"></p><ol start="4"><li>创建链接文件</li></ol><p>软链接：快捷方式<br>file2→file1（link）</p><p>生成file1（<font color='red'>如果已存在就忽略这步</font>）</p><figure class="highlight nginx"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs nginx"><span class="hljs-attribute">ansible</span> <span class="hljs-number">192.168.48.101</span> -m copy -a <span class="hljs-string">&quot;content=&#x27;123 \n&#x27; dest=/tmp/file1&quot;</span><br></code></pre></td></tr></table></figure><p><img src="https://article.biliimg.com/bfs/article/a9ea12f3298a97b1cfbd589efdc804d0697559838.png" alt="image-20230919132425256"></p><p>生成软链接</p><figure class="highlight livecodeserver"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs livecodeserver">ansible <span class="hljs-number">192.168</span><span class="hljs-number">.48</span><span class="hljs-number">.101</span> -m <span class="hljs-built_in">file</span> -<span class="hljs-keyword">a</span> <span class="hljs-string">&quot;src=/tmp/file1 path=/tmp/file2 state=link force=true&quot;</span><br></code></pre></td></tr></table></figure><p><img src="https://article.biliimg.com/bfs/article/152e67e3b730d59ee090daa8a6a17874697559838.png" alt="image-20230919132542883"></p><p>取消软连接</p><figure class="highlight livecodeserver"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs livecodeserver">ansible <span class="hljs-number">192.168</span><span class="hljs-number">.48</span><span class="hljs-number">.101</span> -m <span class="hljs-built_in">file</span> -<span class="hljs-keyword">a</span> <span class="hljs-string">&quot;path=/tmp/file2 state=absent&quot;</span><br></code></pre></td></tr></table></figure><p><img src="https://article.biliimg.com/bfs/article/28450c31d1d20e22ab86a347ae5fbffd697559838.png" alt="image-20230919132733624"></p><p>硬链接：指向同一个inode</p><p>file3→file1（hard）</p><p>file3不存在</p><figure class="highlight livecodeserver"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs livecodeserver">ansible <span class="hljs-number">192.168</span><span class="hljs-number">.48</span><span class="hljs-number">.101</span> -m <span class="hljs-built_in">file</span> -<span class="hljs-keyword">a</span> <span class="hljs-string">&quot;src=/tmp/file1 path=/tmp/file3 state=hard&quot;</span><br></code></pre></td></tr></table></figure><p><img src="https://article.biliimg.com/bfs/article/f70b2feac7d5c94bd01c25a22ddc8562697559838.png" alt="image-20230919132952435"></p><h4 id="课堂练习"><a href="#课堂练习" class="headerlink" title="课堂练习"></a>课堂练习</h4><p>1、在&#x2F;tmp&#x2F;下创建目录ansiblefile,并在该文件夹下创建test.txt文件，指定属主student,赋予权限0700</p><figure class="highlight pf"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs pf">ansible <span class="hljs-literal">all</span> -m shell -a <span class="hljs-string">&quot;useradd student&quot;</span><span class="hljs-comment">#创建一个用户与组</span><br>ansible <span class="hljs-number">192.168</span>.<span class="hljs-number">48.101</span> -m file -a &#x27;path=/tmp/ansiblefile <span class="hljs-keyword">state</span>=directory&#x27;<br>ansible <span class="hljs-number">192.168</span>.<span class="hljs-number">48.101</span> -m file -a &#x27;path=/tmp/ansiblefile/test.txt <span class="hljs-keyword">state</span>=touch owner=student mode=<span class="hljs-number">0700</span>&#x27;<br></code></pre></td></tr></table></figure><p><img src="https://article.biliimg.com/bfs/article/42ed39531dc9bbab1fae996bed68f578697559838.png" alt="image-20230919133407177"></p><p>2、删除远程机器上的指定文件或目录(删除远程主机上的文件：&#x2F;tmp&#x2F;ansiblefile&#x2F;test.txt</p><figure class="highlight pf"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs pf">ansible <span class="hljs-number">192.168</span>.<span class="hljs-number">48.101</span> -m file -a &#x27;path=/tmp/ansiblefile/test.txt <span class="hljs-keyword">state</span>=absent&#x27;<br></code></pre></td></tr></table></figure><p><img src="https://article.biliimg.com/bfs/article/bcd244bf5f73a5c999c772d32eed2712697559838.png" alt="image-20230919133445932"></p><h3 id="lineinfile模块"><a href="#lineinfile模块" class="headerlink" title="lineinfile模块"></a>lineinfile模块</h3><p>增加或修改文件内容（以行为单位做流式处理），该模块在自动化运维中非常重要,他可以通过正则表达 式替换指定文本;例如开启一些配置选项等可以新加一行文本,或者是删除指定的行,本命令一定认真掌握 下来.</p><p><em><strong>*常见参数*</strong></em></p><p><font color='red'>path</font>：必须参数，远端文件路径 </p><p><font color='red'>line</font>：必须参数，修改后的内容（按行写入），追加 </p><p><font color='red'>regexp</font>：（定位）匹配正则语句,与要过滤的关键字 </p><p><font color='red'>state</font>：文件修改状态（present 添加生效 &#x2F; absent 删除） </p><p><font color='red'>replace</font>：替换文件内容 </p><p><font color='red'>create</font>：当文件不存在时，是否创建对应文件 </p><p><font color='red'>backup</font>：若文件更新时创建备份副本 </p><p><font color='red'>insertafter</font>：在指定位置的下一行插入（定位） </p><p><font color='red'>insertbefore</font>：在指定位置的上一行插入（定位）</p><p><font color='orange'>使用案例</font></p><p>假设前提：将控制节点的&#x2F;etc&#x2F;selinux&#x2F;config文件复制到受管主机192.168.48.101，另存为&#x2F;tmp&#x2F;selinux文件</p><figure class="highlight livecodeserver"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs livecodeserver">ansible <span class="hljs-number">192.168</span><span class="hljs-number">.48</span><span class="hljs-number">.101</span> -m copy -<span class="hljs-keyword">a</span> <span class="hljs-string">&quot;src=/etc/selinux/config dest=/tmp/selinux&quot;</span><br>ansible <span class="hljs-number">192.168</span><span class="hljs-number">.48</span><span class="hljs-number">.101</span> -m <span class="hljs-built_in">shell</span> -<span class="hljs-keyword">a</span> <span class="hljs-string">&quot;cat /tmp/selinux&quot;</span><br></code></pre></td></tr></table></figure><p><img src="https://article.biliimg.com/bfs/article/c7071f5449818e411e733171c69145b3697559838.png" alt="image-20230919134240077"></p><p><img src="https://article.biliimg.com/bfs/article/5a52cd852cc31e8ae93209d57b87d9fe697559838.png" alt="image-20230919134251941"></p><ol><li>修改文件内容：考虑两个问题，修改哪个部分，修改成什么内容</li></ol><p>修改SELINUX开头的行，更新内容为：SELINUX&#x3D;disabled</p><figure class="highlight livecodeserver"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs livecodeserver">ansible <span class="hljs-number">192.168</span><span class="hljs-number">.48</span><span class="hljs-number">.101</span> -m lineinfile -<span class="hljs-keyword">a</span> <span class="hljs-string">&quot;path=/tmp/selinux regexp=&#x27;^SELINUX=&#x27; line=&#x27;SELINUX=disabled&#x27; &quot;</span><br>ansible <span class="hljs-number">192.168</span><span class="hljs-number">.48</span><span class="hljs-number">.101</span> -m <span class="hljs-built_in">shell</span> -<span class="hljs-keyword">a</span> <span class="hljs-string">&quot;cat /tmp/selinux&quot;</span><br></code></pre></td></tr></table></figure><p><img src="https://article.biliimg.com/bfs/article/9d29fd1e37a4929fd986c45b5402d830697559838.png" alt="image-20230919134315158"></p><p>2.增加文件内容：考虑两个问题，增加什么内容，增加在哪个位置（上一行或下一行）</p><p>在SELINUX开头的行，在下一行加个注释，并且应用生效</p><figure class="highlight nginx"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs nginx"><span class="hljs-attribute">ansible</span> <span class="hljs-number">192.168.48.101</span> -m lineinfile -a <span class="hljs-string">&quot;path=/tmp/selinux insertafter=&#x27;^SELINUX=&#x27; line=&#x27;##Disabled SELINUX&#x27; &quot;</span><br></code></pre></td></tr></table></figure><p><img src="https://article.biliimg.com/bfs/article/0bb9ef173952255aeb8b0e8eac4c7ce3697559838.png" alt="image-20230919134429117"></p><p>通过正则匹配查找&#x2F;tmp&#x2F;selinux文本,并在文本末尾插入一行##end</p><figure class="highlight vhdl"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs vhdl">ansible <span class="hljs-number">192.168</span>.<span class="hljs-number">48.101</span> -m lineinfile -a <span class="hljs-symbol">&#x27;path</span>=/tmp/selinux regexp=<span class="hljs-string">&quot;EOF&quot;</span> <span class="hljs-literal">line</span>=<span class="hljs-string">&quot;#end&quot;</span>&#x27;<br></code></pre></td></tr></table></figure><p><img src="https://article.biliimg.com/bfs/article/36fbe942e533946190cc32f5775b7daf697559838.png" alt="image-20230919134600319"></p><p>3.删除文件内容:把刚才添加的“<font color='orange'>##disabled selinux</font>”注释去掉（删除所在行）</p><figure class="highlight livecodeserver"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs livecodeserver">ansible <span class="hljs-number">192.168</span><span class="hljs-number">.48</span><span class="hljs-number">.101</span> -m lineinfile -<span class="hljs-keyword">a</span> <span class="hljs-string">&quot;path=/tmp/selinux regexp=&#x27;^##Disa&#x27; state=absent&quot;</span><br>ansible <span class="hljs-number">192.168</span><span class="hljs-number">.48</span><span class="hljs-number">.101</span> -m <span class="hljs-built_in">shell</span> -<span class="hljs-keyword">a</span> <span class="hljs-string">&quot;cat /tmp/selinux&quot;</span><br></code></pre></td></tr></table></figure><p><img src="https://article.biliimg.com/bfs/article/2a8a77f3f301e20dc11cbc3213b1599c697559838.png" alt="image-20230919134741516"></p><p><img src="https://article.biliimg.com/bfs/article/021e453a069a196aeab0d92b48bbc0c6697559838.png" alt="image-20230919134748069"></p><ol start="4"><li>备份文件:在SELINUX开头的行，前一行加个注释，并且生效，生成备份文件</li></ol><figure class="highlight livecodeserver"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs livecodeserver">ansible <span class="hljs-number">192.168</span><span class="hljs-number">.48</span><span class="hljs-number">.101</span> -m lineinfile -<span class="hljs-keyword">a</span> <span class="hljs-string">&quot;path=/tmp/selinux insertbefore=&#x27;^SELINUX=&#x27; line=&#x27;##Disabled SELINUX&#x27; backup=yes state=present&quot;</span><br>ansible <span class="hljs-number">192.168</span><span class="hljs-number">.48</span><span class="hljs-number">.101</span> -m <span class="hljs-built_in">shell</span> -<span class="hljs-keyword">a</span> <span class="hljs-string">&quot;ls -l /tmp/selinux*&quot;</span><br></code></pre></td></tr></table></figure><p><img src="https://article.biliimg.com/bfs/article/35ffa0d84370e8cd6e95c647ae0b75dc697559838.png" alt="image-20230919134951862"></p><p><img src="https://article.biliimg.com/bfs/article/0f0cc8e16e04f63be2f9561f31d6da3e697559838.png" alt="image-20230919135043656"></p><p>课堂练习：</p><p>修改192.168.48.101主机的&#x2F;etc&#x2F;hosts文件，</p><p>1、增加内容192.168.48.102 node03,验证增加成功</p><figure class="highlight livecodeserver"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs livecodeserver">ansible <span class="hljs-number">192.168</span><span class="hljs-number">.48</span><span class="hljs-number">.101</span> -m lineinfile -<span class="hljs-keyword">a</span> <span class="hljs-string">&quot;path=/etc/hosts line=&#x27;192.168.48.102 node03&#x27; &quot;</span><br>ansible <span class="hljs-number">192.168</span><span class="hljs-number">.48</span><span class="hljs-number">.101</span> -m <span class="hljs-built_in">shell</span> -<span class="hljs-keyword">a</span> <span class="hljs-string">&quot;cat /etc/hosts&quot;</span><br></code></pre></td></tr></table></figure><p><img src="https://article.biliimg.com/bfs/article/c14f5f799b1dc2adb30c92bb1fcbe2f4697559838.png" alt="image-20230919143706370"></p><p>2、匹配以192开头的行，修改192.168.48.102 对应的 域名为node02，验证增加成功</p><figure class="highlight nginx"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs nginx"><span class="hljs-attribute">ansible</span> <span class="hljs-number">192.168.48.101</span> -m lineinfile -a <span class="hljs-string">&quot;path=/etc/hosts regexp=&#x27;^192&#x27; line=&#x27;192.168.48.102 node02&#x27; &quot;</span><br></code></pre></td></tr></table></figure><p><img src="https://article.biliimg.com/bfs/article/94dee19e4429abe8bd2f7e7781d4e40a697559838.png" alt="image-20230919143745061"></p><p>3、匹配以192开头的行之前增加 192.168.48.101 node01 ，验证增加成功</p><figure class="highlight nginx"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs nginx"><span class="hljs-attribute">ansible</span> <span class="hljs-number">192.168.48.101</span> -m lineinfile -a <span class="hljs-string">&quot;path=/etc/hosts insertbefore=&#x27;^192&#x27; line=&#x27;192.168.48.101 node01&#x27; &quot;</span><br></code></pre></td></tr></table></figure><p><img src="https://article.biliimg.com/bfs/article/ac81d7d4be436b58c1a83c45aadf5206697559838.png" alt="image-20230919143806128"></p><p>4、在文档结尾增加 192.168.48.100 controller</p><figure class="highlight vhdl"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs vhdl">ansible <span class="hljs-number">192.168</span>.<span class="hljs-number">48.101</span> -m lineinfile -a <span class="hljs-symbol">&#x27;path</span>=/etc/hosts regexp=<span class="hljs-string">&quot;EOF&quot;</span> <span class="hljs-literal">line</span>=<span class="hljs-string">&quot;192.168.48.100 controller&quot;</span>&#x27;<br></code></pre></td></tr></table></figure><p><img src="https://article.biliimg.com/bfs/article/b213b770890648ee6a28c2610f7bebca697559838.png" alt="image-20230919143820201"></p><p>5、删除步骤1-3加入的内容</p><figure class="highlight livecodeserver"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs livecodeserver">ansible <span class="hljs-number">192.168</span><span class="hljs-number">.48</span><span class="hljs-number">.101</span> -m lineinfile -<span class="hljs-keyword">a</span> <span class="hljs-string">&quot;path=/etc/hosts regexp=&#x27;^192.&#x27; state=absent&quot;</span><br>ansible <span class="hljs-number">192.168</span><span class="hljs-number">.48</span><span class="hljs-number">.101</span> -m <span class="hljs-built_in">shell</span> -<span class="hljs-keyword">a</span> <span class="hljs-string">&quot;cat /etc/hosts&quot;</span><br></code></pre></td></tr></table></figure><p><img src="https://article.biliimg.com/bfs/article/27b74f5c72cccd7b213736fff4215ebc697559838.png" alt="image-20230919143831042"></p><h2 id="软件包模块"><a href="#软件包模块" class="headerlink" title="软件包模块"></a>软件包模块</h2><h3 id="yum模块"><a href="#yum模块" class="headerlink" title="yum模块"></a>yum模块</h3><p><em><strong>*常用参数*</strong></em></p><p>name：软件包名称（必填） </p><p>state：</p><p>latest（更新到最新） </p><p>present（安装） </p><p>version（版本） </p><p>absent（卸载）</p><p>查看是否安装了某个服务 rpm -qa|grep httpd</p><p><em><strong>*使用案例*</strong></em></p><p>给node01安装httpd服务</p><figure class="highlight pf"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs pf">ansible <span class="hljs-number">192.168</span>.<span class="hljs-number">48.101</span> -m yum -a &#x27;name=httpd <span class="hljs-keyword">state</span>=present&#x27;<br></code></pre></td></tr></table></figure><p><img src="https://article.biliimg.com/bfs/article/2cab4863b890c69d3f3ca82b20267a0d697559838.png" alt="image-20230919144212748"></p><p>验证安装</p><figure class="highlight livecodeserver"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs livecodeserver">ansible <span class="hljs-number">192.168</span><span class="hljs-number">.48</span><span class="hljs-number">.101</span> -m <span class="hljs-built_in">shell</span> -<span class="hljs-keyword">a</span> <span class="hljs-string">&#x27;rpm -qa|grep httpd&#x27;</span><br></code></pre></td></tr></table></figure><p>卸载 state&#x3D;absent</p><figure class="highlight pf"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs pf">ansible <span class="hljs-number">192.168</span>.<span class="hljs-number">48.101</span> -m yum -a &#x27;name=httpd <span class="hljs-keyword">state</span>=absent&#x27;<br></code></pre></td></tr></table></figure><p>更新软件state&#x3D;latest</p><figure class="highlight pf"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs pf">ansible <span class="hljs-number">192.168</span>.<span class="hljs-number">48.101</span> -m yum -a &#x27;name=&#x27;httpd&#x27; <span class="hljs-keyword">state</span>=latest&#x27;<br></code></pre></td></tr></table></figure><h2 id="系统模块"><a href="#系统模块" class="headerlink" title="系统模块"></a>系统模块</h2><h3 id="user模块"><a href="#user模块" class="headerlink" title="user模块"></a>user模块</h3><p><font color='red'>常用参数</font></p><figure class="highlight pf"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><code class="hljs pf">comment：注释信息<br><span class="hljs-keyword">group</span>：主要组<br>groups：附加组<br><span class="hljs-keyword">state</span>：present/absent<br>generate_ssh_key：生成SSH验证密钥<br>name：用户名<br>shell：Shell类型<br>uid：UID<br></code></pre></td></tr></table></figure><p><font color='red'>使用案例</font></p><p>1、在node1上创建用户 test_user UID&#x3D;1010</p><figure class="highlight crmsh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs crmsh">ansible <span class="hljs-number">192.168</span>.<span class="hljs-number">48.101</span> -m <span class="hljs-keyword">user</span> <span class="hljs-title">-a</span> <span class="hljs-string">&quot;name=test_user  uid=1010 comment=&#x27;ansible_test_user&#x27; shell=/bin/bash generate_ssh_key=yes  state=present&quot;</span><br></code></pre></td></tr></table></figure><figure class="highlight livecodeserver"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs livecodeserver">ansible <span class="hljs-number">192.168</span><span class="hljs-number">.48</span><span class="hljs-number">.101</span> -m <span class="hljs-built_in">shell</span> -<span class="hljs-keyword">a</span> <span class="hljs-string">&#x27;id test_user&#x27;</span><br></code></pre></td></tr></table></figure><p><img src="https://article.biliimg.com/bfs/article/90bacb9fd569915fc2009b550fcff85c697559838.png" alt="image-20230920001519202"></p><p>2、删除用户test_user（userdel test_user）</p><figure class="highlight livecodeserver"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs livecodeserver">ansible <span class="hljs-number">192.168</span><span class="hljs-number">.48</span><span class="hljs-number">.101</span> -m user -<span class="hljs-keyword">a</span> <span class="hljs-string">&quot;name=test_user  state=absent force=yes&quot;</span><br>ansible <span class="hljs-number">192.168</span><span class="hljs-number">.48</span><span class="hljs-number">.101</span> -m <span class="hljs-built_in">shell</span> -<span class="hljs-keyword">a</span> <span class="hljs-string">&#x27;getent passwd |grep test_user&#x27;</span><br></code></pre></td></tr></table></figure><p><img src="https://article.biliimg.com/bfs/article/ab5aba4385fbc59a4a114f19771f5765697559838.png" alt="image-20230920001533536"></p><h3 id="group组模块"><a href="#group组模块" class="headerlink" title="group组模块"></a>group组模块</h3><p>1、创建组test_group (groupadd -g 1010 test_group）</p><figure class="highlight livecodeserver"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs livecodeserver">ansible <span class="hljs-number">192.168</span><span class="hljs-number">.48</span><span class="hljs-number">.101</span> -m group -<span class="hljs-keyword">a</span> <span class="hljs-string">&quot;name=test_group  gid=1010  state=present&quot;</span><br>ansible <span class="hljs-number">192.168</span><span class="hljs-number">.48</span><span class="hljs-number">.101</span> -m <span class="hljs-built_in">shell</span> -<span class="hljs-keyword">a</span> <span class="hljs-string">&#x27;getent group|grep test_group&#x27;</span><br></code></pre></td></tr></table></figure><p><img src="https://article.biliimg.com/bfs/article/a52a9e8d0f2e5612a858d56bf9d27f6c697559838.png" alt="image-20230920001545680"></p><p>2、删除组test_group （groupdel test_group）</p><figure class="highlight livecodeserver"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs livecodeserver">ansible <span class="hljs-number">192.168</span><span class="hljs-number">.48</span><span class="hljs-number">.101</span> -m group -<span class="hljs-keyword">a</span> <span class="hljs-string">&quot;name=test_group   state=absent&quot;</span><br>ansible <span class="hljs-number">192.168</span><span class="hljs-number">.48</span><span class="hljs-number">.101</span> -m <span class="hljs-built_in">shell</span> -<span class="hljs-keyword">a</span> <span class="hljs-string">&#x27;getent group|grep test_group&#x27;</span><br></code></pre></td></tr></table></figure><p><img src="https://article.biliimg.com/bfs/article/44d182d38477b6d32c46072af1200188697559838.png" alt="image-20230920001557200"></p><h3 id="service模块"><a href="#service模块" class="headerlink" title="service模块"></a>service模块</h3><p>启用&#x2F;启动&#x2F;停止指定的服务</p><p><font color='red'>常用参数</font></p><figure class="highlight pf"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs pf">name：服务名（确定服务存在）（必选项）<br><span class="hljs-keyword">state</span>：服务目标状态<br>（<span class="hljs-keyword">state</span>=started/stopped/restarted/...）（必选项）<br>enabled：是否开机启动(yes/<span class="hljs-keyword">no</span>)<br></code></pre></td></tr></table></figure><p>1、在node01上安装和启用httpd服务（相当于systemctl enable –now httpd）</p><p>安装</p><figure class="highlight pf"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs pf">ansible <span class="hljs-number">192.168</span>.<span class="hljs-number">48.101</span> -m yum -a &#x27;name=httpd <span class="hljs-keyword">state</span>=present&#x27;<br></code></pre></td></tr></table></figure><p>启用</p><figure class="highlight nginx"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs nginx"><span class="hljs-attribute">ansible</span> <span class="hljs-number">192.168.48.101</span> -m service -a <span class="hljs-string">&quot;name=httpd state=started  enabled=yes&quot;</span><br></code></pre></td></tr></table></figure><figure class="highlight livecodeserver"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs livecodeserver">ansible <span class="hljs-number">192.168</span><span class="hljs-number">.48</span><span class="hljs-number">.101</span> -m <span class="hljs-built_in">shell</span> -<span class="hljs-keyword">a</span> <span class="hljs-string">&#x27;systemctl status httpd&#x27;</span><br></code></pre></td></tr></table></figure><p><img src="https://article.biliimg.com/bfs/article/80617687a2c31220aca9b32fef66181a697559838.png" alt="image-20230920001809879"></p><p><img src="https://article.biliimg.com/bfs/article/b34f33491ff927b62677f8263ea26403697559838.png" alt="image-20230920001826386"></p><p>2、停止服务</p><figure class="highlight pf"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs pf">ansible <span class="hljs-number">192.168</span>.<span class="hljs-number">48.101</span> -m service -a &#x27;name=httpd <span class="hljs-keyword">state</span>=stopped&#x27;<br></code></pre></td></tr></table></figure><p><img src="https://article.biliimg.com/bfs/article/e2f189fb71e8d98097b16fb5368bbf98697559838.png" alt="image-20230920001941649"></p><p>3、重启服务</p><figure class="highlight pf"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs pf">ansible <span class="hljs-number">192.168</span>.<span class="hljs-number">48.101</span> -m service -a &#x27;name=httpd <span class="hljs-keyword">state</span>=restarted&#x27;<br></code></pre></td></tr></table></figure><p><img src="https://article.biliimg.com/bfs/article/cff80809300fcb8af24082177be2ca07697559838.png" alt="image-20230920002005593"></p><h3 id="firewalld模块"><a href="#firewalld模块" class="headerlink" title="firewalld模块"></a>firewalld模块</h3><p><font color='red'>常见参数</font></p><figure class="highlight pgsql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><code class="hljs pgsql">source：数据源（相当于<span class="hljs-comment">--add-source）</span><br>interface：端口（相当于<span class="hljs-comment">--add-port）</span><br>service：服务（相当于<span class="hljs-comment">--add-service）</span><br><span class="hljs-type">zone</span>：关联区域（相当于<span class="hljs-comment">--zone）</span><br>permanent：永久生效（相当于<span class="hljs-comment">--permanent）</span><br><span class="hljs-keyword">immediate</span>：立即生效（相当于执行了firewall-cmd <span class="hljs-comment">--reload）</span><br>state：防火墙规则状态（enabled | disabled）（必填项）<br>rich_rule：富规则（相当于<span class="hljs-comment">--add-rich-rule=&#x27;&#x27;）</span><br></code></pre></td></tr></table></figure><p><font color='red'>使用案例</font></p><p>1、添加基本规则</p><p>在node1中将http服务进行放行，并关联到public区域中，立即生效且永久生效</p><figure class="highlight pf"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs pf">ansible <span class="hljs-number">192.168</span>.<span class="hljs-number">48.101</span> -m firewalld -a &#x27;zone=public service=http permanent=yes immediate=yes <span class="hljs-keyword">state</span>=enabled&#x27;<br></code></pre></td></tr></table></figure><h2 id="综合练习"><a href="#综合练习" class="headerlink" title="综合练习"></a>综合练习</h2><p>（1）在node01上创建一个用户devops：</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs shell">ansible node01 -m user -a &quot;name=devops state=present&quot;<br></code></pre></td></tr></table></figure><p><img src="https://article.biliimg.com/bfs/article/d508e6126a9ac7c363f45b469bbdaca0697559838.png" alt="image-20230919211657605"></p><p>（2）在node01上创建一个目录 &#x2F;devops，设置所属组、权限：</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs shell">ansible node01 -m file -a &quot;path=/devops state=directory owner=devops group=devops mode=0755&quot;<br> ansible node01 -m shell -a &quot;ls -l /&quot;  <br></code></pre></td></tr></table></figure><p><img src="https://article.biliimg.com/bfs/article/f9cd8845da55ce9883135ca9085080a3697559838.png" alt="image-20230919211756676"></p><p>（3）安装httpd服务，设定开机自启动，验证服务状态为启动：</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs shell">ansible node01 -m yum -a &quot;name=httpd state=present&quot;<br>ansible node01 -m service -a &quot;name=httpd state=started enabled=yes&quot;<br></code></pre></td></tr></table></figure><p><img src="https://article.biliimg.com/bfs/article/42e95702db579fc4d70f5aea6bbcf807697559838.png" alt="image-20230912173234830"></p><p><img src="https://article.biliimg.com/bfs/article/7909a255cf3f071e996d60b6915dd214697559838.png" alt="image-20230912173228899"></p><p>（4）创建一个文件 &#x2F;devops&#x2F;index.html 包含一行内容：DevOps：</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs shell">ansible node01 -m copy -a &quot;content=&#x27;DevOps\n&#x27; dest=/devops/index.html&quot;<br></code></pre></td></tr></table></figure><p><img src="https://article.biliimg.com/bfs/article/4046da70aaf749db41e0dd64c00e0a9a697559838.png" alt="image-20230919211916628"></p><p>（5）创建软链接：&#x2F;var&#x2F;www&#x2F;html&#x2F;index.html 到 &#x2F;devops&#x2F;index.html：</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs shell">ansible node01 -m file -a &quot;src=/devops/index.html dest=/var/www/html/index.html state=link force=true&quot;<br></code></pre></td></tr></table></figure><p><img src="https://article.biliimg.com/bfs/article/90b074677ab34dff1f69aea2ca0d0444697559838.png" alt="image-20230919211928515"></p><p>（6）验证软链接：</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs shell">ansible node01 -m shell -a &quot;ls -l  /var/www/html/index.html&quot;<br></code></pre></td></tr></table></figure><p><img src="https://article.biliimg.com/bfs/article/ba6565a84ffff4c88ec3f91c2a3d5a0c697559838.png" alt="image-20230919211941716"></p><p>（7）取消软链接，新建&#x2F;var&#x2F;www&#x2F;html&#x2F;index.html 文档，访问网页：</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs shell">ansible node01 -m file -a &quot;path=/var/www/html/index.html state=absent&quot;<br>ansible node01 -m copy -a &quot;content=&#x27;Hello World&#x27; dest=/var/www/html/index.html&quot;<br></code></pre></td></tr></table></figure><p><img src="https://article.biliimg.com/bfs/article/19503443b05a847777d3ade62720ec4a697559838.png" alt="image-20230919212000893"></p><p><img src="https://article.biliimg.com/bfs/article/15146aceea264ada2262185d3c951c5c697559838.png" alt="image-20230919212022836"></p><p>使用浏览器访问<a href="http://192.168.48.101验证主页信息/">http://192.168.48.101验证主页信息</a></p><p><code>可以返回目录！</code></p><p><a href="https://blog.qianyios.top/2023/09/10/ansible/Ansible-%E6%80%BB%E6%89%8B%E5%86%8C/">Ansible练习目录 - 严千屹博客 (qianyios.top)</a></p><div class="tbsm" style="margin-top:54px;"><div class="tbsm-top"><span><svg t="1674654360507" class="icon" viewBox="0 0 1024 1024" version="1.1" xmlns="http://www.w3.org/2000/svg" p-id="987" data-spm-anchor-id="a313x.7781069.0.i0" width="35" height="35"><path d="M410.49 97.74H155.08a56.74 56.74 0 0 0-56.84 56.73V410a56.84 56.84 0 0 0 56.84 56.84h255.41A56.83 56.83 0 0 0 467.32 410V154.58a56.83 56.83 0 0 0-56.83-56.84zM410.49 558.74H155.08a56.74 56.74 0 0 0-56.84 56.73V871a56.84 56.84 0 0 0 56.84 56.84h255.41A56.83 56.83 0 0 0 467.32 871V615.58a56.83 56.83 0 0 0-56.83-56.84zM871.49 558.74H616.08a56.74 56.74 0 0 0-56.84 56.73V871a56.84 56.84 0 0 0 56.84 56.84h255.41A56.83 56.83 0 0 0 928.32 871V615.58a56.83 56.83 0 0 0-56.83-56.84z" fill="#66EEFF" p-id="988"></path><path d="M410.49 558.74h-4.14A475 475 0 0 0 299.52 859.6a481.16 481.16 0 0 0 4.84 68.22h106.13A56.83 56.83 0 0 0 467.32 871V615.58a56.83 56.83 0 0 0-56.83-56.84zM871.49 558.74H616.08a56.74 56.74 0 0 0-56.84 56.73V871a56.84 56.84 0 0 0 56.84 56.84h255.41A56.83 56.83 0 0 0 928.32 871V615.58a56.83 56.83 0 0 0-56.83-56.84z" fill="#C2F8FF" p-id="989"></path></svg></span><span style="font-size:30px;"> 特别声明</span></div><div class="tbsm-wz">千屹博客旗下的所有文章，是通过本人课堂学习和课外自学所精心整理的知识巨著<br/>难免会有出错的地方<br/>如果细心的你发现了小失误，可以在下方评论区告诉我，或者私信我！<br />非常感谢大家的热烈支持！</div></div>]]></content>
    
    
    
    <tags>
      
      <tag>Ansible</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>Python-总手册</title>
    <link href="/2023/09/11/python/Python-%E6%80%BB%E6%89%8B%E5%86%8C/"/>
    <url>/2023/09/11/python/Python-%E6%80%BB%E6%89%8B%E5%86%8C/</url>
    
    <content type="html"><![CDATA[<meta name="referrer" content="no-referrer"/><h1 id="Python-总手册"><a href="#Python-总手册" class="headerlink" title="Python-总手册"></a>Python-总手册</h1><ol><li><a href="https://blog.qianyios.top/2023/09/11/python/Python%E7%8E%AF%E5%A2%83%E5%87%86%E5%A4%87/">Python环境准备</a></li><li><a href="https://blog.qianyios.top/2023/09/11/python/Python%E7%A8%8B%E5%BA%8F%E6%89%8B%E5%86%8C/">Python程序手册</a></li></ol><div class="tbsm" style="margin-top:54px;"><div class="tbsm-top"><span><svg t="1674654360507" class="icon" viewBox="0 0 1024 1024" version="1.1" xmlns="http://www.w3.org/2000/svg" p-id="987" data-spm-anchor-id="a313x.7781069.0.i0" width="35" height="35"><path d="M410.49 97.74H155.08a56.74 56.74 0 0 0-56.84 56.73V410a56.84 56.84 0 0 0 56.84 56.84h255.41A56.83 56.83 0 0 0 467.32 410V154.58a56.83 56.83 0 0 0-56.83-56.84zM410.49 558.74H155.08a56.74 56.74 0 0 0-56.84 56.73V871a56.84 56.84 0 0 0 56.84 56.84h255.41A56.83 56.83 0 0 0 467.32 871V615.58a56.83 56.83 0 0 0-56.83-56.84zM871.49 558.74H616.08a56.74 56.74 0 0 0-56.84 56.73V871a56.84 56.84 0 0 0 56.84 56.84h255.41A56.83 56.83 0 0 0 928.32 871V615.58a56.83 56.83 0 0 0-56.83-56.84z" fill="#66EEFF" p-id="988"></path><path d="M410.49 558.74h-4.14A475 475 0 0 0 299.52 859.6a481.16 481.16 0 0 0 4.84 68.22h106.13A56.83 56.83 0 0 0 467.32 871V615.58a56.83 56.83 0 0 0-56.83-56.84zM871.49 558.74H616.08a56.74 56.74 0 0 0-56.84 56.73V871a56.84 56.84 0 0 0 56.84 56.84h255.41A56.83 56.83 0 0 0 928.32 871V615.58a56.83 56.83 0 0 0-56.83-56.84z" fill="#C2F8FF" p-id="989"></path></svg></span><span style="font-size:30px;"> 特别声明</span></div><div class="tbsm-wz">千屹博客旗下的所有文章，是通过本人课堂学习和课外自学所精心整理的知识巨著<br/>难免会有出错的地方<br/>如果细心的你发现了小失误，可以在下方评论区告诉我，或者私信我！<br />非常感谢大家的热烈支持！</div></div>]]></content>
    
    
    
    <tags>
      
      <tag>Python</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>Python环境准备</title>
    <link href="/2023/09/11/python/Python%E7%8E%AF%E5%A2%83%E5%87%86%E5%A4%87/"/>
    <url>/2023/09/11/python/Python%E7%8E%AF%E5%A2%83%E5%87%86%E5%A4%87/</url>
    
    <content type="html"><![CDATA[<meta name="referrer" content="no-referrer"/><h1 id="Python环境准备"><a href="#Python环境准备" class="headerlink" title="Python环境准备"></a>Python环境准备</h1><h2 id="Thonny（首推，自用！！）"><a href="#Thonny（首推，自用！！）" class="headerlink" title="Thonny（首推，自用！！）"></a>Thonny（首推，自用！！）</h2><p>Thonny 由爱沙尼亚的 Tartu 大学开发，它采用了不同的方法，因为它的调试器是专为学习和教学编程而设计的。</p><p>该软件基于python内置图形库tkinter开发，体积小巧，界面直观，支持语法着色、代码自动补全、debug等强劲功能，并具备了一个友好的IDE，为您提供了几个有用的学习工具，所有这些都打包成一个直观的GUI，能够让你更快的熟悉Python编程语言。同时，thonny内置了Python3.7，因此只需要一个简单的安装程序，您就可以学习编程了，可谓称的上是最好的自助服务教学工具。</p><p>官网地址：<a href="https://thonny.org/">Thonny，Python IDE初学者</a></p><h3 id="进入官网下载"><a href="#进入官网下载" class="headerlink" title="进入官网下载"></a>进入官网下载</h3><p><img src="https://article.biliimg.com/bfs/article/32e45ee36aabead3c1ae162dbf4dd4c9697559838.png" alt="image-20230911213459655"></p><p><img src="https://article.biliimg.com/bfs/article/b84ded3129e61ed12b60e356d34b1544697559838.png" alt="image-20230911213655489"></p><h3 id="双击运行"><a href="#双击运行" class="headerlink" title="双击运行"></a>双击运行</h3><p><img src="https://article.biliimg.com/bfs/article/bad6170fb02eeeba9ca17bcf26582536697559838.png" alt="image-20230911213731514"></p><p><img src="https://article.biliimg.com/bfs/article/78dd3745efbd89cf25db4889303c7a3f697559838.png" alt="image-20230911213742866"></p><h3 id="接受安装协议，安装"><a href="#接受安装协议，安装" class="headerlink" title="接受安装协议，安装"></a>接受安装协议，安装</h3><p><font color='red'>请选择一个不带中文的路径存放他</font></p><p>这里的c盘仅做测试</p><p><img src="https://article.biliimg.com/bfs/article/b6d7643a6b64890ceca1988233265cd1697559838.png" alt="image-20230911213952417"></p><h3 id="创建桌面图标"><a href="#创建桌面图标" class="headerlink" title="创建桌面图标"></a>创建桌面图标</h3><p><img src="https://article.biliimg.com/bfs/article/e4dc9ff536e95d7b4c7b818d2064c399697559838.png" alt="image-20230911213946121"></p><h3 id="选择中文"><a href="#选择中文" class="headerlink" title="选择中文"></a>选择中文</h3><p><img src="https://article.biliimg.com/bfs/article/0204e101727225cfc47aa09918258385697559838.png" alt="image-20230911214016041"></p><h3 id="安装成功"><a href="#安装成功" class="headerlink" title="安装成功"></a>安装成功</h3><p><img src="https://article.biliimg.com/bfs/article/faa7a6ebdcb8827851afcd243ce0a0a4697559838.png" alt="image-20230911214038572"></p><h2 id="Centos7部署Python"><a href="#Centos7部署Python" class="headerlink" title="Centos7部署Python"></a>Centos7部署Python</h2><p>在 CentOS 7.9 上安装 Python，你可以使用 yum 包管理器和 EPEL 存储库来完成。以下是安装的步骤：</p><ol><li>首先，确保你的系统已经安装了 EPEL 存储库。EPEL 是一个额外的软件源，提供了许多额外的软件包。如果你的系统尚未安装 EPEL 存储库，可以使用以下命令安装它：</li></ol><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs sql">sudo yum <span class="hljs-keyword">update</span> <span class="hljs-operator">-</span>y<br>sudo yum install epel<span class="hljs-operator">-</span><span class="hljs-keyword">release</span><br></code></pre></td></tr></table></figure><p><font color='red'>自选版本</font></p><ol start="2"><li>安装 Python 3：CentOS 7 默认使用 Python 2.7，但是你可以安装 Python 3。使用以下命令安装 Python 3：</li></ol><figure class="highlight cmake"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs cmake">sudo yum <span class="hljs-keyword">install</span> python3<br></code></pre></td></tr></table></figure><ol start="3"><li>安装 Python 2：如果你还需要安装 Python 2，可以使用以下命令安装：</li></ol><figure class="highlight cmake"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs cmake">sudo yum <span class="hljs-keyword">install</span> python2<br></code></pre></td></tr></table></figure><ol start="4"><li>验证安装：安装完成后，你可以使用以下命令验证 Python 的安装：</li></ol><figure class="highlight vim"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs vim"><span class="hljs-keyword">python3</span> --<span class="hljs-keyword">version</span><br>python2 --<span class="hljs-keyword">version</span><br></code></pre></td></tr></table></figure><p>这些命令将显示安装的 Python 版本号，确认安装成功。</p><h3 id="使用python"><a href="#使用python" class="headerlink" title="使用python"></a>使用python</h3><figure class="highlight ebnf"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs ebnf"><span class="hljs-attribute">python</span><br></code></pre></td></tr></table></figure><h2 id="Pycham"><a href="#Pycham" class="headerlink" title="Pycham"></a>Pycham</h2><p>这里不介绍安装教程，</p><p>官网地址<a href="https://www.jetbrains.com/zh-cn/pycharm/">PyCharm：JetBrains为专业开发者提供的Python IDE</a></p><p><font color='red'>返回总目录</font></p><p><a href="https://blog.qianyios.top/2023/09/11/python/Python-%E6%80%BB%E6%89%8B%E5%86%8C/">Python-总手册 - 严千屹博客 (qianyios.top)</a></p><div class="tbsm" style="margin-top:54px;"><div class="tbsm-top"><span><svg t="1674654360507" class="icon" viewBox="0 0 1024 1024" version="1.1" xmlns="http://www.w3.org/2000/svg" p-id="987" data-spm-anchor-id="a313x.7781069.0.i0" width="35" height="35"><path d="M410.49 97.74H155.08a56.74 56.74 0 0 0-56.84 56.73V410a56.84 56.84 0 0 0 56.84 56.84h255.41A56.83 56.83 0 0 0 467.32 410V154.58a56.83 56.83 0 0 0-56.83-56.84zM410.49 558.74H155.08a56.74 56.74 0 0 0-56.84 56.73V871a56.84 56.84 0 0 0 56.84 56.84h255.41A56.83 56.83 0 0 0 467.32 871V615.58a56.83 56.83 0 0 0-56.83-56.84zM871.49 558.74H616.08a56.74 56.74 0 0 0-56.84 56.73V871a56.84 56.84 0 0 0 56.84 56.84h255.41A56.83 56.83 0 0 0 928.32 871V615.58a56.83 56.83 0 0 0-56.83-56.84z" fill="#66EEFF" p-id="988"></path><path d="M410.49 558.74h-4.14A475 475 0 0 0 299.52 859.6a481.16 481.16 0 0 0 4.84 68.22h106.13A56.83 56.83 0 0 0 467.32 871V615.58a56.83 56.83 0 0 0-56.83-56.84zM871.49 558.74H616.08a56.74 56.74 0 0 0-56.84 56.73V871a56.84 56.84 0 0 0 56.84 56.84h255.41A56.83 56.83 0 0 0 928.32 871V615.58a56.83 56.83 0 0 0-56.83-56.84z" fill="#C2F8FF" p-id="989"></path></svg></span><span style="font-size:30px;"> 特别声明</span></div><div class="tbsm-wz">千屹博客旗下的所有文章，是通过本人课堂学习和课外自学所精心整理的知识巨著<br/>难免会有出错的地方<br/>如果细心的你发现了小失误，可以在下方评论区告诉我，或者私信我！<br />非常感谢大家的热烈支持！</div></div>]]></content>
    
    
    
    <tags>
      
      <tag>Python</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>Python程序手册</title>
    <link href="/2023/09/11/python/Python%E7%A8%8B%E5%BA%8F%E6%89%8B%E5%86%8C/"/>
    <url>/2023/09/11/python/Python%E7%A8%8B%E5%BA%8F%E6%89%8B%E5%86%8C/</url>
    
    <content type="html"><![CDATA[<meta name="referrer" content="no-referrer"/><h1 id="Python程序手册"><a href="#Python程序手册" class="headerlink" title="Python程序手册"></a>Python程序手册</h1><h2 id="Python程序基础"><a href="#Python程序基础" class="headerlink" title="Python程序基础"></a>Python程序基础</h2><h3 id="初识Python程序"><a href="#初识Python程序" class="headerlink" title="初识Python程序"></a>初识Python程序</h3><p>新建一个hello.py</p><p><img src="https://article.biliimg.com/bfs/article/7189b0d72f8f18fba9a2e88a134150d0697559838.png" alt="image-20230911221032751">→<img src="https://article.biliimg.com/bfs/article/604b4e1e3ffbe49db48455005d88fe77697559838.png" alt="image-20230911221044375"> </p><p>打开输入代码→运行</p><p><img src="https://article.biliimg.com/bfs/article/4db9e187a6eedc7fd016b12c68b2b04c697559838.png" alt="image-20230911220949326"></p><figure class="highlight apache"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs apache"><span class="hljs-comment">#格式</span><br><span class="hljs-attribute">print</span>(输出项<span class="hljs-number">1</span>,输出项<span class="hljs-number">2</span>,······)<br></code></pre></td></tr></table></figure><p>每个输出项可以是数值，字符串等</p><h3 id="Python程序风格"><a href="#Python程序风格" class="headerlink" title="Python程序风格"></a>Python程序风格</h3><p>一个程序往往有输入输出语句，还带有逻辑判断，现在介绍一个程序</p><p>例2.1 输入一个数，计算平方根</p><figure class="highlight routeros"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><code class="hljs routeros">import math<br><span class="hljs-attribute">s</span>=input(&quot;请输入一个数：&quot;)<br><span class="hljs-attribute">s</span>=float(s)<br><span class="hljs-keyword">if</span> s&gt;=0:<br>    <span class="hljs-attribute">s</span>=math.sqrt(s)<br>    <span class="hljs-built_in">print</span>(<span class="hljs-string">&quot;平方根是：&quot;</span>,s)<br><span class="hljs-keyword">else</span>:<br>    <span class="hljs-built_in">print</span>(<span class="hljs-string">&quot;负数不是平方根&quot;</span>)<br><span class="hljs-built_in">print</span>(<span class="hljs-string">&quot;The End&quot;</span>)<br></code></pre></td></tr></table></figure><p>在这可以很清晰看到python程序的风格，不会像c语言，需要先声明变量类型，才可以使用</p><p>如：</p><p>c语言：(可以看见没行语句，需要一个<font color='red'>分号</font>)</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs cpp"><span class="hljs-function"><span class="hljs-type">int</span> s</span><br><span class="hljs-function"><span class="hljs-title">printf</span><span class="hljs-params">(<span class="hljs-string">&quot;请输入一个数:&quot;</span>)</span></span>;<br><span class="hljs-built_in">scanf</span>(<span class="hljs-string">&quot;%d&quot;</span>,&amp;s);<br></code></pre></td></tr></table></figure><blockquote><p><font color='red'>在这显得python更加简单快捷</font></p></blockquote><p><img src="https://article.biliimg.com/bfs/article/a07a53f674ffe6d06f70bee63f29bbe2697559838.png" alt="image-20230911222208194"></p><h4 id="开始分解"><a href="#开始分解" class="headerlink" title="开始分解"></a>开始分解</h4><ol><li>输入语句</li></ol><figure class="highlight abnf"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs abnf"><span class="hljs-attribute">s</span><span class="hljs-operator">=</span>input(<span class="hljs-string">&quot;请输入一个数：&quot;</span>)<br></code></pre></td></tr></table></figure><p>此时输入4之后，会存入到s，<font color='red'>但是此时的s是个字符串，还不是数值，不能进行计算，需要转换类型</font></p><ol start="2"><li>转化类型</li></ol><figure class="highlight abnf"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs abnf"><span class="hljs-attribute">s</span><span class="hljs-operator">=</span>float(s)<br></code></pre></td></tr></table></figure><p>在这，需要将s（字符串）转化为实数，才可以计算</p><ol start="3"><li>缩进</li></ol><p>要注意缩进量，否则代码会串行</p><p><img src="https://article.biliimg.com/bfs/article/77a434e636a118a708562504eb68930e697559838.png" alt="image-20230911223018053"></p><p><font color='red'>如：</font></p><p><font color='red'>错误代码：</font></p><p><img src="https://article.biliimg.com/bfs/article/32b4c712e56dbea4b6b2f0b12b9e2b9e697559838.png" alt="image-20230911223124209"></p><p>正确显示结果：</p><p><img src="https://article.biliimg.com/bfs/article/61b3b388602f5f02993d6a8b38bf358d697559838.png" alt="image-20230911223204576"></p><p>通过之前修改代码变成else的语句之后，就没显示了，</p><p><img src="https://article.biliimg.com/bfs/article/c095eb71772e9894dde02ee10a3b7df3697559838.png" alt="image-20230911223230379"></p><p>必须输入负数之后才显示出来</p><p><img src="https://article.biliimg.com/bfs/article/547afefed8fe7a67ccae256faca570f3697559838.png" alt="image-20230911223314908"></p><p>所以要注意缩进量</p><h3 id="Python注释"><a href="#Python注释" class="headerlink" title="Python注释"></a>Python注释</h3><p>在 Python 中，注释用于在代码中添加解释、说明或提供文档。Python 支持两种类型的注释：单行注释和多行注释。</p><ol><li>单行注释：以 <code>#</code> 开头，用于在一行中添加注释。</li></ol><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-comment"># 这是一个单行注释</span><br></code></pre></td></tr></table></figure><ol start="2"><li>多行注释：用三个单引号 <code>&#39;&#39;&#39;</code> 或三个双引号 <code>&quot;&quot;&quot;</code> 包围的多行文本，用于添加多行注释。</li></ol><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-string">&#x27;&#x27;&#x27;</span><br><span class="hljs-string">这是一个多行注释。</span><br><span class="hljs-string">可以在这里添加多行的说明。</span><br><span class="hljs-string">&#x27;&#x27;&#x27;</span><br></code></pre></td></tr></table></figure><p>或者</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-string">&quot;&quot;&quot;</span><br><span class="hljs-string">这是一个多行注释。</span><br><span class="hljs-string">可以在这里添加多行的说明。</span><br><span class="hljs-string">&quot;&quot;&quot;</span><br></code></pre></td></tr></table></figure><p>注释是非常有用的工具，可以提高代码的可读性和可维护性。它们可以用于解释代码的目的、算法、参数、返回值等信息，使其他人更容易理解和使用你的代码。</p><p>请注意，注释不会被 Python 解释器执行，它们只是用于代码的解释和文档目的。在运行程序时，注释部分会被忽略。</p><h3 id="Python数据类型"><a href="#Python数据类型" class="headerlink" title="Python数据类型"></a>Python数据类型</h3><h4 id="数据类型"><a href="#数据类型" class="headerlink" title="数据类型"></a>数据类型</h4><h5 id="常量："><a href="#常量：" class="headerlink" title="常量："></a>常量：</h5><p>Python 中有许多内置的数据类型，用于存储和操作不同类型的数据。下面是 Python 的一些常见数据类型：</p><ol><li>整数（int）：用于表示整数值，例如 <code>42</code>、<code>-10</code>、<code>0</code> 等。</li><li>浮点数（float）：用于表示带有小数部分的数值，例如 <code>3.14</code>、<code>-0.5</code> 等。</li><li>字符串（str）：用于表示文本数据，由一系列字符组成，例如 <code>&quot;Hello, World!&quot;</code>、<code>&#39;Python&#39;</code> 等。</li><li>列表（list）：用于存储多个有序的元素，可以包含不同类型的数据，例如 <code>[1, 2, 3]</code>、<code>[&#39;apple&#39;, &#39;banana&#39;, &#39;cherry&#39;]</code> 等。</li></ol><h5 id="变量："><a href="#变量：" class="headerlink" title="变量："></a>变量：</h5><ol><li>变量命名规则：</li></ol><ul><li>变量名由字母、数字和下划线组成。</li><li>变量名必须以字母或下划线开头，不能以<font color='red'>数字</font>开头。</li><li>变量名区分大小写，例如 <code>count</code> 和 <code>Count</code> 是不同的变量名。</li><li>避免使用 Python 的关键字（如 <code>if</code>、<code>for</code>、<code>while</code> 等）作为变量名。</li><li>建议使用有意义的变量名，以提高代码的可读性。</li></ul><ol start="2"><li>变量赋值：</li></ol><ul><li>使用赋值运算符 <code>=</code> 将一个值赋给一个变量。</li><li>变量在首次赋值时被创建，并根据赋值的值确定其数据类型。</li><li>可以将不同类型的数据赋给同一个变量，变量的类型会随着赋值而改变。</li></ul><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs python">x = <span class="hljs-number">42</span>  <span class="hljs-comment"># 整数</span><br>y = <span class="hljs-number">3.14</span>  <span class="hljs-comment"># 浮点数</span><br>name = <span class="hljs-string">&quot;Alice&quot;</span>  <span class="hljs-comment"># 字符串</span><br></code></pre></td></tr></table></figure><ol start="3"><li>变量使用：</li></ol><ul><li>可以使用变量名来访问存储在变量中的值。</li><li>可以在表达式中使用变量，并对其进行操作。</li><li>变量的值可以随时改变，可以重新赋值给同一个变量。</li></ul><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><code class="hljs python">x = <span class="hljs-number">10</span><br>y = x + <span class="hljs-number">5</span><br><span class="hljs-built_in">print</span>(y)  <span class="hljs-comment"># 输出：15</span><br><br>x = <span class="hljs-number">20</span><br><span class="hljs-built_in">print</span>(x)  <span class="hljs-comment"># 输出：20</span><br></code></pre></td></tr></table></figure><p>变量在 Python 中是一种非常重要的概念，它们允许我们存储和操作数据。通过合理使用变量，可以使代码更灵活、可读性更好，并且可以减少重复代码。</p><h4 id="数据类型的转换"><a href="#数据类型的转换" class="headerlink" title="数据类型的转换"></a>数据类型的转换</h4><p>1.数值转换字符串</p><figure class="highlight ini"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><code class="hljs ini"><span class="hljs-attr">a</span>=<span class="hljs-number">1</span><br><span class="hljs-attr">b</span>=<span class="hljs-number">1.2</span><br><span class="hljs-attr">x</span>=str(a)<br><span class="hljs-attr">y</span>=str(b)<br><span class="hljs-comment">#此时，要是输出，他们在系统中是带引号的字符串</span><br><span class="hljs-comment">#  &quot;1&quot;,&quot;1.2&quot;</span><br></code></pre></td></tr></table></figure><p>2.字符串转换数值</p><figure class="highlight ini"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><code class="hljs ini"><span class="hljs-attr">a</span>=<span class="hljs-string">&quot;1&quot;</span><br><span class="hljs-attr">b</span>=<span class="hljs-string">&quot;1.2&quot;</span><br><span class="hljs-attr">x</span>=int(a)<br><span class="hljs-attr">y</span>=float(b)  <span class="hljs-comment">#实数（带小数）</span><br><span class="hljs-comment">#此时，要是输出，他们在系统中是数值</span><br><span class="hljs-comment">#  1,1.2</span><br></code></pre></td></tr></table></figure><p><font color='red'>错误形态：</font></p><figure class="highlight abnf"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs abnf"><span class="hljs-attribute">s</span><span class="hljs-operator">=</span><span class="hljs-string">&quot;1a&quot;</span><br><span class="hljs-attribute">a</span><span class="hljs-operator">=</span>int(s)<br></code></pre></td></tr></table></figure><p>在这种情况下，字符串 <code>&quot;1a&quot;</code> 包含了字母 <code>&quot;a&quot;</code>，因此无法将其转换为整数。如果你想要将一个合法的整数字符串转换为整数，确保字符串只包含数字字符。</p><h4 id="整数格式化输出"><a href="#整数格式化输出" class="headerlink" title="整数格式化输出"></a>整数格式化输出</h4><ol><li>使用 <code>format()</code> 方法格式化输出整数的示例：</li></ol><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs python">x = <span class="hljs-number">10</span><br>y = <span class="hljs-number">20</span><br><span class="hljs-built_in">print</span>(<span class="hljs-string">&quot;x: &#123;&#125;, y: &#123;&#125;&quot;</span>.<span class="hljs-built_in">format</span>(x, y))<br></code></pre></td></tr></table></figure><p>输出结果为：</p><figure class="highlight apache"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs apache"><span class="hljs-attribute">x</span>: <span class="hljs-number">10</span>, y: <span class="hljs-number">20</span><br></code></pre></td></tr></table></figure><p>在这个示例中，我们使用了 <code>&quot;x: &#123;&#125;, y: &#123;&#125;&quot;</code> 这个字符串作为格式化模板。在模板中的 <code>&#123;&#125;</code> 部分会被 <code>format()</code> 方法中的参数依次替换。</p><ol start="2"><li>使用 f-string。下面是使用 f-string 格式化输出整数的示例：</li></ol><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs python">x = <span class="hljs-number">10</span><br>y = <span class="hljs-number">20</span><br><span class="hljs-built_in">print</span>(<span class="hljs-string">f&quot;x: <span class="hljs-subst">&#123;x&#125;</span>, y: <span class="hljs-subst">&#123;y&#125;</span>&quot;</span>)<br></code></pre></td></tr></table></figure><p>输出结果也是：</p><figure class="highlight apache"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs apache"><span class="hljs-attribute">x</span>: <span class="hljs-number">10</span>, y: <span class="hljs-number">20</span><br></code></pre></td></tr></table></figure><p>在这个示例中，我们在字符串前面加上了 <code>f</code>，然后在字符串中使用花括号 <code>&#123;&#125;</code> 来引用变量。</p><p><img src="https://article.biliimg.com/bfs/article/f338a320016d979597580e58c1ec6bd5697559838.png" alt="image-20230911230031082"></p><ol start="3"><li>使用使用 <code>%</code> 符号进行格式化输出整数的示例：</li></ol><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs python">x = <span class="hljs-number">10</span><br>y = <span class="hljs-number">20</span><br><span class="hljs-built_in">print</span>(<span class="hljs-string">&quot;x: %d, y: %d&quot;</span> % (x, y))<br></code></pre></td></tr></table></figure><p>输出结果为：</p><figure class="highlight apache"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs apache"><span class="hljs-attribute">x</span>: <span class="hljs-number">10</span>, y: <span class="hljs-number">20</span><br></code></pre></td></tr></table></figure><p>在这个示例中，我们使用了 <code>&quot;x: %d, y: %d&quot;</code> 这个字符串作为格式化模板。<code>%d</code> 是整数的占位符。然后，我们将要格式化的整数值 <code>(x, y)</code> 作为元组传递给 <code>%</code> 运算符。</p><p>例：1.4.3.1输出年月日</p><p><img src="https://article.biliimg.com/bfs/article/4e2ef4c2bf8a31f6f4c8c5b2019fae6c697559838.png" alt="image-20230911225550413"></p><h4 id="浮点数格式化输出"><a href="#浮点数格式化输出" class="headerlink" title="浮点数格式化输出"></a>浮点数格式化输出</h4><p>使用 <code>%</code> 符号配合格式化字符串来实现。下面是一个示例代码：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs python">num = <span class="hljs-number">3.14159</span><br><span class="hljs-built_in">print</span>(<span class="hljs-string">&quot;浮点数：%.2f&quot;</span> % num)<br></code></pre></td></tr></table></figure><p>在这个示例中，<code>%.2f</code> 是浮点数的格式化字符串。<code>%</code> 符号后的 <code>.2f</code> 表示将浮点数保留两位小数进行输出。如果要保留更多或更少的小数位数，只需相应地调整数字即可。</p><p>输出结果为：</p><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs">浮点数：3.14<br></code></pre></td></tr></table></figure><p>这样就实现了将浮点数格式化输出并保留指定小数位数。</p><h3 id="Python表达式"><a href="#Python表达式" class="headerlink" title="Python表达式"></a>Python表达式</h3><table><thead><tr><th>类别</th><th>运算符</th><th>描述</th><th>实例</th></tr></thead><tbody><tr><td>算术运算符</td><td>+</td><td>加法</td><td>2 + 3 &#x3D; 5</td></tr><tr><td></td><td>-</td><td>减法</td><td>5 - 2 &#x3D; 3</td></tr><tr><td></td><td>*</td><td>乘法</td><td>2 * 3 &#x3D; 6</td></tr><tr><td></td><td>&#x2F;</td><td>除法</td><td>6 &#x2F; 2 &#x3D; 3</td></tr><tr><td></td><td>%</td><td>取模（取余数）</td><td>7 % 3 &#x3D; 1</td></tr><tr><td></td><td>**</td><td>幂运算</td><td>2 ** 3 &#x3D; 8</td></tr><tr><td></td><td>&#x2F;&#x2F;</td><td>整除（取商的整数部分）</td><td>7 &#x2F;&#x2F; 3 &#x3D; 2</td></tr><tr><td>赋值运算符</td><td>&#x3D;</td><td>赋值</td><td>x &#x3D; 5</td></tr><tr><td></td><td>+&#x3D;</td><td>加法赋值</td><td>x +&#x3D; 3 （等价于 x &#x3D; x + 3）</td></tr><tr><td></td><td>-&#x3D;</td><td>减法赋值</td><td>x -&#x3D; 2 （等价于 x &#x3D; x - 2）</td></tr><tr><td></td><td>*&#x3D;</td><td>乘法赋值</td><td>x *&#x3D; 2 （等价于 x &#x3D; x * 2）</td></tr><tr><td></td><td>&#x2F;&#x3D;</td><td>除法赋值</td><td>x &#x2F;&#x3D; 4 （等价于 x &#x3D; x &#x2F; 4）</td></tr><tr><td></td><td>%&#x3D;</td><td>取模赋值</td><td>x %&#x3D; 3 （等价于 x &#x3D; x % 3）</td></tr><tr><td>比较运算符</td><td>&#x3D;&#x3D;</td><td>等于</td><td>3 &#x3D;&#x3D; 3 （返回 True）</td></tr><tr><td></td><td>!&#x3D;</td><td>不等于</td><td>2 !&#x3D; 3 （返回 True）</td></tr><tr><td></td><td>&gt;</td><td>大于</td><td>5 &gt; 2 （返回 True）</td></tr><tr><td></td><td>&lt;</td><td>小于</td><td>2 &lt; 5 （返回 True）</td></tr><tr><td></td><td>&gt;&#x3D;</td><td>大于等于</td><td>5 &gt;&#x3D; 5 （返回 True）</td></tr><tr><td></td><td>&lt;&#x3D;</td><td>小于等于</td><td>2 &lt;&#x3D; 5 （返回 True）</td></tr><tr><td>逻辑运算符</td><td>and</td><td>与</td><td>True and False （返回 False）两者为真才为真</td></tr><tr><td></td><td>or</td><td>或</td><td>True or False （返回 True）一个为真就为真</td></tr><tr><td></td><td>not</td><td>非</td><td>not True （返回 False）</td></tr><tr><td>成员运算符</td><td>in</td><td>存在于</td><td>2 in [1, 2, 3] （返回 True）</td></tr><tr><td></td><td>not in</td><td>不存在于</td><td>4 not in [1, 2, 3] （返回 True）</td></tr><tr><td>身份运算符</td><td>is</td><td>是</td><td>x is None （返回 True，如果 x 为 None）</td></tr><tr><td></td><td>is not</td><td>不是</td><td>x is not None （返回 True，如果 x 不为 None）</td></tr></tbody></table><p><font color='red'>返回总目录</font></p><p><a href="https://blog.qianyios.top/2023/09/11/python/Python-%E6%80%BB%E6%89%8B%E5%86%8C/">Python-总手册 - 严千屹博客 (qianyios.top)</a></p><div class="tbsm" style="margin-top:54px;"><div class="tbsm-top"><span><svg t="1674654360507" class="icon" viewBox="0 0 1024 1024" version="1.1" xmlns="http://www.w3.org/2000/svg" p-id="987" data-spm-anchor-id="a313x.7781069.0.i0" width="35" height="35"><path d="M410.49 97.74H155.08a56.74 56.74 0 0 0-56.84 56.73V410a56.84 56.84 0 0 0 56.84 56.84h255.41A56.83 56.83 0 0 0 467.32 410V154.58a56.83 56.83 0 0 0-56.83-56.84zM410.49 558.74H155.08a56.74 56.74 0 0 0-56.84 56.73V871a56.84 56.84 0 0 0 56.84 56.84h255.41A56.83 56.83 0 0 0 467.32 871V615.58a56.83 56.83 0 0 0-56.83-56.84zM871.49 558.74H616.08a56.74 56.74 0 0 0-56.84 56.73V871a56.84 56.84 0 0 0 56.84 56.84h255.41A56.83 56.83 0 0 0 928.32 871V615.58a56.83 56.83 0 0 0-56.83-56.84z" fill="#66EEFF" p-id="988"></path><path d="M410.49 558.74h-4.14A475 475 0 0 0 299.52 859.6a481.16 481.16 0 0 0 4.84 68.22h106.13A56.83 56.83 0 0 0 467.32 871V615.58a56.83 56.83 0 0 0-56.83-56.84zM871.49 558.74H616.08a56.74 56.74 0 0 0-56.84 56.73V871a56.84 56.84 0 0 0 56.84 56.84h255.41A56.83 56.83 0 0 0 928.32 871V615.58a56.83 56.83 0 0 0-56.83-56.84z" fill="#C2F8FF" p-id="989"></path></svg></span><span style="font-size:30px;"> 特别声明</span></div><div class="tbsm-wz">千屹博客旗下的所有文章，是通过本人课堂学习和课外自学所精心整理的知识巨著<br/>难免会有出错的地方<br/>如果细心的你发现了小失误，可以在下方评论区告诉我，或者私信我！<br />非常感谢大家的热烈支持！</div></div>]]></content>
    
    
    
    <tags>
      
      <tag>Python</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>Ansible-配置及相关指令</title>
    <link href="/2023/09/10/ansible/Ansible-%E9%85%8D%E7%BD%AE%E5%8F%8A%E7%9B%B8%E5%85%B3%E6%8C%87%E4%BB%A4/"/>
    <url>/2023/09/10/ansible/Ansible-%E9%85%8D%E7%BD%AE%E5%8F%8A%E7%9B%B8%E5%85%B3%E6%8C%87%E4%BB%A4/</url>
    
    <content type="html"><![CDATA[<meta name="referrer" content="no-referrer"/><h1 id="Ansible配置及相关指令"><a href="#Ansible配置及相关指令" class="headerlink" title="Ansible配置及相关指令"></a>Ansible配置及相关指令</h1><h2 id="ansible-程序结构"><a href="#ansible-程序结构" class="headerlink" title="ansible 程序结构"></a>ansible 程序结构</h2><p>安装目录如下(yum安装)：<br>　　配置文件目录：&#x2F;etc&#x2F;ansible&#x2F;<br>　　执行文件目录：&#x2F;usr&#x2F;bin&#x2F;<br>　　Lib库依赖目录：&#x2F;usr&#x2F;lib&#x2F;pythonX.X&#x2F;site-packages&#x2F;ansible&#x2F;<br>　　Help文档目录：&#x2F;usr&#x2F;share&#x2F;doc&#x2F;ansible-X.X.X&#x2F;<br>　　Man文档目录：&#x2F;usr&#x2F;share&#x2F;man&#x2F;man1&#x2F;</p><h2 id="ansible配置文件查找顺序"><a href="#ansible配置文件查找顺序" class="headerlink" title="ansible配置文件查找顺序"></a>ansible配置文件查找顺序</h2><p>ansible与我们其他的服务在这一点上有很大不同，这里的配置文件查找是从多个地方找的，顺序如下：</p><ol><li><p>检查环境变量<code>ANSIBLE_CONFIG</code>指向的路径文件<br>(export ANSIBLE_CONFIG&#x3D;&#x2F;etc&#x2F;ansible.cfg)；</p></li><li><p><code>~/.ansible.cfg</code>，检查当前目录下的ansible.cfg配置文件；</p></li><li><p><code>/etc/ansible.cfg</code>检查etc目录的配置文件。</p></li></ol><h2 id="ansible配置文件"><a href="#ansible配置文件" class="headerlink" title="ansible配置文件"></a>ansible配置文件</h2><p>　ansible 的配置文件为<code>/etc/ansible/ansible.cfg</code>，ansible 有许多参数，下面我们列出一些常见的参数：</p><figure class="highlight clean"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><code class="hljs clean">[defaults]<br> <br>#inventory      = /etc/ansible/hosts   <span class="hljs-comment">//定义Inventory</span><br>#library        = /usr/share/my_modules/  <span class="hljs-comment">//自定义lib库存放目录 </span><br>#remote_tmp     = ~/.ansible/tmp       <span class="hljs-comment">//零时文件远程主机存放目录</span><br>#local_tmp      = ~/.ansible/tmp       <span class="hljs-comment">//零时文件本地存放目录</span><br>#forks          = <span class="hljs-number">5</span>                    <span class="hljs-comment">//默认开启的并发数</span><br>#poll_interval  = <span class="hljs-number">15</span>                   <span class="hljs-comment">//默认轮询时间间隔</span><br>#sudo_user      = root                 <span class="hljs-comment">//默认sudo用户</span><br>#ask_sudo_pass = <span class="hljs-literal">True</span>                  <span class="hljs-comment">//是否需要sudo密码</span><br>#ask_pass      = <span class="hljs-literal">True</span>                  <span class="hljs-comment">//是否需要密码</span><br>#host_key_checking = <span class="hljs-literal">False</span>             <span class="hljs-comment">//首次连接是否检查key认证</span><br>#roles_path    = /etc/ansible/roles    <span class="hljs-comment">//默认下载的Roles存放的目录</span><br>#log_path = /var/log/ansible.log       <span class="hljs-comment">//执行日志存放目录</span><br>#module_name = command                 <span class="hljs-comment">//默认执行的模块</span><br>#action_plugins     = /usr/share/ansible/plugins/action <span class="hljs-comment">//action插件存放目录</span><br>#callback_plugins   = /usr/share/ansible/plugins/callback <span class="hljs-comment">//callback插件存放目录</span><br>#connection_plugins = /usr/share/ansible/plugins/connection  <span class="hljs-comment">//connection插件存放目录</span><br>#lookup_plugins     = /usr/share/ansible/plugins/lookup <span class="hljs-comment">//lookup插件存放目录</span><br>#vars_plugins       = /usr/share/ansible/plugins/vars <span class="hljs-comment">//vars插件存放目录</span><br>#filter_plugins     = /usr/share/ansible/plugins/filter <span class="hljs-comment">//filter插件存放目录</span><br>#test_plugins       = /usr/share/ansible/plugins/test <span class="hljs-comment">//test插件存放目录</span><br>#strategy_plugins   = /usr/share/ansible/plugins/strategy <span class="hljs-comment">//strategy插件存放目录</span><br>#fact_caching = memory                 <span class="hljs-comment">//getfact缓存的主机信息存放方式</span><br>#retry_files_enabled = <span class="hljs-literal">False</span>              <br>#retry_files_save_path = ~/.ansible-retry  <span class="hljs-comment">//错误重启文件存放目录</span><br></code></pre></td></tr></table></figure><h3 id="配置文件的分类与优先级"><a href="#配置文件的分类与优先级" class="headerlink" title="配置文件的分类与优先级"></a>配置文件的分类与优先级</h3><p>Ansible只有一个配置文件ansible.cfg，但配置文件可以存在不同的位置，并且只有一个可用 (数字代表优先级，数字越小代表优先级越高) :</p><p><img src="https://article.biliimg.com/bfs/article/e56642ff2d99d978db82f447b27e72b2697559838.png" alt="image-20230912232830688"></p><h3 id="配置文件选项"><a href="#配置文件选项" class="headerlink" title="配置文件选项"></a>配置文件选项</h3><p><img src="https://article.biliimg.com/bfs/article/1caa77a3e3811cb839d4591eed9f7faa697559838.png" alt="image-20230912232950364"></p><p><img src="https://article.biliimg.com/bfs/article/405640ff681abfffad5f0a35d376f2f9697559838.png" alt="image-20230912233003740"></p><p><img src="https://article.biliimg.com/bfs/article/65a7c9973b0c73a385c40db18deaad8c697559838.png" alt="image-20230912233019308"></p><p>官网配置参考网址</p><p><a href="https://docs.ansible.com/ansible/2.9/reference_appendices/config.html">Ansible Configuration Settings — Ansible Documentation</a></p><p><img src="https://article.biliimg.com/bfs/article/817aefcd2a3079335b357633045f505b697559838.png" alt="image-20230912233124916"></p><h2 id="ansuble主机清单"><a href="#ansuble主机清单" class="headerlink" title="ansuble主机清单"></a>ansuble主机清单</h2><figure class="highlight clean"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><code class="hljs clean"><span class="hljs-number">1</span>、 定义单独主机：<br>## green.example.com#<br># blue.example.com#<br># <span class="hljs-number">192.168</span><span class="hljs-number">.100</span><span class="hljs-number">.1</span><br># <span class="hljs-number">192.168</span><span class="hljs-number">.100</span><span class="hljs-number">.10</span><br><span class="hljs-number">2</span>、 定义一个主机组[组名]把地址或主机名加进去<br>[mysql_test]<br><span class="hljs-number">192.168</span><span class="hljs-number">.253</span><span class="hljs-number">.159</span><br><span class="hljs-number">192.168</span><span class="hljs-number">.253</span><span class="hljs-number">.160</span><br><span class="hljs-number">192.168</span><span class="hljs-number">.253</span><span class="hljs-number">.153</span><br></code></pre></td></tr></table></figure><p>需要注意的是，这里的<code>组成员可以使用通配符来匹配</code>，这样对于一些标准化的管理来说就很轻松方便了。<br>　　我们可以根据实际情况来配置我们的主机列表，具体操作如下：</p><figure class="highlight csharp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs csharp">[<span class="hljs-meta">root@server ~</span>]<span class="hljs-meta"># vim /etc/ansible/hosts</span><br>[<span class="hljs-meta">web</span>]<br><span class="hljs-number">192.168</span><span class="hljs-number">.37</span><span class="hljs-number">.122</span><br><span class="hljs-number">192.168</span><span class="hljs-number">.37</span><span class="hljs-number">.133</span><br></code></pre></td></tr></table></figure><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><code class="hljs css"><span class="hljs-number">3</span>、 定义嵌套组<br>    <span class="hljs-selector-attr">[web-mysql]</span><br>       mysql_test<br>       web<br><span class="hljs-number">4</span>、 定义范围化ip<br>    <span class="hljs-number">172.16</span>.<span class="hljs-selector-attr">[0:4]</span>.<span class="hljs-selector-attr">[2:254]</span>  <br></code></pre></td></tr></table></figure><h2 id="ansible-常用命令"><a href="#ansible-常用命令" class="headerlink" title="ansible 常用命令"></a>ansible 常用命令</h2><blockquote><p><code>/usr/bin/ansible</code>　　Ansibe AD-Hoc 临时命令执行工具，常用于临时命令的执行<br><code>/usr/bin/ansible-doc</code> 　Ansible 模块功能查看工具<br><code>/usr/bin/ansible-galaxy</code>　　下载&#x2F;上传优秀代码或Roles模块 的官网平台，基于网络的<br><code>/usr/bin/ansible-playbook</code>　　Ansible 定制自动化的任务集编排工具<br><code>/usr/bin/ansible-pull</code>　　Ansible远程执行命令的工具，拉取配置而非推送配置（使用较少，海量机器时使用，对运维的架构能力要求较高）<br><code>/usr/bin/ansible-vault</code>　　Ansible 文件加密工具<br><code>/usr/bin/ansible-console</code>　　Ansible基于Linux Consoble界面可与用户交互的命令执行工具</p></blockquote><p>　　其中，我们比较常用的是<code>/usr/bin/ansible</code>和<code>/usr/bin/ansible-playbook</code>。</p><h3 id="ansible-命令详解"><a href="#ansible-命令详解" class="headerlink" title="ansible 命令详解"></a>ansible 命令详解</h3><p>命令的具体格式如下：</p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs css">ansible &lt;host-pattern&gt; <span class="hljs-selector-attr">[-f forks]</span> <span class="hljs-selector-attr">[-m module_name]</span> <span class="hljs-selector-attr">[-a args]</span><br></code></pre></td></tr></table></figure><p>　　也可以通过<code>ansible -h</code>来查看帮助，下面我们列出一些比较常用的选项，并解释其含义：</p><blockquote><p><code>-a MODULE_ARGS</code>　　　#模块的参数，如果执行默认COMMAND的模块，即是命令参数，如： “date”，“pwd”等等<br><code>-k</code>，<code>--ask-pass</code> #ask for SSH password。登录密码，提示输入SSH密码而不是假设基于密钥的验证<br><code>--ask-su-pass</code> #ask for su password。su切换密码<br><code>-K</code>，<code>--ask-sudo-pass</code> #ask for sudo password。提示密码使用sudo，sudo表示提权操作<br><code>--ask-vault-pass</code> #ask for vault password。假设我们设定了加密的密码，则用该选项进行访问<br><code>-B SECONDS</code> #后台运行超时时间<br><code>-C</code> #模拟运行环境并进行预运行，可以进行查错测试<br><code>-c CONNECTION</code> #连接类型使用<br><code>-f FORKS</code> #并行任务数，默认为5<br><code>-i INVENTORY</code> #指定主机清单的路径，默认为<code>/etc/ansible/hosts</code><br><code>--list-hosts</code> #查看有哪些主机组<br><code>-m MODULE_NAME</code> #执行模块的名字，默认使用 command 模块，所以如果是只执行单一命令可以不用 -m参数<br><code>-o</code> #压缩输出，尝试将所有结果在一行输出，一般针对收集工具使用<br><code>-S</code> #用 su 命令<br><code>-R SU_USER</code> #指定 su 的用户，默认为 root 用户<br><code>-s</code> #用 sudo 命令<br><code>-U SUDO_USER</code> #指定 sudo 到哪个用户，默认为 root 用户<br><code>-T TIMEOUT</code> #指定 ssh 默认超时时间，默认为10s，也可在配置文件中修改<br><code>-u REMOTE_USER</code> #远程用户，默认为 root 用户<br><code>-v</code> #查看详细信息，同时支持<code>-vvv</code>，<code>-vvvv</code>可查看更详细信息</p></blockquote><h2 id="ansible-配置公私钥"><a href="#ansible-配置公私钥" class="headerlink" title="ansible 配置公私钥"></a>ansible 配置公私钥</h2><p>　　上面我们已经提到过 ansible 是基于 ssh 协议实现的，所以其配置公私钥的方式与 ssh 协议的方式相同，具体操作步骤如下：</p><figure class="highlight csharp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs csharp"><span class="hljs-meta">#1.生成私钥</span><br>[<span class="hljs-meta">root@server ~</span>]<span class="hljs-meta"># ssh-keygen </span><br><span class="hljs-meta">#2.向主机分发私钥</span><br>[<span class="hljs-meta">root@server ~</span>]<span class="hljs-meta"># ssh-copy-id root@192.168.48.101</span><br>[<span class="hljs-meta">root@server ~</span>]<span class="hljs-meta"># ssh-copy-id root@192.168.48.102</span><br></code></pre></td></tr></table></figure><p><code>192.168.48.101为node01的ip地址</code></p><p>这样的话，就可以实现无密码登录，我们的实验过程也会顺畅很多。<br>　　注意，如果出现了一下报错：</p><figure class="highlight dockerfile"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs dockerfile">-bash: ssh-<span class="hljs-keyword">copy</span><span class="language-bash">-<span class="hljs-built_in">id</span>: <span class="hljs-built_in">command</span> not found</span><br></code></pre></td></tr></table></figure><p>　　那么就证明我们需要安装一个包：</p><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs markdown">yum -y install openssh<br></code></pre></td></tr></table></figure><p>　　把包安装上即可。</p><p>注意：先ssh 192.168.48.101和ssh 192.168.48.102各节点，生成缓存信息，才能进行<code>主机连通性测试</code></p><h2 id="ansible-常用模块"><a href="#ansible-常用模块" class="headerlink" title="ansible 常用模块"></a>ansible 常用模块</h2><h3 id="主机连通性测试"><a href="#主机连通性测试" class="headerlink" title="主机连通性测试"></a>主机连通性测试</h3><p>　　我们使用<code>ansible web -m ping</code>命令来进行主机连通性测试，效果如下：</p><figure class="highlight ruby"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><code class="hljs ruby">[root<span class="hljs-variable">@server</span> ~]<span class="hljs-comment"># ansible web -m ping</span><br><span class="hljs-meta prompt_">192.168.48.101 | SUCCESS =&gt;</span> &#123;<br>    <span class="hljs-string">&quot;changed&quot;</span>: <span class="hljs-literal">false</span>, <br>    <span class="hljs-string">&quot;ping&quot;</span>: <span class="hljs-string">&quot;pong&quot;</span><br>&#125;<br><span class="hljs-meta prompt_">192.168.48.102 | SUCCESS =&gt;</span> &#123;<br>    <span class="hljs-string">&quot;changed&quot;</span>: <span class="hljs-literal">false</span>, <br>    <span class="hljs-string">&quot;ping&quot;</span>: <span class="hljs-string">&quot;pong&quot;</span><br>&#125;<br></code></pre></td></tr></table></figure><p>　　这样就说明我们的主机是连通状态的。接下来的操作才可以正常进行。</p><p><code>可以返回目录！</code></p><p><a href="https://blog.qianyios.top/2023/09/10/ansible/Ansible-%E6%80%BB%E6%89%8B%E5%86%8C/">Ansible练习目录 - 严千屹博客 (qianyios.top)</a></p><div class="tbsm" style="margin-top:54px;"><div class="tbsm-top"><span><svg t="1674654360507" class="icon" viewBox="0 0 1024 1024" version="1.1" xmlns="http://www.w3.org/2000/svg" p-id="987" data-spm-anchor-id="a313x.7781069.0.i0" width="35" height="35"><path d="M410.49 97.74H155.08a56.74 56.74 0 0 0-56.84 56.73V410a56.84 56.84 0 0 0 56.84 56.84h255.41A56.83 56.83 0 0 0 467.32 410V154.58a56.83 56.83 0 0 0-56.83-56.84zM410.49 558.74H155.08a56.74 56.74 0 0 0-56.84 56.73V871a56.84 56.84 0 0 0 56.84 56.84h255.41A56.83 56.83 0 0 0 467.32 871V615.58a56.83 56.83 0 0 0-56.83-56.84zM871.49 558.74H616.08a56.74 56.74 0 0 0-56.84 56.73V871a56.84 56.84 0 0 0 56.84 56.84h255.41A56.83 56.83 0 0 0 928.32 871V615.58a56.83 56.83 0 0 0-56.83-56.84z" fill="#66EEFF" p-id="988"></path><path d="M410.49 558.74h-4.14A475 475 0 0 0 299.52 859.6a481.16 481.16 0 0 0 4.84 68.22h106.13A56.83 56.83 0 0 0 467.32 871V615.58a56.83 56.83 0 0 0-56.83-56.84zM871.49 558.74H616.08a56.74 56.74 0 0 0-56.84 56.73V871a56.84 56.84 0 0 0 56.84 56.84h255.41A56.83 56.83 0 0 0 928.32 871V615.58a56.83 56.83 0 0 0-56.83-56.84z" fill="#C2F8FF" p-id="989"></path></svg></span><span style="font-size:30px;"> 特别声明</span></div><div class="tbsm-wz">千屹博客旗下的所有文章，是通过本人课堂学习和课外自学所精心整理的知识巨著<br/>难免会有出错的地方<br/>如果细心的你发现了小失误，可以在下方评论区告诉我，或者私信我！<br />非常感谢大家的热烈支持！</div></div>]]></content>
    
    
    
    <tags>
      
      <tag>Centos 7</tag>
      
      <tag>Ansible</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>Ansible-总手册</title>
    <link href="/2023/09/10/ansible/Ansible-%E6%80%BB%E6%89%8B%E5%86%8C/"/>
    <url>/2023/09/10/ansible/Ansible-%E6%80%BB%E6%89%8B%E5%86%8C/</url>
    
    <content type="html"><![CDATA[<meta name="referrer" content="no-referrer"/><h1 id="Ansible-总手册"><a href="#Ansible-总手册" class="headerlink" title="Ansible-总手册"></a>Ansible-总手册</h1><ol><li><a href="https://blog.qianyios.top/2023/09/09/ansible/Ansible-3%E6%9C%BA%E9%83%A8%E7%BD%B2/">Ansible三机部署</a></li><li><a href="https://blog.qianyios.top/2023/09/10/ansible/Ansible-%E9%85%8D%E7%BD%AE%E5%8F%8A%E7%9B%B8%E5%85%B3%E6%8C%87%E4%BB%A4/">Ansible配置及相关指令</a></li><li><a href="https://blog.qianyios.top/2023/09/10/ansible/%E7%94%A8%E6%88%B7%E7%BA%A7ansible%E7%8E%AF%E5%A2%83%E6%9E%84%E5%BB%BA/">用户级ansible环境构建（小练习）</a></li><li><a href="https://blog.qianyios.top/2023/09/20/ansible/Ansible-%E5%B8%B8%E7%94%A8%E6%A8%A1%E5%9D%97/">Ansible-常用模块</a></li><li><a href="https://blog.qianyios.top/2023/10/02/ansible/Ansible-playblock/">Ansible-playblock</a></li><li><a href="https://blog.qianyios.top/2023/11/13/ansible/Ansible-templates/">Ansible-templates</a></li><li><a href="https://blog.qianyios.top/2023/11/13/ansible/Ansible-Roles/">Ansible-Roles</a></li></ol><div class="tbsm" style="margin-top:54px;"><div class="tbsm-top"><span><svg t="1674654360507" class="icon" viewBox="0 0 1024 1024" version="1.1" xmlns="http://www.w3.org/2000/svg" p-id="987" data-spm-anchor-id="a313x.7781069.0.i0" width="35" height="35"><path d="M410.49 97.74H155.08a56.74 56.74 0 0 0-56.84 56.73V410a56.84 56.84 0 0 0 56.84 56.84h255.41A56.83 56.83 0 0 0 467.32 410V154.58a56.83 56.83 0 0 0-56.83-56.84zM410.49 558.74H155.08a56.74 56.74 0 0 0-56.84 56.73V871a56.84 56.84 0 0 0 56.84 56.84h255.41A56.83 56.83 0 0 0 467.32 871V615.58a56.83 56.83 0 0 0-56.83-56.84zM871.49 558.74H616.08a56.74 56.74 0 0 0-56.84 56.73V871a56.84 56.84 0 0 0 56.84 56.84h255.41A56.83 56.83 0 0 0 928.32 871V615.58a56.83 56.83 0 0 0-56.83-56.84z" fill="#66EEFF" p-id="988"></path><path d="M410.49 558.74h-4.14A475 475 0 0 0 299.52 859.6a481.16 481.16 0 0 0 4.84 68.22h106.13A56.83 56.83 0 0 0 467.32 871V615.58a56.83 56.83 0 0 0-56.83-56.84zM871.49 558.74H616.08a56.74 56.74 0 0 0-56.84 56.73V871a56.84 56.84 0 0 0 56.84 56.84h255.41A56.83 56.83 0 0 0 928.32 871V615.58a56.83 56.83 0 0 0-56.83-56.84z" fill="#C2F8FF" p-id="989"></path></svg></span><span style="font-size:30px;"> 特别声明</span></div><div class="tbsm-wz">千屹博客旗下的所有文章，是通过本人课堂学习和课外自学所精心整理的知识巨著<br/>难免会有出错的地方<br/>如果细心的你发现了小失误，可以在下方评论区告诉我，或者私信我！<br />非常感谢大家的热烈支持！</div></div>]]></content>
    
    
    
    <tags>
      
      <tag>Centos 7</tag>
      
      <tag>Ansible</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>用户级ansible环境构建</title>
    <link href="/2023/09/10/ansible/%E7%94%A8%E6%88%B7%E7%BA%A7ansible%E7%8E%AF%E5%A2%83%E6%9E%84%E5%BB%BA/"/>
    <url>/2023/09/10/ansible/%E7%94%A8%E6%88%B7%E7%BA%A7ansible%E7%8E%AF%E5%A2%83%E6%9E%84%E5%BB%BA/</url>
    
    <content type="html"><![CDATA[<meta name="referrer" content="no-referrer"/><h1 id="用户级ansible环境构建"><a href="#用户级ansible环境构建" class="headerlink" title="用户级ansible环境构建"></a>用户级ansible环境构建</h1><h2 id="主机分布"><a href="#主机分布" class="headerlink" title="主机分布"></a>主机分布</h2><table><thead><tr><th>主机名</th><th>ip</th><th>系统</th><th>内存</th><th>硬盘</th></tr></thead><tbody><tr><td>controller</td><td>192.168.48.100</td><td>Centos7.9</td><td>4G</td><td>100G</td></tr><tr><td>node01</td><td>192.168.48.101</td><td>Centos7.9</td><td>4G</td><td>100G</td></tr><tr><td>node02</td><td>192.168.48.102</td><td>Centos7.9</td><td>4G</td><td>100G</td></tr></tbody></table><h2 id="创建student用户"><a href="#创建student用户" class="headerlink" title="创建student用户"></a>创建student用户</h2><p><font color='red'>三台机创建student用户</font></p><figure class="highlight nginx"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs nginx"><span class="hljs-comment">#创建student用户</span><br><span class="hljs-attribute">useradd</span> student<br>passwd student<br><span class="hljs-number">123456</span><br></code></pre></td></tr></table></figure><h2 id="controller创建student用户工作目录"><a href="#controller创建student用户工作目录" class="headerlink" title="controller创建student用户工作目录"></a>controller创建student用户工作目录</h2><figure class="highlight accesslog"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><code class="hljs accesslog">#切换student用户，创建工作目录，新建ansible.cfg配置文件，验证配置文件生效。<br>su student<br>cd <br>#创建资产清单 <br>mkdir ansible<br>cat &gt;&gt; /home/student/ansible/inventory &lt;&lt;EOF<br><span class="hljs-string">[servers]</span><br><span class="hljs-number">192.168.48.101</span><br><span class="hljs-number">192.168.48.102</span><br>EOF<br></code></pre></td></tr></table></figure><h2 id="controller编辑配置文件ansible-cfg"><a href="#controller编辑配置文件ansible-cfg" class="headerlink" title="controller编辑配置文件ansible.cfg"></a>controller编辑配置文件ansible.cfg</h2><figure class="highlight awk"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><code class="hljs awk">cd ansible<br>cat &gt;&gt; <span class="hljs-regexp">/home/</span>student<span class="hljs-regexp">/ansible/</span>ansible.cfg &lt;&lt;EOF<br>[defaults]<br>inventory=<span class="hljs-regexp">/home/</span>student<span class="hljs-regexp">/ansible/i</span>nventory<br>remote_port=<span class="hljs-number">22</span><br>remote_user=root<br><span class="hljs-comment">#指定远程用户为root</span><br>ask_pass=True<br>EOF<br></code></pre></td></tr></table></figure><h2 id="验证清单主机存活（指定root）"><a href="#验证清单主机存活（指定root）" class="headerlink" title="验证清单主机存活（指定root）"></a>验证清单主机存活（指定root）</h2><p>验证清单主机存活 ,执行命令进行测试，可以看到在每次执行ansible时都会询问连接用户的密码（相 当于-K参数）</p><figure class="highlight nginx"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><code class="hljs nginx"><span class="hljs-attribute">ansible</span> all --list<br><br>[student<span class="hljs-variable">@controller</span> ansible]$ ansible all --list<br>SSH password:<br>  hosts (<span class="hljs-number">2</span>):<br>    <span class="hljs-number">192.168.48.101</span><br>    <span class="hljs-number">192.168.48.102</span><br>[student<span class="hljs-variable">@controller</span> ansible]$<br><span class="hljs-comment">#成功</span><br></code></pre></td></tr></table></figure><p>如果不想输入密码，那需要修改配置文件：</p><figure class="highlight gradle"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs gradle">vi <span class="hljs-regexp">/home/</span>student<span class="hljs-regexp">/ansible/</span>ansible.cfg<br>······<br>ask_pass=<span class="hljs-keyword">False</span><br></code></pre></td></tr></table></figure><p><img src="https://article.biliimg.com/bfs/article/078e656a1212868cf2558503bc008750697559838.png" alt="image-20230912224807001"></p><figure class="highlight crystal"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><code class="hljs crystal">[student<span class="hljs-variable">@controller</span> ansible]<span class="hljs-variable">$ </span>ansible all --list<br>  hosts (<span class="hljs-number">2</span>):<br>    <span class="hljs-number">192.168</span>.<span class="hljs-number">48.101</span><br>    <span class="hljs-number">192.168</span>.<span class="hljs-number">48.102</span><br>[student<span class="hljs-variable">@controller</span> ansible]<span class="hljs-variable">$</span><br><span class="hljs-variable"></span><span class="hljs-comment">#无输入密码选项</span><br></code></pre></td></tr></table></figure><h2 id="实例（指定student）"><a href="#实例（指定student）" class="headerlink" title="实例（指定student）"></a>实例（指定student）</h2><p><font color='red'>远程用户指定为普通用户（student）</font></p><figure class="highlight routeros"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><code class="hljs routeros">[student@controller ansible]$ vim ansible.cfg<br>[defaults]<br><span class="hljs-attribute">inventory</span>=/home/student/ansible/inventory<br><span class="hljs-attribute">remote_port</span>=22<br><span class="hljs-attribute">remote_user</span>=student<br><span class="hljs-comment">#指定远程用户为student</span><br><span class="hljs-attribute">ask_pass</span>=<span class="hljs-literal">False</span><br></code></pre></td></tr></table></figure><p>这时候执行ping会报错</p><figure class="highlight ada"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs ada">ansible <span class="hljs-keyword">all</span> -m ping<br></code></pre></td></tr></table></figure><p><img src="https://article.biliimg.com/bfs/article/28ee578b57e47ba5759f361b65135825697559838.png" alt="image-20230912225310702"></p><p><img src="https://article.biliimg.com/bfs/article/7332ff1f5cff36f0e06a8a5a65d2366d697559838.png" alt="image-20230912225331509"></p><p>这时候我们要配置免密登入（这里的密钥是student用户的，和root不一样，不会覆盖root用户的，这是在student用户下执行的命令）</p><figure class="highlight crystal"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><code class="hljs crystal">[student<span class="hljs-variable">@controller</span> ansible]<span class="hljs-variable">$ </span>ssh-keygen<br><span class="hljs-comment">#回车三次</span><br>[student<span class="hljs-variable">@controller</span> ansible]<span class="hljs-variable">$ </span>ssh-copy-id student<span class="hljs-variable">@192</span>.<span class="hljs-number">168.48</span>.<span class="hljs-number">101</span><br><span class="hljs-comment">#输入yes和node1的root密码</span><br><br>[student<span class="hljs-variable">@controller</span> ansible]<span class="hljs-variable">$ </span>ssh-copy-id student<span class="hljs-variable">@192</span>.<span class="hljs-number">168.48</span>.<span class="hljs-number">102</span><br><span class="hljs-comment">#输入yes和node2的root密码</span><br></code></pre></td></tr></table></figure><p>这是执行ping命令</p><figure class="highlight ada"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs ada">ansible <span class="hljs-keyword">all</span> -m ping<br></code></pre></td></tr></table></figure><p><img src="https://article.biliimg.com/bfs/article/be8f85cca8ab5a032ca7a338f5863db7697559838.png" alt="image-20230912230245638"></p><h2 id="测试提取文件"><a href="#测试提取文件" class="headerlink" title="测试提取文件"></a>测试提取文件</h2><p>这个普通用户（student）并不能执行所有的操作，比如ansible以student身份登录，执行（ls &#x2F;root）发普通用户没有权限，</p><figure class="highlight livecodeserver"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs livecodeserver">ansible all -m <span class="hljs-built_in">shell</span> -<span class="hljs-keyword">a</span> <span class="hljs-string">&quot;ls /root&quot;</span><br></code></pre></td></tr></table></figure><p><img src="https://article.biliimg.com/bfs/article/fda33ba9ba24b6eff20145a8a6633f2f697559838.png" alt="image-20230912230504092"></p><p>解决这个问题就需要提权：sudo 提权</p><p>在受控主机(<font color='red'>node01、node02</font>)上执行visudo（配置 &#x2F;etc&#x2F;sudoers）</p><p><font color='red'>node01机子</font></p><figure class="highlight autoit"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs autoit">[root<span class="hljs-symbol">@node01</span> ~]<span class="hljs-meta"># visudo</span><br></code></pre></td></tr></table></figure><p><img src="https://article.biliimg.com/bfs/article/c65cdae768fa51ef1dcbb4179f2c0a48697559838.png" alt="image-20230912230747742"></p><p><font color='red'>node02机子</font></p><figure class="highlight autoit"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs autoit">[root<span class="hljs-symbol">@node02</span> ~]<span class="hljs-meta"># visudo</span><br></code></pre></td></tr></table></figure><p><img src="https://article.biliimg.com/bfs/article/3dbea315c2c6367c054b256fdd1ea0a7697559838.png" alt="image-20230912230906568"></p><p>或者(<font color='red'>node01和node02执行以下指令</font>)</p><figure class="highlight arcade"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs arcade">cat &gt;&gt;<span class="hljs-regexp">/etc/</span>sudoers.d/student &lt;&lt; EOF <br>student          <span class="hljs-built_in">ALL</span>=(<span class="hljs-built_in">ALL</span>)        NOPASSWD: <span class="hljs-built_in">ALL</span><br>EOF<br></code></pre></td></tr></table></figure><p>在<font color='red'>控制主机（controller）</font>上(<font color='red'>student用户</font>)修改ansible.cfg配置文件提权</p><figure class="highlight routeros"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><code class="hljs routeros">[student@controller ansible]$ vim ansible.cfg<br>[defaults]<br><span class="hljs-attribute">inventory</span>=/home/student/ansible/inventory<br><span class="hljs-attribute">remote_port</span>=22<br><span class="hljs-attribute">remote_user</span>=student<br><span class="hljs-attribute">ask_pass</span>=<span class="hljs-literal">False</span><br>[privilege_escalation]<br><span class="hljs-attribute">become</span>=<span class="hljs-literal">True</span><br><span class="hljs-attribute">become_method</span>=sudo<br><span class="hljs-attribute">become_user</span>=root<br><span class="hljs-attribute">become_ask_pass</span>=<span class="hljs-literal">False</span><br></code></pre></td></tr></table></figure><p><img src="https://article.biliimg.com/bfs/article/7aa7d702174433ee95dc0bbd841bb97a697559838.png" alt="image-20230912231556770"></p><p>验证</p><figure class="highlight livecodeserver"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs livecodeserver">ansible all -m <span class="hljs-built_in">shell</span> -<span class="hljs-keyword">a</span> <span class="hljs-string">&quot;ls /root&quot;</span><br></code></pre></td></tr></table></figure><p><img src="https://article.biliimg.com/bfs/article/a7663ce56cb12f95c5e07da8d28eb4d3697559838.png" alt="image-20230912231635877"></p><p><font color='red'>#在控制节点的student经过sudo提权之后可以读取&#x2F;root目录了</font></p><p><code>可以返回目录！</code></p><p><a href="https://blog.qianyios.top/2023/09/10/ansible/Ansible-%E6%80%BB%E6%89%8B%E5%86%8C/">Ansible练习目录 - 严千屹博客 (qianyios.top)</a></p><div class="tbsm" style="margin-top:54px;"><div class="tbsm-top"><span><svg t="1674654360507" class="icon" viewBox="0 0 1024 1024" version="1.1" xmlns="http://www.w3.org/2000/svg" p-id="987" data-spm-anchor-id="a313x.7781069.0.i0" width="35" height="35"><path d="M410.49 97.74H155.08a56.74 56.74 0 0 0-56.84 56.73V410a56.84 56.84 0 0 0 56.84 56.84h255.41A56.83 56.83 0 0 0 467.32 410V154.58a56.83 56.83 0 0 0-56.83-56.84zM410.49 558.74H155.08a56.74 56.74 0 0 0-56.84 56.73V871a56.84 56.84 0 0 0 56.84 56.84h255.41A56.83 56.83 0 0 0 467.32 871V615.58a56.83 56.83 0 0 0-56.83-56.84zM871.49 558.74H616.08a56.74 56.74 0 0 0-56.84 56.73V871a56.84 56.84 0 0 0 56.84 56.84h255.41A56.83 56.83 0 0 0 928.32 871V615.58a56.83 56.83 0 0 0-56.83-56.84z" fill="#66EEFF" p-id="988"></path><path d="M410.49 558.74h-4.14A475 475 0 0 0 299.52 859.6a481.16 481.16 0 0 0 4.84 68.22h106.13A56.83 56.83 0 0 0 467.32 871V615.58a56.83 56.83 0 0 0-56.83-56.84zM871.49 558.74H616.08a56.74 56.74 0 0 0-56.84 56.73V871a56.84 56.84 0 0 0 56.84 56.84h255.41A56.83 56.83 0 0 0 928.32 871V615.58a56.83 56.83 0 0 0-56.83-56.84z" fill="#C2F8FF" p-id="989"></path></svg></span><span style="font-size:30px;"> 特别声明</span></div><div class="tbsm-wz">千屹博客旗下的所有文章，是通过本人课堂学习和课外自学所精心整理的知识巨著<br/>难免会有出错的地方<br/>如果细心的你发现了小失误，可以在下方评论区告诉我，或者私信我！<br />非常感谢大家的热烈支持！</div></div>]]></content>
    
    
    
    <tags>
      
      <tag>Centos 7</tag>
      
      <tag>Ansible</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>Ansible三机部署</title>
    <link href="/2023/09/09/ansible/Ansible-3%E6%9C%BA%E9%83%A8%E7%BD%B2/"/>
    <url>/2023/09/09/ansible/Ansible-3%E6%9C%BA%E9%83%A8%E7%BD%B2/</url>
    
    <content type="html"><![CDATA[<meta name="referrer" content="no-referrer"/><h1 id="Ansible三机部署"><a href="#Ansible三机部署" class="headerlink" title="Ansible三机部署"></a>Ansible三机部署</h1><h2 id="关于"><a href="#关于" class="headerlink" title="关于"></a>关于</h2><p>　ansible是新出现的自动化运维工具，基于Python开发，集合了众多运维工具（puppet、chef、func、fabric）的优点，实现了批量系统配置、批量程序部署、批量运行命令等功能。<br>　　ansible是基于 paramiko 开发的,并且基于模块化工作，本身没有批量部署的能力。真正具有批量部署的是ansible所运行的模块，ansible只是提供一种框架。ansible不需要在远程主机上安装client&#x2F;agents，因为它们是基于ssh来和远<br>程主机通讯的。ansible目前已经已经被红帽官方收购，是自动化运维工具中大家认可度最高的，并且上手容易，学习简单。是每位运维工程师必须掌握的技能之一。</p><h2 id="主机分布"><a href="#主机分布" class="headerlink" title="主机分布"></a>主机分布</h2><table><thead><tr><th>主机名</th><th>ip</th><th>系统</th><th>内存</th><th>硬盘</th></tr></thead><tbody><tr><td>controller</td><td>192.168.48.100</td><td>Centos7.9</td><td>4G</td><td>100G</td></tr><tr><td>node01</td><td>192.168.48.101</td><td>Centos7.9</td><td>4G</td><td>100G</td></tr><tr><td>node02</td><td>192.168.48.102</td><td>Centos7.9</td><td>4G</td><td>100G</td></tr></tbody></table><h2 id="修改主机名"><a href="#修改主机名" class="headerlink" title="修改主机名"></a>修改主机名</h2><p><code>controlle</code></p><figure class="highlight dsconfig"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs dsconfig"><span class="hljs-string">hostnamectl</span> <span class="hljs-built_in">set-hostname</span> <span class="hljs-string">controller</span> &amp;&amp; <span class="hljs-string">bash</span><br></code></pre></td></tr></table></figure><p><code>node01</code></p><figure class="highlight dsconfig"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs dsconfig"><span class="hljs-string">hostnamectl</span> <span class="hljs-built_in">set-hostname</span> <span class="hljs-string">node01</span> &amp;&amp; <span class="hljs-string">bash</span><br></code></pre></td></tr></table></figure><p><code>node02</code></p><figure class="highlight dsconfig"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs dsconfig"><span class="hljs-string">hostnamectl</span> <span class="hljs-built_in">set-hostname</span> <span class="hljs-string">node02</span> &amp;&amp; <span class="hljs-string">bash</span><br></code></pre></td></tr></table></figure><p><code>三台机加入hosts</code></p><figure class="highlight accesslog"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs accesslog">cat &gt;&gt; /etc/hosts &lt;&lt; EOF<br><span class="hljs-number">192.168.48.100</span> controller<br><span class="hljs-number">192.168.48.101</span> node01<br><span class="hljs-number">192.168.48.102</span> node02<br>EOF<br></code></pre></td></tr></table></figure><h2 id="设置阿里yum"><a href="#设置阿里yum" class="headerlink" title="设置阿里yum"></a>设置阿里yum</h2><figure class="highlight awk"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><code class="hljs awk">mkdir repo.bak<br>mv <span class="hljs-regexp">/etc/yum</span>.repos.d<span class="hljs-regexp">/* repo.bak/</span><br>wget -O <span class="hljs-regexp">/etc/yum</span>.repos.d<span class="hljs-regexp">/CentOSase.repo https:/</span><span class="hljs-regexp">/mirrors.aliyun.com/</span>repo/Centos-<span class="hljs-number">7</span>.repo<br>yum clean all &amp;&amp; yum makecache<br>systemctl disable firewalld --now<br>sed -i <span class="hljs-string">&#x27;s/SELINUX=enforcing/SELINUX=disabled/g&#x27;</span> <span class="hljs-regexp">/etc/</span>sysconfig/selinux<br>sed -i <span class="hljs-string">&#x27;s/SELINUX=enforcing/SELINUX=disabled/g&#x27;</span> <span class="hljs-regexp">/etc/</span>selinux/config<br>yum update -y<br></code></pre></td></tr></table></figure><h2 id="安装python"><a href="#安装python" class="headerlink" title="安装python"></a>安装python</h2><p><code>已安装可以忽略。</code></p><p><code>确保python版本&gt;=2.6</code></p><figure class="highlight cmake"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs cmake">sudo yum <span class="hljs-keyword">install</span> epel-release<br>sudo yum <span class="hljs-keyword">install</span> https://centos7.iuscommunity.org/ius-release.rpm<br>sudo yum <span class="hljs-keyword">install</span> python27<br></code></pre></td></tr></table></figure><figure class="highlight autoit"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs autoit">[root<span class="hljs-symbol">@controller</span> ~]<span class="hljs-meta"># python --version</span><br>Python <span class="hljs-number">2.7</span><span class="hljs-number">.5</span><br><span class="hljs-meta">#有显示说明python安装成功</span><br></code></pre></td></tr></table></figure><h2 id="安装Ansible"><a href="#安装Ansible" class="headerlink" title="安装Ansible"></a>安装Ansible</h2><figure class="highlight awk"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><code class="hljs awk">sudo yum install epel-release ansible openssh<br><br>[root@controller ~]<span class="hljs-comment"># ansible --version</span><br>ansible <span class="hljs-number">2.9</span>.<span class="hljs-number">27</span><br>  config file = <span class="hljs-regexp">/etc/</span>ansible/ansible.cfg<br>  configured module search path = [<span class="hljs-string">u&#x27;/root/.ansible/plugins/modules&#x27;</span>, <span class="hljs-string">u&#x27;/usr/share/ansible/plugins/modules&#x27;</span>]<br>  ansible python module location = <span class="hljs-regexp">/usr/</span>lib<span class="hljs-regexp">/python2.7/</span>site-packages/ansible<br>  executable location = <span class="hljs-regexp">/usr/</span>bin/ansible<br>  python version = <span class="hljs-number">2.7</span>.<span class="hljs-number">5</span> (default, Oct <span class="hljs-number">14</span> <span class="hljs-number">2020</span>, <span class="hljs-number">14</span>:<span class="hljs-number">45</span>:<span class="hljs-number">30</span>) [GCC <span class="hljs-number">4.8</span>.<span class="hljs-number">5</span> <span class="hljs-number">20150623</span> (Red Hat <span class="hljs-number">4.8</span>.<span class="hljs-number">5</span>-<span class="hljs-number">44</span>)]<br><br></code></pre></td></tr></table></figure><h2 id="测试"><a href="#测试" class="headerlink" title="测试"></a>测试</h2><h3 id="测试主机是否存活"><a href="#测试主机是否存活" class="headerlink" title="测试主机是否存活"></a>测试主机是否存活</h3><figure class="highlight accesslog"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><code class="hljs accesslog">vim /etc/ansible/hosts<br><br>#在末尾添加ip<br><span class="hljs-number">192.168.48.101</span><br><span class="hljs-number">192.168.48.102</span><br>-----------------------<br></code></pre></td></tr></table></figure><figure class="highlight nginx"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs nginx"><span class="hljs-attribute">ansible</span> <span class="hljs-number">192.168.48.101</span> -m ping -k<br>ansible <span class="hljs-number">192.168.48.102</span> -m ping -k<br></code></pre></td></tr></table></figure><p>如果controller没有首次进行ssh至node01-02节点，则ansible会出错，如下图：</p><p><img src="https://article.biliimg.com/bfs/article/4d73b72da0b2aa4c41afbd91b87b1c33697559838.png" alt="image-20230909230311692"></p><p><img src="https://article.biliimg.com/bfs/article/e020ecc2883af4e0e870ec1af8f4b7a0697559838.png" alt="image-20230909230328295"></p><p>所以我们必须先ssh至各节点，让其生成缓存信息</p><figure class="highlight autoit"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><code class="hljs autoit">[root<span class="hljs-symbol">@controller</span> ~]<span class="hljs-meta"># ssh 192.168.48.101</span><br><span class="hljs-meta">##输入密码</span><br><br>[root<span class="hljs-symbol">@node01</span> ~]<span class="hljs-meta"># exit</span><br><br><br>[root<span class="hljs-symbol">@controller</span> ~]<span class="hljs-meta"># ssh 192.168.48.102</span><br><span class="hljs-meta">##输入密码</span><br><br>[root<span class="hljs-symbol">@node02</span> ~]<span class="hljs-meta"># exit</span><br></code></pre></td></tr></table></figure><p>这时我们在进行测试</p><p><img src="https://article.biliimg.com/bfs/article/4e7336e821c03b8891db5170b887629b697559838.png" alt="image-20230909230535153"></p><h2 id="SSH免密配置"><a href="#SSH免密配置" class="headerlink" title="SSH免密配置"></a>SSH免密配置</h2><figure class="highlight tap"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><code class="hljs tap">ssh-keygen   （一路回车，三次）<br>[root@controller ~]<span class="hljs-comment"># ls -al ~/.ssh</span><br>total 12<br>drwx------ <span class="hljs-number"> 2 </span>root root  <span class="hljs-number"> 57 </span>Sep <span class="hljs-number"> 6 </span>00:43 .<br>dr-xr-x---.<span class="hljs-number"> 8 </span>root root <span class="hljs-number"> 236 </span>Sep <span class="hljs-number"> 9 </span>23:05 ..<br>-rw------- <span class="hljs-number"> 1 </span>root root<span class="hljs-number"> 1675 </span>Sep <span class="hljs-number"> 6 </span>00:42 id_rsa<br>-rw-r--r-- <span class="hljs-number"> 1 </span>root root <span class="hljs-number"> 397 </span>Sep <span class="hljs-number"> 6 </span>00:42 id_rsa.pub<br>-rw-r--r-- <span class="hljs-number"> 1 </span>root root <span class="hljs-number"> 352 </span>Sep <span class="hljs-number"> 6 </span>00:35 known_hosts<br><span class="hljs-comment">#有密钥文件了</span><br><br><span class="hljs-comment">#将密钥文件复制到node01-02节点，实现ssh免密登入</span><br>(先yes 然后输入密码即可)<br>ssh-copy-id root@192.168.48.101<br><br>ssh-copy-id root@192.168.48.102<br></code></pre></td></tr></table></figure><p>最后我们在进行测试</p><p><img src="https://article.biliimg.com/bfs/article/344acbb51f13cf0c9142b10a1d409636697559838.png" alt="image-20230909231047461"></p><p><img src="https://article.biliimg.com/bfs/article/0ec1b41365c6b30606f074d798ade0e5697559838.png" alt="image-20230909231103976"></p><p><code>可以返回目录！</code></p><p><a href="https://blog.qianyios.top/2023/09/10/ansible/Ansible-%E6%80%BB%E6%89%8B%E5%86%8C/">Ansible练习目录 - 严千屹博客 (qianyios.top)</a></p><div class="tbsm" style="margin-top:54px;"><div class="tbsm-top"><span><svg t="1674654360507" class="icon" viewBox="0 0 1024 1024" version="1.1" xmlns="http://www.w3.org/2000/svg" p-id="987" data-spm-anchor-id="a313x.7781069.0.i0" width="35" height="35"><path d="M410.49 97.74H155.08a56.74 56.74 0 0 0-56.84 56.73V410a56.84 56.84 0 0 0 56.84 56.84h255.41A56.83 56.83 0 0 0 467.32 410V154.58a56.83 56.83 0 0 0-56.83-56.84zM410.49 558.74H155.08a56.74 56.74 0 0 0-56.84 56.73V871a56.84 56.84 0 0 0 56.84 56.84h255.41A56.83 56.83 0 0 0 467.32 871V615.58a56.83 56.83 0 0 0-56.83-56.84zM871.49 558.74H616.08a56.74 56.74 0 0 0-56.84 56.73V871a56.84 56.84 0 0 0 56.84 56.84h255.41A56.83 56.83 0 0 0 928.32 871V615.58a56.83 56.83 0 0 0-56.83-56.84z" fill="#66EEFF" p-id="988"></path><path d="M410.49 558.74h-4.14A475 475 0 0 0 299.52 859.6a481.16 481.16 0 0 0 4.84 68.22h106.13A56.83 56.83 0 0 0 467.32 871V615.58a56.83 56.83 0 0 0-56.83-56.84zM871.49 558.74H616.08a56.74 56.74 0 0 0-56.84 56.73V871a56.84 56.84 0 0 0 56.84 56.84h255.41A56.83 56.83 0 0 0 928.32 871V615.58a56.83 56.83 0 0 0-56.83-56.84z" fill="#C2F8FF" p-id="989"></path></svg></span><span style="font-size:30px;"> 特别声明</span></div><div class="tbsm-wz">千屹博客旗下的所有文章，是通过本人课堂学习和课外自学所精心整理的知识巨著<br/>难免会有出错的地方<br/>如果细心的你发现了小失误，可以在下方评论区告诉我，或者私信我！<br />非常感谢大家的热烈支持！</div></div>]]></content>
    
    
    
    <tags>
      
      <tag>Centos 7</tag>
      
      <tag>Ansible</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>Centos7 部署 k8s（基于containerd 运行时）</title>
    <link href="/2023/07/08/ck8s1.26.1/"/>
    <url>/2023/07/08/ck8s1.26.1/</url>
    
    <content type="html"><![CDATA[<meta name="referrer" content="no-referrer"/><h1 id="Centos7-部署-k8s（基于containerd-运行时）"><a href="#Centos7-部署-k8s（基于containerd-运行时）" class="headerlink" title="Centos7 部署 k8s（基于containerd 运行时）"></a>Centos7 部署 k8s（基于containerd 运行时）</h1><p>因本教程的个别资源需要外网才可下载，可以通过<a href="https://pan.quark.cn/s/e8d31c514e9f#/list/share">千屹资源</a>下载k8s资源</p><h2 id="节点分布架构"><a href="#节点分布架构" class="headerlink" title="节点分布架构"></a>节点分布架构</h2><p>1、Master主机：2核CPU、4G内存、20G硬盘<br>2、Node主机：4+核CPU、8G+内存、40G+硬盘</p><table><thead><tr><th>Hostname</th><th>IP</th><th>说明</th></tr></thead><tbody><tr><td>master</td><td>192.168.48.100</td><td>master</td></tr><tr><td>node01</td><td>192.168.48.101</td><td>node01</td></tr><tr><td>node02</td><td>192.168.48.102</td><td>node02</td></tr></tbody></table><h2 id="制作master模板机"><a href="#制作master模板机" class="headerlink" title="制作master模板机"></a>制作master模板机</h2><h3 id="升级系统内核"><a href="#升级系统内核" class="headerlink" title="升级系统内核"></a>升级系统内核</h3><figure class="highlight autoit"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs autoit">[root<span class="hljs-symbol">@localhost</span> ~]<span class="hljs-meta"># uname -sr</span><br>Linux <span class="hljs-number">3.10</span><span class="hljs-number">.0</span><span class="hljs-number">-1160.</span>el7.x86_64<br></code></pre></td></tr></table></figure><p>下载必要的网页工具</p><figure class="highlight cmake"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs cmake">yum <span class="hljs-keyword">install</span> -y vim wget git<br></code></pre></td></tr></table></figure><p>启用ELRepo仓库</p><figure class="highlight apache"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs apache"><span class="hljs-attribute">yum</span> install -y https://www.elrepo.org/elrepo-release-<span class="hljs-number">7</span>.<span class="hljs-number">0</span>-<span class="hljs-number">4</span>.el7.elrepo.noarch.rpm<br><span class="hljs-attribute">yum</span> clean <span class="hljs-literal">all</span> &amp;&amp; yum makecache<br></code></pre></td></tr></table></figure><p>仓库启用后，列出可用的系统内核相关包</p><figure class="highlight abnf"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs abnf">yum --disablerepo<span class="hljs-operator">=</span><span class="hljs-string">&quot;*&quot;</span> --enablerepo<span class="hljs-operator">=</span><span class="hljs-string">&quot;elrepo-kernel&quot;</span> list available <br></code></pre></td></tr></table></figure><p>安装主线稳定内核</p><figure class="highlight routeros"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs routeros">yum <span class="hljs-attribute">--enablerepo</span>=elrepo-kernel install kernel-ml -y<br></code></pre></td></tr></table></figure><p>设置 GRUB 默认的内核版本</p><p>打开并编辑 &#x2F;etc&#x2F;default&#x2F;grub并设置CRUB_DEFAULT&#x3D;0,让GRUB初始化页面的第一个内核作为默认内核。</p><p>运行命令重新创建内核配置，重启并应用最新内核，开机后检查内核版本</p><figure class="highlight awk"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><code class="hljs awk">sed -i <span class="hljs-string">&#x27;s/GRUB_DEFAULT=saved/GRUB_DEFAULT=0/g&#x27;</span> <span class="hljs-regexp">/etc/</span>default/grub<br>grub2-mkconfig -o <span class="hljs-regexp">/boot/g</span>rub2/grub.cfg<br>reboot<br>uname -sr<br>[root@localhost ~]<span class="hljs-comment"># uname -sr</span><br>Linux <span class="hljs-number">6.3</span>.<span class="hljs-number">2</span>-<span class="hljs-number">1</span>.el7.elrepo.x86_64<br></code></pre></td></tr></table></figure><h3 id="修改主机名"><a href="#修改主机名" class="headerlink" title="修改主机名"></a>修改主机名</h3><figure class="highlight dsconfig"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs dsconfig"><span class="hljs-string">hostnamectl</span> <span class="hljs-built_in">set-hostname</span> <span class="hljs-string">master</span> &amp;&amp; <span class="hljs-string">bash</span><br></code></pre></td></tr></table></figure><h3 id="修改host解析"><a href="#修改host解析" class="headerlink" title="修改host解析"></a>修改host解析</h3><figure class="highlight accesslog"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs accesslog">cat &gt;&gt; /etc/hosts  &lt;&lt; EOF<br><span class="hljs-number">192.168.48.100</span> master<br><span class="hljs-number">192.168.48.101</span> node01<br><span class="hljs-number">192.168.48.102</span> node02<br>EOF<br></code></pre></td></tr></table></figure><h3 id="关闭防火墙和selinux"><a href="#关闭防火墙和selinux" class="headerlink" title="关闭防火墙和selinux"></a>关闭防火墙和selinux</h3><figure class="highlight nsis"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><code class="hljs nsis"><span class="hljs-params">system</span>ctl stop firewalld &amp;&amp; <span class="hljs-params">system</span>ctl disable firewalld &amp;&amp; <span class="hljs-params">system</span>ctl status firewalld<br><br>setenforce <span class="hljs-number">0</span><br>sed -i <span class="hljs-string">&#x27;s/^SELINUX=enforcing$/SELINUX=permissive/&#x27;</span> /etc/selinux/config<br><span class="hljs-comment">#查看selinux的状态</span><br>getenforce<br></code></pre></td></tr></table></figure><h3 id="关闭swap分区"><a href="#关闭swap分区" class="headerlink" title="关闭swap分区"></a>关闭swap分区</h3><figure class="highlight awk"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><code class="hljs awk"><span class="hljs-comment">#临时关闭</span><br>swapoff -a<br><span class="hljs-comment">#永久关闭修改/etc/fstab 文件，注释掉 SWAP 的自动挂载，</span><br>sed -i <span class="hljs-string">&#x27;s/.*swap.*/#&amp;/&#x27;</span>  <span class="hljs-regexp">/etc/</span>fstab<br><span class="hljs-comment">#验证</span><br>free -m<br></code></pre></td></tr></table></figure><h3 id="时间同步"><a href="#时间同步" class="headerlink" title="时间同步"></a>时间同步</h3><figure class="highlight dsconfig"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><code class="hljs dsconfig"><span class="hljs-comment">#设置时区</span><br><span class="hljs-string">sudo</span> <span class="hljs-string">timedatectl</span> <span class="hljs-built_in">set-timezone</span> <span class="hljs-string">Asia</span>/<span class="hljs-string">Shanghai</span><br><span class="hljs-comment">#安装ntpdate</span><br><span class="hljs-string">yum</span> <span class="hljs-string">install</span> <span class="hljs-string">ntpdate</span> -<span class="hljs-string">y</span><br><span class="hljs-string">ntpdate</span> <span class="hljs-string">time</span>.<span class="hljs-string">windows</span>.<span class="hljs-string">com</span><br>备注:<span class="hljs-string">ntpdate</span>源也可以设置成其它如：<span class="hljs-string">ntpdate</span> <span class="hljs-string">cn</span>.<span class="hljs-string">pool</span>.<span class="hljs-string">net</span>.<span class="hljs-string">org</span><br><span class="hljs-comment">#将系统时间写入到系统硬件当中</span><br><span class="hljs-string">hwclock</span> -<span class="hljs-string">w</span><br><span class="hljs-comment">#验证时间</span><br></code></pre></td></tr></table></figure><h3 id="加载内核模块"><a href="#加载内核模块" class="headerlink" title=".加载内核模块"></a>.加载内核模块</h3><p>br_netfilter模块用于将桥接流量转发至iptables链，加载br_netfilter模块</p><figure class="highlight arcade"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs arcade">modprobe br_netfilter<br>echo <span class="hljs-string">&quot;modprobe br_netfilter&quot;</span> &gt;&gt; <span class="hljs-regexp">/etc/</span>profile<br></code></pre></td></tr></table></figure><p>#验证模块是否加载成功：</p><figure class="highlight crmsh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs crmsh">[root@<span class="hljs-keyword">master</span> <span class="hljs-title">~]# lsmod</span> |grep br_netfilter<br>br_netfilter           <span class="hljs-number">32768</span>  <span class="hljs-number">0</span><br><br></code></pre></td></tr></table></figure><h3 id="修改内核参数"><a href="#修改内核参数" class="headerlink" title="修改内核参数"></a>修改内核参数</h3><figure class="highlight routeros"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><code class="hljs routeros"><span class="hljs-comment">#开启网桥模式，可将网桥的流量传递给iptables链</span><br>cat &gt; /etc/sysctl.d/k8s.conf &lt;&lt; EOF<br>net.bridge.<span class="hljs-attribute">bridge-nf-call-ip6tables</span>=1<br>net.bridge.<span class="hljs-attribute">bridge-nf-call-iptables</span>=1<br>net.ipv4.<span class="hljs-attribute">ip_forward</span>=1<br>vm.<span class="hljs-attribute">swappiness</span>=0<br>EOF<br><span class="hljs-comment">#使配置生效</span><br>sysctl -p /etc/sysctl.d/k8s.conf<br></code></pre></td></tr></table></figure><p>说明：<br>        net.bridge.bridge-nf-call-ip6tables 和 net.bridge.bridge-nf-call-iptables，netfilter实际上既可以在L2层过滤，也可以在L3层过滤的。当值为 0 ，即要求iptables不对bridge的数据进行处理。当值为 1，也就意味着二层的网桥在转发包时也会被iptables的FORWARD规则所过滤，这样就会出现L3层的iptables rules去过滤L2的帧的问题。<br>        max_map_count，文件包含限制一个进程可以拥有的VMA(虚拟内存区域)的数量。如不设置可能会报错：“max virtual memory areas vm.max_map_count [65530] is too low, increase to at least [262144]”<br>        net.ipv4.ip_forward，出于安全考虑，Linux系统默认是禁止数据包转发的。所谓转发即当主机拥有多于一块的网卡时，其中一块收到数据包，根据数据包的目的ip地址将数据包发往本机另一块网卡，该网卡根据路由表继续发送数据包。这通常是路由器所要实现的功能。要让Linux系统具有路由转发功能，需要配置 Linux 的内核参数 net.ipv4.ip_forward &#x3D; 1<br>        swappiness，等于 0 的时候表示最大限度使用物理内存，然后才是 swap空间，swappiness&#x3D;100的时候表示积极的使用swap分区，并且把内存上的数据及时的搬运到swap空间里面。</p><h3 id="ipvs转发"><a href="#ipvs转发" class="headerlink" title="ipvs转发"></a>ipvs转发</h3><p>不开启ipvs将会使用iptables进行数据包转发，但是效率低，所以官网推荐需要开通ipvs.</p><p>1.安装系统依赖包，开启ipvs转发</p><figure class="highlight awk"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><code class="hljs awk">yum install -y  ipvsadm ipset <br><br>cat &gt; <span class="hljs-regexp">/etc/</span>sysconfig<span class="hljs-regexp">/modules/i</span>pvs.modules &lt;&lt; EOF<br><span class="hljs-comment">#!/bin/bash</span><br>modprobe -- ip_vs<br>modprobe -- ip_vs_rr<br>modprobe -- ip_vs_wrr<br>modprobe -- ip_vs_sh<br>modprobe -- nf_conntrack<br>EOF<br><br><span class="hljs-comment">#所有节点上给脚本⽂件添加权限并执⾏</span><br>chmod <span class="hljs-number">755</span> <span class="hljs-regexp">/etc/</span>sysconfig<span class="hljs-regexp">/modules/i</span>pvs.modules <br>bash <span class="hljs-regexp">/etc/</span>sysconfig<span class="hljs-regexp">/modules/i</span>pvs.modules<br><br><span class="hljs-comment">#查看是否模块加载情况</span><br>lsmod |  grep ip_vs<br></code></pre></td></tr></table></figure><h3 id="安装docker"><a href="#安装docker" class="headerlink" title="安装docker"></a>安装docker</h3><figure class="highlight awk"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><code class="hljs awk"><span class="hljs-comment">#配置yum源</span><br>mkdir repo.bak<br>mv <span class="hljs-regexp">/etc/yum</span>.repos.d<span class="hljs-regexp">/* repo.bak/</span><br><span class="hljs-comment">##添加阿里源</span><br>wget -O <span class="hljs-regexp">/etc/yum</span>.repos.d<span class="hljs-regexp">/CentOS-Base.repo http:/</span><span class="hljs-regexp">/mirrors.aliyun.com/</span>repo/Centos-<span class="hljs-number">7</span>.repo<br><span class="hljs-comment">#添加yum docker软件源</span><br>wget https:<span class="hljs-regexp">//mi</span>rrors.aliyun.com<span class="hljs-regexp">/docker-ce/</span>linux<span class="hljs-regexp">/centos/</span>docker-ce.repo -O <span class="hljs-regexp">/etc/yum</span>.repos.d/docker-ce.repo<br>yum clean all &amp;&amp; yum makecache<br><br><span class="hljs-comment">#安装docker</span><br>yum -y install docker-ce<br><span class="hljs-comment">#启用并启动docker</span><br>systemctl enable docker &amp;&amp; systemctl start docker<br><br><span class="hljs-comment">##配置镜像加速器</span><br><br>cat &gt; <span class="hljs-regexp">/etc/</span>docker/daemon.json &lt;&lt; EOF<br>&#123;<br>  <span class="hljs-string">&quot;registry-mirrors&quot;</span>: [<span class="hljs-string">&quot;https://b9pmyelo.mirror.aliyuncs.com&quot;</span>],<br>  <span class="hljs-string">&quot;exec-opts&quot;</span>: [<span class="hljs-string">&quot;native.cgroupdriver=systemd&quot;</span>]<br>&#125;<br>EOF<br><br><span class="hljs-comment">#重启docker</span><br>systemctl daemon-reload &amp;&amp; systemctl restart docker<br>docker info |grep  <span class="hljs-string">&quot;Cgroup Driver&quot;</span><br></code></pre></td></tr></table></figure><h3 id="安装cri-dockerd"><a href="#安装cri-dockerd" class="headerlink" title="安装cri-dockerd"></a>安装cri-dockerd</h3><figure class="highlight awk"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br></pre></td><td class="code"><pre><code class="hljs awk"><span class="hljs-comment">#下载cri-dockerd安装包</span><br>wget https:<span class="hljs-regexp">//gi</span>thub.com<span class="hljs-regexp">/Mirantis/</span>cri-dockerd<span class="hljs-regexp">/releases/</span>download<span class="hljs-regexp">/v0.3.1/</span>cri-dockerd-<span class="hljs-number">0.3</span>.<span class="hljs-number">1</span>-<span class="hljs-number">3</span>.el7.x86_64.rpm<br><span class="hljs-comment">#安装cri-dockerd</span><br>rpm -ivh cri-dockerd-<span class="hljs-number">0.3</span>.<span class="hljs-number">1</span>-<span class="hljs-number">3</span>.el7.x86_64.rpm<br><span class="hljs-comment">#如果报错，直接按下列网址安装</span><br>rpm -ivh  https:<span class="hljs-regexp">//gi</span>thub.com<span class="hljs-regexp">/Mirantis/</span>cri-dockerd<span class="hljs-regexp">/releases/</span>download<span class="hljs-regexp">/v0.3.1/</span>cri-dockerd-<span class="hljs-number">0.3</span>.<span class="hljs-number">1</span>-<span class="hljs-number">3</span>.el7.x86_64.rpm<br><span class="hljs-comment">#修改镜像地址为国内，否则kubelet拉取不了镜像导致启动失败</span><br>vi <span class="hljs-regexp">/usr/</span>lib<span class="hljs-regexp">/systemd/</span>system/cri-docker.service<br>修改下列行<br>ExecStart=<span class="hljs-regexp">/usr/</span>bin<span class="hljs-regexp">/cri-dockerd --container-runtime-endpoint fd:/</span><span class="hljs-regexp">/ --pod-infra-container-image=registry.aliyuncs.com/g</span>oogle_containers/pause:<span class="hljs-number">3.7</span><br><br>yum install -y containerd.io<br>systemctl enable containerd &amp;&amp; systemctl start containerd<br><br>mkdir -p <span class="hljs-regexp">/etc/</span>containerd<br>containerd config default | sudo tee <span class="hljs-regexp">/etc/</span>containerd/config.toml<br><span class="hljs-comment"># 替换配置文件</span><br>sed -i <span class="hljs-string">&#x27;s#SystemdCgroup = false#SystemdCgroup = true#&#x27;</span> <span class="hljs-regexp">/etc/</span>containerd/config.toml<br>sed -i <span class="hljs-string">&#x27;s#sandbox_image = &quot;registry.k8s.io/pause:3.6&quot;#sandbox_image = &quot;registry.aliyuncs.com/google_containers/pause:3.6&quot;#&#x27;</span> <span class="hljs-regexp">/etc/</span>containerd/config.toml<br><br>cat &gt;&gt; <span class="hljs-regexp">/etc/</span>crictl.yaml &lt;&lt; EOF<br>runtime-endpoint: unix:<span class="hljs-regexp">//</span><span class="hljs-regexp">/run/</span>containerd/containerd.sock<br>image-endpoint: unix:<span class="hljs-regexp">//</span><span class="hljs-regexp">/run/</span>containerd/containerd.sock<br>timeout: <span class="hljs-number">10</span><br>debug: false<br>EOF<br><br><span class="hljs-comment">#启动cri-dockerd</span><br>systemctl daemon-reload <br>systemctl enable cri-docker &amp;&amp; systemctl start cri-docker<br>systemctl restart containerd<br><br></code></pre></td></tr></table></figure><h3 id="添加yum-k8s软件源"><a href="#添加yum-k8s软件源" class="headerlink" title="添加yum k8s软件源"></a>添加yum k8s软件源</h3><figure class="highlight awk"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><code class="hljs awk">cat &gt; <span class="hljs-regexp">/etc/yum</span>.repos.d/kubernetes.repo &lt;&lt; EOF<br>[kubernetes]<br>name=Kubernetes<br>baseurl=https:<span class="hljs-regexp">//mi</span>rrors.aliyun.com<span class="hljs-regexp">/kubernetes/yum</span><span class="hljs-regexp">/repos/</span>kubernetes-el7-x86_64<br>enabled=<span class="hljs-number">1</span><br>gpgcheck=<span class="hljs-number">0</span><br>repo_gpgcheck=<span class="hljs-number">0</span><br>gpgkey=https:<span class="hljs-regexp">//mi</span>rrors.aliyun.com<span class="hljs-regexp">/kubernetes/yum</span><span class="hljs-regexp">/doc/yum</span>-key.gpg https:<span class="hljs-regexp">//mi</span>rrors.aliyun.com<span class="hljs-regexp">/kubernetes/yum</span><span class="hljs-regexp">/doc/</span>rpm-package-key.gpg<br>EOF<br><br></code></pre></td></tr></table></figure><h3 id="安装kubeadm、kubelet、kubectl"><a href="#安装kubeadm、kubelet、kubectl" class="headerlink" title="安装kubeadm、kubelet、kubectl"></a>安装kubeadm、kubelet、kubectl</h3><figure class="highlight apache"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs apache"><span class="hljs-attribute">yum</span> install -y kubelet-<span class="hljs-number">1</span>.<span class="hljs-number">26</span>.<span class="hljs-number">1</span> kubeadm-<span class="hljs-number">1</span>.<span class="hljs-number">26</span>.<span class="hljs-number">1</span> kubectl-<span class="hljs-number">1</span>.<span class="hljs-number">26</span>.<span class="hljs-number">1</span><br><span class="hljs-attribute">systemctl</span> enable kubelet --now<br><span class="hljs-attribute">kubeadm</span> version<br><span class="hljs-attribute">crictl</span> image<br></code></pre></td></tr></table></figure><p>关机poweroff</p><p>打快照</p><h2 id="完整克隆两台node01和node02"><a href="#完整克隆两台node01和node02" class="headerlink" title="完整克隆两台node01和node02"></a>完整克隆两台node01和node02</h2><table><thead><tr><th>Hostname</th><th>IP</th><th>说明</th></tr></thead><tbody><tr><td>master01</td><td>192.168.48.100</td><td>master</td></tr><tr><td>node01</td><td>192.168.48.101</td><td>node01</td></tr><tr><td>node02</td><td>192.168.48.102</td><td>node02</td></tr></tbody></table><p>根据节点分布，改好<span style=color:red>两台机ip和主机名</span>，不做解释</p><h2 id="配置各主机之间的免密登录"><a href="#配置各主机之间的免密登录" class="headerlink" title="配置各主机之间的免密登录"></a>配置各主机之间的免密登录</h2><figure class="highlight dockerfile"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs dockerfile">在master节点：<br>ssh-keygen <br><span class="hljs-comment">##三次回车</span><br>for i in node01 node02;do ssh-<span class="hljs-keyword">copy</span><span class="language-bash">-<span class="hljs-built_in">id</span> -i .ssh/id_rsa.pub <span class="hljs-variable">$i</span>;<span class="hljs-keyword">done</span></span><br></code></pre></td></tr></table></figure><p>关机快照（集群基础环境）poweroff</p><h2 id="在master节点初始化Kubernetes"><a href="#在master节点初始化Kubernetes" class="headerlink" title="在master节点初始化Kubernetes"></a>在master节点初始化Kubernetes</h2><p><span style=color:red>以下操作在master节点操作</span></p><figure class="highlight stylus"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><code class="hljs stylus">kubeadm init \<br>  <span class="hljs-attr">--apiserver-advertise-address</span>=<span class="hljs-number">192.168</span>.<span class="hljs-number">48.100</span> \<br>  <span class="hljs-attr">--image-repository</span> registry<span class="hljs-selector-class">.aliyuncs</span>.com/google_containers \<br>  <span class="hljs-attr">--kubernetes-version</span> v1.<span class="hljs-number">26.1</span> \<br>  <span class="hljs-attr">--service-cidr</span>=<span class="hljs-number">10.96</span>.<span class="hljs-number">0.0</span>/<span class="hljs-number">12</span> \<br>  <span class="hljs-attr">--pod-network-cidr</span>=<span class="hljs-number">10.244</span>.<span class="hljs-number">0.0</span>/<span class="hljs-number">16</span> \<br>  <span class="hljs-attr">--cri-socket</span>=unix:<span class="hljs-comment">///run/containerd/containerd.sock \</span><br>  <span class="hljs-attr">--ignore-preflight-errors</span>=<span class="hljs-attribute">all</span><br><br>–apiserver-advertise-address：集群通告地址<br>–image-repository：由于默认拉取镜像地址k8s<span class="hljs-selector-class">.gcr</span>.io国内无法访问，这里指定阿里云镜像仓库地址<br>–kubernetes-version：K8s版本，与上面安装的一致<br>–service-cidr：集群内部虚拟网络，Pod统一访问入口<br>–pod-network-cidr：Pod网络，与下面部署的CNI网络组件yaml中保持一致<br>–cri-socket：指定cri-dockerd接口，如果是containerd则使用unix:<span class="hljs-comment">///run/containerd/containerd.sock</span><br></code></pre></td></tr></table></figure><p>PS：</p><p>1、如果不记得token，利用kubeadm命令重新生成token</p><figure class="highlight gauss"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs gauss">kubeadm <span class="hljs-built_in">token</span> <span class="hljs-keyword">create</span> --<span class="hljs-keyword">print</span>-join-command --ttl=<span class="hljs-number">0</span><br></code></pre></td></tr></table></figure><p>#–ttl&#x3D;0:配置该参数，生成的token将永不失效</p><p>2、如果初始化master有问题，可将集群重置，再次初始化master，其他节点重新加入前也要kubeadm reset</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">kubeadm reset<br></code></pre></td></tr></table></figure><p>保存记录的信息</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><code class="hljs bash">[addons] Applied essential addon: kube-proxy<br><br>Your Kubernetes control-plane has initialized successfully!<br><br>To start using your cluster, you need to run the following as a regular user:<br><br>  <span class="hljs-built_in">mkdir</span> -p <span class="hljs-variable">$HOME</span>/.kube<br>  sudo <span class="hljs-built_in">cp</span> -i /etc/kubernetes/admin.conf <span class="hljs-variable">$HOME</span>/.kube/config<br>  sudo <span class="hljs-built_in">chown</span> $(<span class="hljs-built_in">id</span> -u):$(<span class="hljs-built_in">id</span> -g) <span class="hljs-variable">$HOME</span>/.kube/config<br><br>Alternatively, <span class="hljs-keyword">if</span> you are the root user, you can run:<br><br>  <span class="hljs-built_in">export</span> KUBECONFIG=/etc/kubernetes/admin.conf<br><br>You should now deploy a pod network to the cluster.<br>Run <span class="hljs-string">&quot;kubectl apply -f [podnetwork].yaml&quot;</span> with one of the options listed at:<br>  https://kubernetes.io/docs/concepts/cluster-administration/addons/<br><br>Then you can <span class="hljs-built_in">join</span> any number of worker nodes by running the following on each as root:<br><br>kubeadm <span class="hljs-built_in">join</span> 192.168.48.100:6443 --token wkw927.l5024sn7bqga1vt4 \<br>        --discovery-token-ca-cert-hash sha256:cb69142ace324c2de1261a2bb8e540dc2310c3cdc0973ca1093a47bc8d61ac29<br><br></code></pre></td></tr></table></figure><h3 id="使用kubectl"><a href="#使用kubectl" class="headerlink" title="使用kubectl"></a>使用kubectl</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs bash"><span class="hljs-built_in">mkdir</span> -p <span class="hljs-variable">$HOME</span>/.kube<br>sudo <span class="hljs-built_in">cp</span> -i /etc/kubernetes/admin.conf <span class="hljs-variable">$HOME</span>/.kube/config<br>sudo <span class="hljs-built_in">chown</span> $(<span class="hljs-built_in">id</span> -u):$(<span class="hljs-built_in">id</span> -g) <span class="hljs-variable">$HOME</span>/.kube/config<br></code></pre></td></tr></table></figure><h3 id="安装kubectl命令补全"><a href="#安装kubectl命令补全" class="headerlink" title="安装kubectl命令补全"></a>安装kubectl命令补全</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs bash">yum install -y bash-completion<br><span class="hljs-built_in">echo</span> <span class="hljs-string">&#x27;source /usr/share/bash-completion/bash_completion&#x27;</span> &gt;&gt; ~/.bashrc<br><span class="hljs-built_in">source</span> ~/.bashrc<br><span class="hljs-built_in">echo</span> <span class="hljs-string">&#x27;source &lt;(kubectl completion bash)&#x27;</span> &gt;&gt; ~/.bashrc<br><span class="hljs-built_in">source</span> ~/.bashrc<br></code></pre></td></tr></table></figure><h2 id="node01、node02加入集群"><a href="#node01、node02加入集群" class="headerlink" title="node01、node02加入集群"></a>node01、node02加入集群</h2><p>两个node都打</p><figure class="highlight stylus"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs stylus">kubeadm join <span class="hljs-number">192.168</span>.<span class="hljs-number">48.100</span>:<span class="hljs-number">6443</span> <span class="hljs-attr">--token</span> wkw927<span class="hljs-selector-class">.l5024sn7bqga1vt4</span> \<br>        <span class="hljs-attr">--discovery-token-ca-cert-hash</span> sha256:cb69142ace324c2de1261a2bb8e540dc2310c3cdc0973ca1093a47bc8d61ac29 <span class="hljs-attr">--cri-socket</span> unix:<span class="hljs-comment">///run/containerd/containerd.sock</span><br></code></pre></td></tr></table></figure><h2 id="master配置网络插件calico"><a href="#master配置网络插件calico" class="headerlink" title="master配置网络插件calico"></a>master配置网络插件calico</h2><p>如果calico的文件下载不了，直接用文章最顶部的资源，已经给你们下载好了</p><p><span style=color:red>以下操作在master节点操作</span></p><figure class="highlight awk"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs awk">增加解析记录<br>echo <span class="hljs-string">&#x27;185.199.108.133 raw.githubusercontent.com&#x27;</span> &gt;&gt; <span class="hljs-regexp">/etc/</span>hosts <br>curl https:<span class="hljs-regexp">//</span>raw.githubusercontent.com<span class="hljs-regexp">/projectcalico/</span>calico<span class="hljs-regexp">/v3.25.1/m</span>anifests/calico.yaml -O<br>kubectl apply -f calico.yaml<br></code></pre></td></tr></table></figure><p>PS：如果部署失败，则删除calico ：kubectl  delete -f calico.yaml</p><p>验证集群节点状态正常</p><figure class="highlight crmsh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs crmsh">kubectl get nodes<br>kubectl label <span class="hljs-keyword">node</span> <span class="hljs-title">node01</span> <span class="hljs-keyword">node</span><span class="hljs-title">-role</span>.kubernetes.io/<span class="hljs-attr">worker=</span>worker<br>kubectl label <span class="hljs-keyword">node</span> <span class="hljs-title">node02</span> <span class="hljs-keyword">node</span><span class="hljs-title">-role</span>.kubernetes.io/<span class="hljs-attr">worker=</span>worker<br></code></pre></td></tr></table></figure><figure class="highlight crmsh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><code class="hljs crmsh"><span class="hljs-comment">#正常信息</span><br>[root@<span class="hljs-keyword">master</span> <span class="hljs-title">~]# kubectl</span> get nodes<br>NAME     STATUS   ROLES           AGE   <span class="hljs-keyword">VERSION</span><br><span class="hljs-keyword">master</span>   <span class="hljs-title">Ready</span>    control-plane   <span class="hljs-number">53m</span>   v1.<span class="hljs-number">26.1</span><br>node01   Ready    worker          <span class="hljs-number">46m</span>   v1.<span class="hljs-number">26.1</span><br>node02   Ready    worker          <span class="hljs-number">46m</span>   v1.<span class="hljs-number">26.1</span><br><span class="hljs-comment">##要过1分钟才会为Ready</span><br></code></pre></td></tr></table></figure><h2 id="部署Dashboard"><a href="#部署Dashboard" class="headerlink" title="部署Dashboard"></a>部署Dashboard</h2><p>如果dashboard的文件下载不了，直接用文章最顶部的资源，已经给你们下载好了</p><p>在master节点</p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><code class="hljs yaml"><span class="hljs-string">wget</span> <span class="hljs-string">https://raw.githubusercontent.com/kubernetes/dashboard/v2.7.0/aio/deploy/recommended.yaml</span><br><br><span class="hljs-comment">#默认Dashboard只能集群内部访问，修改Service为NodePort类型，暴露到外部访问，修改如下：</span><br><span class="hljs-string">vim</span> <span class="hljs-string">recommended.yaml</span><br><span class="hljs-attr">kind:</span> <span class="hljs-string">Service</span><br><span class="hljs-attr">apiVersion:</span> <span class="hljs-string">v1</span><br><span class="hljs-attr">metadata:</span><br>  <span class="hljs-attr">labels:</span><br>    <span class="hljs-attr">k8s-app:</span> <span class="hljs-string">kubernetes-dashboard</span><br>  <span class="hljs-attr">name:</span> <span class="hljs-string">kubernetes-dashboard</span><br>  <span class="hljs-attr">namespace:</span> <span class="hljs-string">kubernetes-dashboard</span><br><span class="hljs-attr">spec:</span><br>  <span class="hljs-attr">ports:</span><br>    <span class="hljs-bullet">-</span> <span class="hljs-attr">port:</span> <span class="hljs-number">443</span><br>      <span class="hljs-attr">targetPort:</span> <span class="hljs-number">8443</span><br>      <span class="hljs-attr">nodePort:</span> <span class="hljs-number">30001</span><br>  <span class="hljs-attr">selector:</span><br>    <span class="hljs-attr">k8s-app:</span> <span class="hljs-string">kubernetes-dashboard</span><br>  <span class="hljs-attr">type:</span> <span class="hljs-string">NodePort</span><br></code></pre></td></tr></table></figure><img src="https://article.biliimg.com/bfs/article/a4c9bc1c02493e0a471a2e34897c79d3697559838.png" alt="image-20230512171256847" style="zoom:67%;" /><p>位置顺序要按如图所示</p><figure class="highlight nsis"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><code class="hljs nsis">kubectl apply -f recommended.yaml<br>kubectl get pods -n kubernetes-dashboard<br><span class="hljs-comment">#以下是正常信息 （Running）</span><br>[root@master ~]<span class="hljs-comment"># kubectl get pods -n kubernetes-dashboard</span><br><span class="hljs-keyword">NAME</span>                                        READY   STATUS    RESTARTS   AGE<br>dashboard-metrics-scraper-<span class="hljs-number">7</span>bc864c59-krfmg   <span class="hljs-number">1</span>/<span class="hljs-number">1</span>     Running   <span class="hljs-number">0</span>          <span class="hljs-number">2</span>m9s<br>kubernetes-dashboard-<span class="hljs-number">6</span>c7ccbcf87-krzr6       <span class="hljs-number">1</span>/<span class="hljs-number">1</span>     Running   <span class="hljs-number">0</span>          <span class="hljs-number">2</span>m9s<br><br><br>创建service account并绑定默认cluster-<span class="hljs-literal">admin</span>管理员群角色<br><span class="hljs-comment">#创建用户</span><br>kubectl create serviceaccount dashboard-<span class="hljs-literal">admin</span> -n kubernetes-dashboard<br><span class="hljs-comment">#用户授权</span><br>kubectl create clusterrolebinding dashboard-<span class="hljs-literal">admin</span> --clusterrole=cluster-<span class="hljs-literal">admin</span> --serviceaccount=kubernetes-dashboard:dashboard-<span class="hljs-literal">admin</span><br><span class="hljs-comment">#获取用户Token</span><br>kubectl create token dashboard-<span class="hljs-literal">admin</span> -n kubernetes-dashboard<br><br>eyJhbGciOiJSUzI1NiIsImtpZCI6IjdOQUpMNDVpVGpqMWxmSHdzdm81WGFkSmtQUTludHo5TEJvbk56NXFUOGcifQ.eyJhdWQiOlsiaHR0cHM6Ly9rdWJlcm5ldGVzLmRlZmF1bHQuc3ZjLmNsdXN0ZXIubG9jYWwiXSwiZXhwIjoxNjg4ODMyNDYxLCJpYXQiOjE2ODg4Mjg4NjEsImlzcyI6Imh0dHBzOi8va3ViZXJuZXRlcy5kZWZhdWx0LnN2Yy5jbHVzdGVyLmxvY2FsIiwia3ViZXJuZXRlcy5pbyI6eyJuYW1lc3BhY2UiOiJrdWJlcm5ldGVzLWRhc2hib2FyZCIsInNlcnZpY2VhY2NvdW50Ijp7Im5hbWUiOiJkYXNoYm9hcmQtYWRtaW4iLCJ1aWQiOiI2MjBiMjNlZS1jMmYzLTQ5NjYtYTVlNS02M2Y4MGYxNGJhMDkifX0sIm5iZiI6MTY4ODgyODg2MSwic3ViIjoic3lzdGVtOnNlcnZpY2VhY2NvdW50Omt1YmVybmV0ZXMtZGFzaGJvYXJkOmRhc2hib2FyZC1hZG1pbiJ9.uZEgVhEVDgZJ7jMTiTeUMvkZ0j-TtJ7cx1bwK4f7lLlifTO6rvG3EjCkufsVEbY1oRruC30T3hDZI_xupkv9InTjJwFV1ZSTJyXfijr-xYShELBMCQ4W1c_gGPkvP_OIhr7yfes2pfk066HzZz_gsJB_TakkVtjS1aJPjrWtO7vkzWxOTmF9jQF0Ja3iNh8EYJOcQz5oJBkiwN3TdCc0cf44To0HSmG9Mytn2uy4UJsgxN1LKjrERb8JAn25Xm9ubFNG5U2Zp8yVD5MyoAraWpo0sQOZzTvQaFc6CsXcSUd8EEPkY2eUEdC1gKf2ugpS9T7r398AVlUOSyob7T8kqQ<br><br></code></pre></td></tr></table></figure><p>查询pod状态</p><p><img src="https://article.biliimg.com/bfs/article/52f0f763fed7d1abbc54c5b4edc1310e697559838.png" alt="image-20230519155939383"></p><figure class="highlight armasm"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs armasm"><span class="hljs-symbol">kubectl</span> <span class="hljs-meta">get</span> pod,<span class="hljs-keyword">svc</span> -o wide -n kubernetes-dashboard<br></code></pre></td></tr></table></figure><p>浏览器访问https:&#x2F;&#x2F;所在node的ip:30001<br><a href="https://192.168.48.101:30001/">https://192.168.48.101:30001</a>    因本pod在node01，请根据实际情况修改。<br>输入token</p><p><img src="https://article.biliimg.com/bfs/article/82e859045f1529f857dd0269d3ca2e31697559838.png" alt="image-20230519160425152"></p><h2 id="测试集群"><a href="#测试集群" class="headerlink" title="测试集群"></a>测试集群</h2><p>master</p><figure class="highlight routeros"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs routeros">kubectl create deployment nginx <span class="hljs-attribute">--image</span>=nginx<br>kubectl expose deployment nginx <span class="hljs-attribute">--port</span>=80 <span class="hljs-attribute">--type</span>=NodePort<br>kubectl <span class="hljs-built_in">get</span> pod,svc,deployment -o wide<br></code></pre></td></tr></table></figure><p><img src="https://article.biliimg.com/bfs/article/6c971831f68b6eaca6ca1e2c5bdb9ed2697559838.png" alt="image-20230519160645944"></p><p>如图可知，pod在node02，所以浏览器访问ip:31971</p><p><a href="http://192.168.48.102:31971/">http://192.168.48.102:31971</a></p><p><img src="https://article.biliimg.com/bfs/article/5ebee3bb549431ccdf59c4d8abdca220697559838.png" alt="image-20230519160800617"></p><div class="tbsm" style="margin-top:54px;"><div class="tbsm-top"><span><svg t="1674654360507" class="icon" viewBox="0 0 1024 1024" version="1.1" xmlns="http://www.w3.org/2000/svg" p-id="987" data-spm-anchor-id="a313x.7781069.0.i0" width="35" height="35"><path d="M410.49 97.74H155.08a56.74 56.74 0 0 0-56.84 56.73V410a56.84 56.84 0 0 0 56.84 56.84h255.41A56.83 56.83 0 0 0 467.32 410V154.58a56.83 56.83 0 0 0-56.83-56.84zM410.49 558.74H155.08a56.74 56.74 0 0 0-56.84 56.73V871a56.84 56.84 0 0 0 56.84 56.84h255.41A56.83 56.83 0 0 0 467.32 871V615.58a56.83 56.83 0 0 0-56.83-56.84zM871.49 558.74H616.08a56.74 56.74 0 0 0-56.84 56.73V871a56.84 56.84 0 0 0 56.84 56.84h255.41A56.83 56.83 0 0 0 928.32 871V615.58a56.83 56.83 0 0 0-56.83-56.84z" fill="#66EEFF" p-id="988"></path><path d="M410.49 558.74h-4.14A475 475 0 0 0 299.52 859.6a481.16 481.16 0 0 0 4.84 68.22h106.13A56.83 56.83 0 0 0 467.32 871V615.58a56.83 56.83 0 0 0-56.83-56.84zM871.49 558.74H616.08a56.74 56.74 0 0 0-56.84 56.73V871a56.84 56.84 0 0 0 56.84 56.84h255.41A56.83 56.83 0 0 0 928.32 871V615.58a56.83 56.83 0 0 0-56.83-56.84z" fill="#C2F8FF" p-id="989"></path></svg></span><span style="font-size:30px;"> 特别声明</span></div><div class="tbsm-wz">千屹博客旗下的所有文章，是通过本人课堂学习和课外自学所精心整理的知识巨著<br/>难免会有出错的地方<br/>如果细心的你发现了小失误，可以在下方评论区告诉我，或者私信我！<br />非常感谢大家的热烈支持！</div></div>]]></content>
    
    
    
    <tags>
      
      <tag>Centos 7</tag>
      
      <tag>K8s</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>先电IaaS2.2部署OpenStack</title>
    <link href="/2023/06/19/xiandian-openstack/"/>
    <url>/2023/06/19/xiandian-openstack/</url>
    
    <content type="html"><![CDATA[<meta name="referrer" content="no-referrer"/><h1 id="先电IaaS2-2私有云部署OpenStack"><a href="#先电IaaS2-2私有云部署OpenStack" class="headerlink" title="先电IaaS2.2私有云部署OpenStack"></a>先电IaaS2.2私有云部署OpenStack</h1><h2 id="前期准备"><a href="#前期准备" class="headerlink" title="前期准备"></a>前期准备</h2><h3 id="ip拓扑"><a href="#ip拓扑" class="headerlink" title="ip拓扑"></a>ip拓扑</h3><table><thead><tr><th align="center">主机名</th><th align="center">ip1（NAT）</th><th align="center">ip2（仅主机）</th><th align="center">硬盘</th><th align="center">内存</th></tr></thead><tbody><tr><td align="center">controller-48</td><td align="center">192.168.48.10</td><td align="center">192.168.148.10</td><td align="center">100G</td><td align="center">8G</td></tr><tr><td align="center">computer-48</td><td align="center">192.168.48.20</td><td align="center">192.168.148.20</td><td align="center">100G</td><td align="center">3G</td></tr></tbody></table><h3 id="基础镜像"><a href="#基础镜像" class="headerlink" title="基础镜像"></a>基础镜像</h3><p><a href="https://mirrors.aliyun.com/centos/7/isos/x86_64/CentOS-7-x86_64-DVD-2009.iso?spm=a2c6h.25603864.0.0.74092d1ctaON7P">CentOS-7-x86_64-DVD-2009.iso</a><br><a href="https://pan.quark.cn/s/baeeb5269112">chinaskills_cloud_iaas.iso</a></p><figure class="highlight tap"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs tap">[root@localhost ~]<span class="hljs-comment"># ll</span><br>total 4758568<br>-rw-r--r-- <span class="hljs-number"> 1 </span>root root <span class="hljs-number"> 861155328 </span>Jun<span class="hljs-number"> 19 </span>03:06 CentOS-7-x86_64-DVD-2009.iso<br>-rw-r--r-- <span class="hljs-number"> 1 </span>root root<span class="hljs-number"> 3799093248 </span>Jun<span class="hljs-number"> 19 </span>03:06 chinaskills_cloud_iaas.iso<br></code></pre></td></tr></table></figure><h3 id="虚拟机硬件配置"><a href="#虚拟机硬件配置" class="headerlink" title="虚拟机硬件配置"></a>虚拟机硬件配置</h3><p><img src="https://article.biliimg.com/bfs/article/37de0edeff8b479b0c4dac0e778a9ed3697559838.png" alt="image-20230619160042336"></p><p>controller</p><img src="https://article.biliimg.com/bfs/article/09ad3dc84c075c727267e2db7c87d260697559838.png" alt="image-20230618184223889" style="zoom:67%;" /><p>computer</p><p><img src="https://article.biliimg.com/bfs/article/d83330c37c63eda97a787c3ea1071856697559838.png" alt="image-20230618184522907"></p><p><strong>sdb和sdc是分别作为cinder服务和swift服务的存储磁盘。</strong></p><h3 id="配置主机名和hosts，关闭防火墙和永久关闭selinux"><a href="#配置主机名和hosts，关闭防火墙和永久关闭selinux" class="headerlink" title="配置主机名和hosts，关闭防火墙和永久关闭selinux"></a>配置主机名和hosts，关闭防火墙和永久关闭selinux</h3><p>controller</p><figure class="highlight gams"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><code class="hljs gams">hostnamectl <span class="hljs-keyword">set</span>-hostname <span class="hljs-comment">controller &amp;&amp; bash</span><br>systemctl <span class="hljs-comment">disable firewalld --now</span><br>sed <span class="hljs-comment">-i</span> <span class="hljs-comment">&#x27;s/SELINUX=enforcing/SELINUX=disabled/g&#x27;</span> /etc/<span class="hljs-comment">sysconfig</span>/selinux<br>sed -i <span class="hljs-comment">&#x27;s/SELINUX=enforcing/SELINUX=disabled/g&#x27;</span> /<span class="hljs-comment">etc</span>/selinux/<span class="hljs-comment">config</span><br>echo <span class="hljs-comment">&quot;192.168.48.10 controller&quot;</span> <span class="hljs-comment">&gt;&gt;</span> /etc/<span class="hljs-comment">hosts</span><br>echo <span class="hljs-comment">&quot;192.168.48.20 computer&quot;</span> <span class="hljs-comment">&gt;&gt;</span> /etc/<span class="hljs-comment">hosts</span><br>setenforce <span class="hljs-comment">0</span><br></code></pre></td></tr></table></figure><p>computer</p><figure class="highlight gams"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><code class="hljs gams">hostnamectl <span class="hljs-keyword">set</span>-hostname <span class="hljs-comment">computer &amp;&amp; bash</span><br>systemctl <span class="hljs-comment">disable firewalld --now</span><br>sed <span class="hljs-comment">-i</span> <span class="hljs-comment">&#x27;s/SELINUX=enforcing/SELINUX=disabled/g&#x27;</span> /etc/<span class="hljs-comment">sysconfig</span>/selinux<br>sed -i <span class="hljs-comment">&#x27;s/SELINUX=enforcing/SELINUX=disabled/g&#x27;</span> /<span class="hljs-comment">etc</span>/selinux/<span class="hljs-comment">config</span><br>echo <span class="hljs-comment">&quot;192.168.48.10 controller&quot;</span> <span class="hljs-comment">&gt;&gt;</span> /etc/<span class="hljs-comment">hosts</span><br>echo <span class="hljs-comment">&quot;192.168.48.20 computer&quot;</span> <span class="hljs-comment">&gt;&gt;</span> /etc/<span class="hljs-comment">hosts</span><br>setenforce <span class="hljs-comment">0</span><br></code></pre></td></tr></table></figure><p>确保两者可以互通！</p><h3 id="格式化compute磁盘（在compute中操作）"><a href="#格式化compute磁盘（在compute中操作）" class="headerlink" title="格式化compute磁盘（在compute中操作）"></a>格式化compute磁盘（在compute中操作）</h3><figure class="highlight awk"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs awk">mkfs.xfs <span class="hljs-regexp">/dev/</span>sdb<br>mkfs.xfs <span class="hljs-regexp">/dev/</span>sdc<br></code></pre></td></tr></table></figure><h3 id="配置yum源"><a href="#配置yum源" class="headerlink" title="配置yum源"></a>配置yum源</h3><p>controller</p><figure class="highlight awk"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><code class="hljs awk">rm -rf <span class="hljs-regexp">/etc/yum</span>.repos.d/*<br>cat &gt;&gt; <span class="hljs-regexp">/etc/yum</span>.repos.d/centos.repo &lt;&lt; EOF<br>[centos]<br>name=centos<br>baseurl=file:<span class="hljs-regexp">//</span><span class="hljs-regexp">/qianyios/</span>centos<br>gpgcheck=<span class="hljs-number">0</span><br>enabled=<span class="hljs-number">1</span><br>[iaas]<br>name=iaas<br>baseurl=file:<span class="hljs-regexp">//</span><span class="hljs-regexp">/qianyios/i</span>aas-repo<br>gpgcheck=<span class="hljs-number">0</span><br>enabled=<span class="hljs-number">1</span><br>EOF<br></code></pre></td></tr></table></figure><p>computer</p><figure class="highlight awk"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><code class="hljs awk">mkdir repo.bak<br>mv <span class="hljs-regexp">/etc/yum</span>.repos.d<span class="hljs-regexp">/* repo.bak/</span><br>cat &gt;&gt; <span class="hljs-regexp">/etc/yum</span>.repos.d/centos.repo &lt;&lt; EOF<br>[centos]<br>name=centos<br>baseurl=ftp:<span class="hljs-regexp">//</span><span class="hljs-number">192.168</span>.<span class="hljs-number">48.10</span>/centos<br>gpgcheck=<span class="hljs-number">0</span><br>enabled=<span class="hljs-number">1</span><br>[iaas]<br>name=iaas<br>baseurl=ftp:<span class="hljs-regexp">//</span><span class="hljs-number">192.168</span>.<span class="hljs-number">48.10</span>/iaas-repo<br>gpgcheck=<span class="hljs-number">0</span><br>enabled=<span class="hljs-number">1</span><br>EOF<br></code></pre></td></tr></table></figure><h3 id="挂载iso镜像文件"><a href="#挂载iso镜像文件" class="headerlink" title="挂载iso镜像文件"></a>挂载iso镜像文件</h3><figure class="highlight awk"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><code class="hljs awk"><span class="hljs-comment">#控制节点</span><br>mkdir <span class="hljs-regexp">/qianyios/</span>centos -p<br>mount -o loop CentOS-<span class="hljs-number">7</span>-x86_64-DVD-<span class="hljs-number">2009</span>.iso <span class="hljs-regexp">/mnt/</span><br>cp -rvf <span class="hljs-regexp">/mnt/</span>* <span class="hljs-regexp">/qianyios/</span>centos/<br>umount <span class="hljs-regexp">/mnt/</span><br>mount -o loop chinaskills_cloud_iaas.iso <span class="hljs-regexp">/mnt/</span><br>cp -rvf <span class="hljs-regexp">/mnt/</span>* <span class="hljs-regexp">/qianyios/</span><br>umount <span class="hljs-regexp">/mnt/</span><br>yum clean all &amp;&amp; yum makecache<br></code></pre></td></tr></table></figure><h3 id="搭建ftp服务器"><a href="#搭建ftp服务器" class="headerlink" title="搭建ftp服务器"></a>搭建ftp服务器</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><code class="hljs bash">控制节点<br>yum install vsftpd -y<br><span class="hljs-built_in">cat</span>&gt;&gt; /etc/vsftpd/vsftpd.conf &lt;&lt;<span class="hljs-string">EOF</span><br><span class="hljs-string">anon_root=/qianyios/</span><br><span class="hljs-string">EOF</span><br>systemctl start vsftpd &amp;&amp; systemctl <span class="hljs-built_in">enable</span> vsftpd<br></code></pre></td></tr></table></figure><p>验证操作</p><p>1.清理yum缓存</p><figure class="highlight 1c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs 1c"><span class="hljs-meta">#各节点</span><br>yum clean all <span class="hljs-meta">&amp;&amp; yum makecache</span><br></code></pre></td></tr></table></figure><p>2.在文件资源管理器输入<a href="ftp://192.168.48.10/">ftp://192.168.48.10/</a></p><p><img src="https://article.biliimg.com/bfs/article/6d05d99d9ecb9e7b005e807714fce454697559838.png" alt="image-20230618192456867"></p><h2 id="编辑xiandian变量"><a href="#编辑xiandian变量" class="headerlink" title="编辑xiandian变量"></a>编辑xiandian变量</h2><figure class="highlight awk"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><code class="hljs awk"><span class="hljs-comment">#各节点</span><br>yum install iaas-xiandian -y<br><span class="hljs-comment">#使用sed命令批量去除第一个#注释符为空</span><br>sed -i -e <span class="hljs-string">&#x27;s/^#//&#x27;</span>g <span class="hljs-regexp">/etc/</span>xiandian/openrc.sh<br>使用sed命令批量修改密码默认<span class="hljs-number">000000</span><br>sed -i -e <span class="hljs-string">&#x27;s/PASS=/PASS=000000/&#x27;</span>g <span class="hljs-regexp">/etc/</span>xiandian/openrc.sh<br></code></pre></td></tr></table></figure><figure class="highlight routeros"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br></pre></td><td class="code"><pre><code class="hljs routeros">grep -v <span class="hljs-string">&quot;^#&quot;</span> /etc/xiandian/openrc.sh | grep -v <span class="hljs-string">&quot;^$&quot;</span><br><span class="hljs-attribute">HOST_IP</span>=192.168.48.10<br><span class="hljs-attribute">HOST_PASS</span>=123456<br><span class="hljs-comment">#ssh登入密码</span><br><span class="hljs-attribute">HOST_NAME</span>=controller<br><span class="hljs-attribute">HOST_IP_NODE</span>=192.168.48.20<br><span class="hljs-attribute">HOST_PASS_NODE</span>=123456<br><span class="hljs-comment">#ssh登入密码</span><br><span class="hljs-attribute">HOST_NAME_NODE</span>=computer<br><span class="hljs-attribute">network_segment_IP</span>=192.168.48.0/24<br><span class="hljs-attribute">RABBIT_USER</span>=openstack<br><span class="hljs-attribute">RABBIT_PASS</span>=000000<br><span class="hljs-attribute">DB_PASS</span>=000000<br><span class="hljs-attribute">DOMAIN_NAME</span>=demo<br><span class="hljs-attribute">ADMIN_PASS</span>=000000<br><span class="hljs-attribute">DEMO_PASS</span>=000000<br><span class="hljs-attribute">KEYSTONE_DBPASS</span>=000000<br><span class="hljs-attribute">GLANCE_DBPASS</span>=000000<br><span class="hljs-attribute">GLANCE_PASS</span>=000000<br><span class="hljs-attribute">NOVA_DBPASS</span>=000000<br><span class="hljs-attribute">NOVA_PASS</span>=000000<br><span class="hljs-attribute">NEUTRON_DBPASS</span>=000000<br><span class="hljs-attribute">NEUTRON_PASS</span>=000000<br><span class="hljs-attribute">METADATA_SECRET</span>=000000<br><span class="hljs-attribute">INTERFACE_IP</span>=192.168.48.10<br><span class="hljs-comment">#复制到第二台机的时候，记得改成192.168.48.20</span><br><span class="hljs-attribute">INTERFACE_NAME</span>=ens36<br><span class="hljs-comment">#第二块网卡的名字</span><br><span class="hljs-attribute">Physical_NAME</span>=provider<br><span class="hljs-attribute">minvlan</span>=2<br><span class="hljs-attribute">maxvlan</span>=300<br><span class="hljs-attribute">CINDER_DBPASS</span>=000000<br><span class="hljs-attribute">CINDER_PASS</span>=000000<br><span class="hljs-attribute">BLOCK_DISK</span>=sdb<br><span class="hljs-attribute">SWIFT_PASS</span>=000000<br><span class="hljs-attribute">OBJECT_DISK</span>=sdc<br><span class="hljs-attribute">STORAGE_LOCAL_NET_IP</span>=192.168.48.20<br><span class="hljs-attribute">HEAT_DBPASS</span>=000000<br><span class="hljs-attribute">HEAT_PASS</span>=000000<br><span class="hljs-attribute">ZUN_DBPASS</span>=000000<br><span class="hljs-attribute">ZUN_PASS</span>=000000<br><span class="hljs-attribute">KURYR_DBPASS</span>=000000<br><span class="hljs-attribute">KURYR_PASS</span>=000000<br><span class="hljs-attribute">CEILOMETER_DBPASS</span>=000000<br><span class="hljs-attribute">CEILOMETER_PASS</span>=000000<br><span class="hljs-attribute">AODH_DBPASS</span>=000000<br><span class="hljs-attribute">AODH_PASS</span>=000000<br><span class="hljs-attribute">BARBICAN_DBPASS</span>=000000<br><span class="hljs-attribute">BARBICAN_PASS</span>=000000<br><br></code></pre></td></tr></table></figure><figure class="highlight awk"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs awk">scp <span class="hljs-regexp">/etc/</span>xiandian<span class="hljs-regexp">/openrc.sh computer:/</span>etc<span class="hljs-regexp">/xiandian/</span>openrc.sh <br><span class="hljs-comment">#以下在计算节点</span><br>sed -i <span class="hljs-string">&#x27;s/INTERFACE_IP=192.168.48.10/INTERFACE_IP=192.168.48.20/g&#x27;</span> <span class="hljs-regexp">/etc/</span>xiandian/openrc.sh<br></code></pre></td></tr></table></figure><h2 id="安装平台基本服务"><a href="#安装平台基本服务" class="headerlink" title="安装平台基本服务"></a>安装平台基本服务</h2><figure class="highlight awk"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br></pre></td><td class="code"><pre><code class="hljs awk">[root@controller ~]<span class="hljs-comment"># iaas-pre-host.sh </span><br>[root@compute ~]<span class="hljs-comment"># iaas-pre-host.sh </span><br><span class="hljs-comment">#双节点</span><br>reboot<br><span class="hljs-comment"># 可同时执行，执行完毕后脚本会提示重启，不然rabbitmq服务会报错！！！此脚本会初始化虚拟机环境，如修改主机</span><br>名、主机映射、时间同步等，自己可去尝试解读脚本，手工搭建平台！！！！，由于重启可能导致平台出现问题可用ssh<br>连接自己的IP地址重新登陆，只要出现屏幕登录时间以及看到屏幕欢迎界面即可<br>Controller节点<br>iaas-install-mysql.sh<br>iaas-install-keystone.sh<br>iaas-install-glance.sh<br><br>Controller节点<br>iaas-install-nova-controller.sh<br>Compute节点<br>iaas-install-nova-compute.sh<br><br>Controller节点<br>sed -i <span class="hljs-string">&#x27;s/yum install openstack-neutron openstack-neutron-ml2 openstack-neutron-linuxbridge ebtables -y/yum install openstack-neutron openstack-neutron-ml2 openstack-neutron-linuxbridge ebtables -y --skip-broken/g&#x27;</span> <span class="hljs-regexp">/usr/</span>local<span class="hljs-regexp">/bin/i</span>aas-install-neutron-controller.sh<br><br>iaas-install-neutron-controller.sh<br>Compute节点<br>iaas-install-neutron-compute.sh<br><br>Controller节点<br>iaas-install-dashboard.sh<br><br>从Ftp服务器上下载镜像到本地。（在controller中操作）<br>source <span class="hljs-regexp">/etc/</span>keystone/admin-openrc.sh<br>glance image-create --name CentOS7.<span class="hljs-number">5</span> --disk-format qcow2 --container-format bare --progress &lt; <span class="hljs-regexp">/qianyios/im</span>ages/CentOS_7.<span class="hljs-number">5</span>_x86_64_XD.qcow2<br><br></code></pre></td></tr></table></figure><p>访问页面<a href="http://192.168.48.10/dashboard/">http://192.168.48.10/dashboard/</a></p><p><img src="https://article.biliimg.com/bfs/article/3aa6fbe787dfa8370e3ef5f4e90c740f697559838.png" alt="image-20230619014112445"></p><h2 id="更多服务"><a href="#更多服务" class="headerlink" title="更多服务"></a>更多服务</h2><figure class="highlight cmake"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><code class="hljs cmake"><span class="hljs-comment">#所以安装脚本都在/usr/local/bin/目录下</span><br><span class="hljs-comment">#按照自己需求安装</span><br>安装Swift对象存储服务<br>iaas-<span class="hljs-keyword">install</span>-swift-controller.sh<br>安装Heat编配服务<br>iaas-<span class="hljs-keyword">install</span>-heat.sh<br>安装Zun服务<br>iaas-<span class="hljs-keyword">install</span>-zun-controller.sh<br>安装Ceilometer监控服务<br>iaas-<span class="hljs-keyword">install</span>-ceilometer-controller.sh<br>安装Aodh监控服务<br>iaas-<span class="hljs-keyword">install</span>-aodh.sh<br></code></pre></td></tr></table></figure><div class="tbsm" style="margin-top:54px;"><div class="tbsm-top"><span><svg t="1674654360507" class="icon" viewBox="0 0 1024 1024" version="1.1" xmlns="http://www.w3.org/2000/svg" p-id="987" data-spm-anchor-id="a313x.7781069.0.i0" width="35" height="35"><path d="M410.49 97.74H155.08a56.74 56.74 0 0 0-56.84 56.73V410a56.84 56.84 0 0 0 56.84 56.84h255.41A56.83 56.83 0 0 0 467.32 410V154.58a56.83 56.83 0 0 0-56.83-56.84zM410.49 558.74H155.08a56.74 56.74 0 0 0-56.84 56.73V871a56.84 56.84 0 0 0 56.84 56.84h255.41A56.83 56.83 0 0 0 467.32 871V615.58a56.83 56.83 0 0 0-56.83-56.84zM871.49 558.74H616.08a56.74 56.74 0 0 0-56.84 56.73V871a56.84 56.84 0 0 0 56.84 56.84h255.41A56.83 56.83 0 0 0 928.32 871V615.58a56.83 56.83 0 0 0-56.83-56.84z" fill="#66EEFF" p-id="988"></path><path d="M410.49 558.74h-4.14A475 475 0 0 0 299.52 859.6a481.16 481.16 0 0 0 4.84 68.22h106.13A56.83 56.83 0 0 0 467.32 871V615.58a56.83 56.83 0 0 0-56.83-56.84zM871.49 558.74H616.08a56.74 56.74 0 0 0-56.84 56.73V871a56.84 56.84 0 0 0 56.84 56.84h255.41A56.83 56.83 0 0 0 928.32 871V615.58a56.83 56.83 0 0 0-56.83-56.84z" fill="#C2F8FF" p-id="989"></path></svg></span><span style="font-size:30px;"> 特别声明</span></div><div class="tbsm-wz">千屹博客旗下的所有文章，是通过本人课堂学习和课外自学所精心整理的知识巨著<br/>难免会有出错的地方<br/>如果细心的你发现了小失误，可以在下方评论区告诉我，或者私信我！<br />非常感谢大家的热烈支持！</div></div>]]></content>
    
    
    
    <tags>
      
      <tag>Centos 7</tag>
      
      <tag>OpenStack</tag>
      
      <tag>Iaas</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>ChatGPT千屹镜像站</title>
    <link href="/2023/06/14/ChatGPT/"/>
    <url>/2023/06/14/ChatGPT/</url>
    
    <content type="html"><![CDATA[<meta name="referrer" content="no-referrer"/><div class="all animate__animated  animate__infinite animate__fadeIn animate__slow" style="display: flex;justify-content: center;margin-bottom:30px; ">        <div class="icon" style="width:36px;height: 36px;float:left;background-size: cover">            <svg t="1684948258846" class="icon" viewBox="0 0 1024 1024" version="1.1" xmlns="http://www.w3.org/2000/svg" p-id="1080" width="36" height="36"><path d="M334.12987 788.779221m-187.012987 0a187.012987 187.012987 0 1 0 374.025974 0 187.012987 187.012987 0 1 0-374.025974 0Z" fill="#FFDEBB" p-id="1081"></path><path d="M114.094545 861.779117C114.094545 925.124156 164.987013 975.792208 228.608 975.792208h611.893195c63.617662 0 114.511792-50.673039 114.511792-114.013091V163.883221C955.012987 100.543169 904.118857 49.87013 840.501195 49.87013H230.925299C167.307636 49.87013 116.413506 100.543169 116.413506 163.883221v82.920727H86.336831C77.082597 246.803948 68.987013 254.866286 68.987013 264.075636v50.674702c0 9.212675 8.095584 17.276675 17.349818 17.276675H116.413506v64.493714H86.336831C77.082597 396.520727 68.987013 404.57974 68.987013 413.792416v50.674701c0 9.211013 8.095584 17.271688 17.349818 17.271688H116.413506v62.188052H86.336831C77.082597 543.926857 68.987013 551.995844 68.987013 561.205195v52.972052c0 9.216 8.095584 17.276675 17.349818 17.276675H116.413506v64.492052H86.336831C77.082597 695.945974 68.987013 704.008312 68.987013 713.219325v50.673039c0 9.212675 8.095584 17.278338 17.349818 17.278337H116.413506v54.125715l-2.313974 26.487688-0.004987-0.004987z m94.138182-164.849039H167.433974v-64.432208h40.798753c9.329039 0 17.487792-8.059013 17.487792-17.263376v-50.626494c0-9.202701-8.158753-17.25839-17.487792-17.25839H167.433974v-64.432207h40.798753c9.329039 0 17.487792-8.052364 17.487792-17.256728v-50.63148c0-9.204364-8.158753-17.25839-17.487792-17.25839H167.433974v-64.432208h40.798753c9.329039 0 17.487792-8.054026 17.487792-17.258389v-50.626494c0-9.204364-8.158753-17.261714-17.487792-17.261714H167.433974V164.200727c0-31.069091 24.481247-55.229506 55.949299-55.229506h616.610909c31.474701 0 55.950961 24.165403 55.950961 55.229506v697.260883c0 31.069091-24.47626 55.229506-55.950961 55.229507H223.384935c-31.468052 0-55.949299-24.160416-55.949299-55.229507v-80.540259h40.798754c9.329039 0 17.487792-8.052364 17.487792-17.256728v-47.17548c0-11.505039-8.158753-19.559065-17.487792-19.559065z m162.819325-272.751377h380.342857c25.357299 0 46.10161-21.274597 46.10161-47.28187V235.054545c0-26.002286-20.744312-47.28187-46.103272-47.28187H371.052052c-25.353974 0-46.10161 21.274597-46.10161 47.28187v140.660364c0 27.189195 20.744312 48.463792 46.10161 48.463792z" fill="#86BC9F" p-id="1082"></path></svg>        </div>        <div class="wz" style="padding:0 5px;line-height: 38px;height: 36px;float:left;        font-size: 20px;text-align: center;letter-spacing: 5px;">            <a href="https://chat.qianyios.top">ChatGPT千屹镜像站</a>        </div>                <div class="icon" style="width:36px;height: 36px;float:left;background-size: cover">            <svg t="1684948258846" class="icon" viewBox="0 0 1024 1024" version="1.1" xmlns="http://www.w3.org/2000/svg" p-id="1080" width="36" height="36"><path d="M334.12987 788.779221m-187.012987 0a187.012987 187.012987 0 1 0 374.025974 0 187.012987 187.012987 0 1 0-374.025974 0Z" fill="#FFDEBB" p-id="1081"></path><path d="M114.094545 861.779117C114.094545 925.124156 164.987013 975.792208 228.608 975.792208h611.893195c63.617662 0 114.511792-50.673039 114.511792-114.013091V163.883221C955.012987 100.543169 904.118857 49.87013 840.501195 49.87013H230.925299C167.307636 49.87013 116.413506 100.543169 116.413506 163.883221v82.920727H86.336831C77.082597 246.803948 68.987013 254.866286 68.987013 264.075636v50.674702c0 9.212675 8.095584 17.276675 17.349818 17.276675H116.413506v64.493714H86.336831C77.082597 396.520727 68.987013 404.57974 68.987013 413.792416v50.674701c0 9.211013 8.095584 17.271688 17.349818 17.271688H116.413506v62.188052H86.336831C77.082597 543.926857 68.987013 551.995844 68.987013 561.205195v52.972052c0 9.216 8.095584 17.276675 17.349818 17.276675H116.413506v64.492052H86.336831C77.082597 695.945974 68.987013 704.008312 68.987013 713.219325v50.673039c0 9.212675 8.095584 17.278338 17.349818 17.278337H116.413506v54.125715l-2.313974 26.487688-0.004987-0.004987z m94.138182-164.849039H167.433974v-64.432208h40.798753c9.329039 0 17.487792-8.059013 17.487792-17.263376v-50.626494c0-9.202701-8.158753-17.25839-17.487792-17.25839H167.433974v-64.432207h40.798753c9.329039 0 17.487792-8.052364 17.487792-17.256728v-50.63148c0-9.204364-8.158753-17.25839-17.487792-17.25839H167.433974v-64.432208h40.798753c9.329039 0 17.487792-8.054026 17.487792-17.258389v-50.626494c0-9.204364-8.158753-17.261714-17.487792-17.261714H167.433974V164.200727c0-31.069091 24.481247-55.229506 55.949299-55.229506h616.610909c31.474701 0 55.950961 24.165403 55.950961 55.229506v697.260883c0 31.069091-24.47626 55.229506-55.950961 55.229507H223.384935c-31.468052 0-55.949299-24.160416-55.949299-55.229507v-80.540259h40.798754c9.329039 0 17.487792-8.052364 17.487792-17.256728v-47.17548c0-11.505039-8.158753-19.559065-17.487792-19.559065z m162.819325-272.751377h380.342857c25.357299 0 46.10161-21.274597 46.10161-47.28187V235.054545c0-26.002286-20.744312-47.28187-46.103272-47.28187H371.052052c-25.353974 0-46.10161 21.274597-46.10161 47.28187v140.660364c0 27.189195 20.744312 48.463792 46.10161 48.463792z" fill="#86BC9F" p-id="1082"></path></svg>        </div>    </div><div class="animate__animated animate__slideInRight animate__slow animate__slower "style="font-size: 20px;letter-spacing: 5px; text-align:center;">     点击标题进入聊天哦！<br>    访问密码：<span style="color:red">1</span>   （数字1）<br>    一个会解决你大部分学习问题的聊天机器人！！<br>    还不趁现在好好利用他！</div><p><img src="https://article.biliimg.com/bfs/article/4578264c6472100c59b20d4996759613697559838.png" alt="image-20230614164235386"></p><p><img src="https://article.biliimg.com/bfs/article/e80b12a0d40f5a966670e88dbb8e449b697559838.png" alt="cover"></p><div class="tbsm" style="margin-top:54px;"><div class="tbsm-top"><span><svg t="1674654360507" class="icon" viewBox="0 0 1024 1024" version="1.1" xmlns="http://www.w3.org/2000/svg" p-id="987" data-spm-anchor-id="a313x.7781069.0.i0" width="35" height="35"><path d="M410.49 97.74H155.08a56.74 56.74 0 0 0-56.84 56.73V410a56.84 56.84 0 0 0 56.84 56.84h255.41A56.83 56.83 0 0 0 467.32 410V154.58a56.83 56.83 0 0 0-56.83-56.84zM410.49 558.74H155.08a56.74 56.74 0 0 0-56.84 56.73V871a56.84 56.84 0 0 0 56.84 56.84h255.41A56.83 56.83 0 0 0 467.32 871V615.58a56.83 56.83 0 0 0-56.83-56.84zM871.49 558.74H616.08a56.74 56.74 0 0 0-56.84 56.73V871a56.84 56.84 0 0 0 56.84 56.84h255.41A56.83 56.83 0 0 0 928.32 871V615.58a56.83 56.83 0 0 0-56.83-56.84z" fill="#66EEFF" p-id="988"></path><path d="M410.49 558.74h-4.14A475 475 0 0 0 299.52 859.6a481.16 481.16 0 0 0 4.84 68.22h106.13A56.83 56.83 0 0 0 467.32 871V615.58a56.83 56.83 0 0 0-56.83-56.84zM871.49 558.74H616.08a56.74 56.74 0 0 0-56.84 56.73V871a56.84 56.84 0 0 0 56.84 56.84h255.41A56.83 56.83 0 0 0 928.32 871V615.58a56.83 56.83 0 0 0-56.83-56.84z" fill="#C2F8FF" p-id="989"></path></svg></span><span style="font-size:30px;"> 特别声明</span></div><div class="tbsm-wz">千屹博客旗下的所有文章，是通过本人课堂学习和课外自学所精心整理的知识巨著<br/>难免会有出错的地方<br/>如果细心的你发现了小失误，可以在下方评论区告诉我，或者私信我！<br />非常感谢大家的热烈支持！</div></div>]]></content>
    
    
    
    <tags>
      
      <tag>ChatGPT</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>公共留言区</title>
    <link href="/2023/05/24/%E5%8D%83%E5%B1%B9%E7%95%99%E8%A8%80%E5%8C%BA/"/>
    <url>/2023/05/24/%E5%8D%83%E5%B1%B9%E7%95%99%E8%A8%80%E5%8C%BA/</url>
    
    <content type="html"><![CDATA[<meta name="referrer" content="no-referrer"/><link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/animate.css/4.1.1/animate.min.css" /><div class="all animate__animated  animate__infinite animate__fadeIn animate__slow" style="display: flex;justify-content: center;margin-bottom:30px; ">        <div class="icon" style="width:36px;height: 36px;float:left;background-size: cover">            <svg t="1684948258846" class="icon" viewBox="0 0 1024 1024" version="1.1" xmlns="http://www.w3.org/2000/svg" p-id="1080" width="36" height="36"><path d="M334.12987 788.779221m-187.012987 0a187.012987 187.012987 0 1 0 374.025974 0 187.012987 187.012987 0 1 0-374.025974 0Z" fill="#FFDEBB" p-id="1081"></path><path d="M114.094545 861.779117C114.094545 925.124156 164.987013 975.792208 228.608 975.792208h611.893195c63.617662 0 114.511792-50.673039 114.511792-114.013091V163.883221C955.012987 100.543169 904.118857 49.87013 840.501195 49.87013H230.925299C167.307636 49.87013 116.413506 100.543169 116.413506 163.883221v82.920727H86.336831C77.082597 246.803948 68.987013 254.866286 68.987013 264.075636v50.674702c0 9.212675 8.095584 17.276675 17.349818 17.276675H116.413506v64.493714H86.336831C77.082597 396.520727 68.987013 404.57974 68.987013 413.792416v50.674701c0 9.211013 8.095584 17.271688 17.349818 17.271688H116.413506v62.188052H86.336831C77.082597 543.926857 68.987013 551.995844 68.987013 561.205195v52.972052c0 9.216 8.095584 17.276675 17.349818 17.276675H116.413506v64.492052H86.336831C77.082597 695.945974 68.987013 704.008312 68.987013 713.219325v50.673039c0 9.212675 8.095584 17.278338 17.349818 17.278337H116.413506v54.125715l-2.313974 26.487688-0.004987-0.004987z m94.138182-164.849039H167.433974v-64.432208h40.798753c9.329039 0 17.487792-8.059013 17.487792-17.263376v-50.626494c0-9.202701-8.158753-17.25839-17.487792-17.25839H167.433974v-64.432207h40.798753c9.329039 0 17.487792-8.052364 17.487792-17.256728v-50.63148c0-9.204364-8.158753-17.25839-17.487792-17.25839H167.433974v-64.432208h40.798753c9.329039 0 17.487792-8.054026 17.487792-17.258389v-50.626494c0-9.204364-8.158753-17.261714-17.487792-17.261714H167.433974V164.200727c0-31.069091 24.481247-55.229506 55.949299-55.229506h616.610909c31.474701 0 55.950961 24.165403 55.950961 55.229506v697.260883c0 31.069091-24.47626 55.229506-55.950961 55.229507H223.384935c-31.468052 0-55.949299-24.160416-55.949299-55.229507v-80.540259h40.798754c9.329039 0 17.487792-8.052364 17.487792-17.256728v-47.17548c0-11.505039-8.158753-19.559065-17.487792-19.559065z m162.819325-272.751377h380.342857c25.357299 0 46.10161-21.274597 46.10161-47.28187V235.054545c0-26.002286-20.744312-47.28187-46.103272-47.28187H371.052052c-25.353974 0-46.10161 21.274597-46.10161 47.28187v140.660364c0 27.189195 20.744312 48.463792 46.10161 48.463792z" fill="#86BC9F" p-id="1082"></path></svg>        </div>        <div class="wz" style="padding:0 5px;line-height: 38px;height: 36px;float:left;        font-size: 20px;text-align: center;letter-spacing: 5px;">            千屹留言区        </div>                <div class="icon" style="width:36px;height: 36px;float:left;background-size: cover">            <svg t="1684948258846" class="icon" viewBox="0 0 1024 1024" version="1.1" xmlns="http://www.w3.org/2000/svg" p-id="1080" width="36" height="36"><path d="M334.12987 788.779221m-187.012987 0a187.012987 187.012987 0 1 0 374.025974 0 187.012987 187.012987 0 1 0-374.025974 0Z" fill="#FFDEBB" p-id="1081"></path><path d="M114.094545 861.779117C114.094545 925.124156 164.987013 975.792208 228.608 975.792208h611.893195c63.617662 0 114.511792-50.673039 114.511792-114.013091V163.883221C955.012987 100.543169 904.118857 49.87013 840.501195 49.87013H230.925299C167.307636 49.87013 116.413506 100.543169 116.413506 163.883221v82.920727H86.336831C77.082597 246.803948 68.987013 254.866286 68.987013 264.075636v50.674702c0 9.212675 8.095584 17.276675 17.349818 17.276675H116.413506v64.493714H86.336831C77.082597 396.520727 68.987013 404.57974 68.987013 413.792416v50.674701c0 9.211013 8.095584 17.271688 17.349818 17.271688H116.413506v62.188052H86.336831C77.082597 543.926857 68.987013 551.995844 68.987013 561.205195v52.972052c0 9.216 8.095584 17.276675 17.349818 17.276675H116.413506v64.492052H86.336831C77.082597 695.945974 68.987013 704.008312 68.987013 713.219325v50.673039c0 9.212675 8.095584 17.278338 17.349818 17.278337H116.413506v54.125715l-2.313974 26.487688-0.004987-0.004987z m94.138182-164.849039H167.433974v-64.432208h40.798753c9.329039 0 17.487792-8.059013 17.487792-17.263376v-50.626494c0-9.202701-8.158753-17.25839-17.487792-17.25839H167.433974v-64.432207h40.798753c9.329039 0 17.487792-8.052364 17.487792-17.256728v-50.63148c0-9.204364-8.158753-17.25839-17.487792-17.25839H167.433974v-64.432208h40.798753c9.329039 0 17.487792-8.054026 17.487792-17.258389v-50.626494c0-9.204364-8.158753-17.261714-17.487792-17.261714H167.433974V164.200727c0-31.069091 24.481247-55.229506 55.949299-55.229506h616.610909c31.474701 0 55.950961 24.165403 55.950961 55.229506v697.260883c0 31.069091-24.47626 55.229506-55.950961 55.229507H223.384935c-31.468052 0-55.949299-24.160416-55.949299-55.229507v-80.540259h40.798754c9.329039 0 17.487792-8.052364 17.487792-17.256728v-47.17548c0-11.505039-8.158753-19.559065-17.487792-19.559065z m162.819325-272.751377h380.342857c25.357299 0 46.10161-21.274597 46.10161-47.28187V235.054545c0-26.002286-20.744312-47.28187-46.103272-47.28187H371.052052c-25.353974 0-46.10161 21.274597-46.10161 47.28187v140.660364c0 27.189195 20.744312 48.463792 46.10161 48.463792z" fill="#86BC9F" p-id="1082"></path></svg>        </div>    </div><div class="animate__animated animate__slideInRight animate__slow animate__slower "style="font-size: 20px;letter-spacing: 5px; text-align:center;">     这里是公共留言区，有什么问题和建议都可以畅所欲言，在下面留言哦！！</div><p><img src="https://article.biliimg.com/bfs/article/3fc0a20270b358b2be9c07962847e35b697559838.png" alt="image-20230525011705837"></p>]]></content>
    
    
    
    <tags>
      
      <tag>Public</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>Centos7 部署 k8s（基于docker运行时）</title>
    <link href="/2023/05/19/dK8s1.26.1/"/>
    <url>/2023/05/19/dK8s1.26.1/</url>
    
    <content type="html"><![CDATA[<meta name="referrer" content="no-referrer"/><h1 id="Centos7-部-署-k8s（基于docker运行时）"><a href="#Centos7-部-署-k8s（基于docker运行时）" class="headerlink" title="Centos7 部 署 k8s（基于docker运行时）"></a>Centos7 部 署 k8s（基于docker运行时）</h1><p>因本教程的个别资源需要外网才可下载，可以通过<a href="https://pan.quark.cn/s/e8d31c514e9f">千屹资源</a>下载k8s资源</p><h2 id="节点分布架构"><a href="#节点分布架构" class="headerlink" title="节点分布架构"></a>节点分布架构</h2><p>1、Master主机：2核CPU、4G内存、20G硬盘<br>2、Node主机：4+核CPU、8G+内存、40G+硬盘</p><table><thead><tr><th>Hostname</th><th>IP</th><th>说明</th></tr></thead><tbody><tr><td>master</td><td>192.168.48.100</td><td>master</td></tr><tr><td>node01</td><td>192.168.48.101</td><td>node01</td></tr><tr><td>node02</td><td>192.168.48.102</td><td>node02</td></tr></tbody></table><h2 id="制作master模板机"><a href="#制作master模板机" class="headerlink" title="制作master模板机"></a>制作master模板机</h2><h3 id="升级系统内核"><a href="#升级系统内核" class="headerlink" title="升级系统内核"></a>升级系统内核</h3><figure class="highlight autoit"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs autoit">[root<span class="hljs-symbol">@localhost</span> ~]<span class="hljs-meta"># uname -sr</span><br>Linux <span class="hljs-number">3.10</span><span class="hljs-number">.0</span><span class="hljs-number">-1160.</span>el7.x86_64<br></code></pre></td></tr></table></figure><p>下载必要的网页工具</p><figure class="highlight cmake"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs cmake">yum <span class="hljs-keyword">install</span> -y vim wget<br></code></pre></td></tr></table></figure><p>启用ELRepo仓库</p><figure class="highlight apache"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs apache"><span class="hljs-attribute">yum</span> install -y https://www.elrepo.org/elrepo-release-<span class="hljs-number">7</span>.<span class="hljs-number">0</span>-<span class="hljs-number">4</span>.el7.elrepo.noarch.rpm<br><span class="hljs-attribute">yum</span> clean <span class="hljs-literal">all</span> &amp;&amp; yum makecache<br></code></pre></td></tr></table></figure><p>仓库启用后，列出可用的系统内核相关包</p><figure class="highlight abnf"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs abnf">yum --disablerepo<span class="hljs-operator">=</span><span class="hljs-string">&quot;*&quot;</span> --enablerepo<span class="hljs-operator">=</span><span class="hljs-string">&quot;elrepo-kernel&quot;</span> list available <br></code></pre></td></tr></table></figure><p>安装主线稳定内核</p><figure class="highlight routeros"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs routeros">yum <span class="hljs-attribute">--enablerepo</span>=elrepo-kernel install kernel-ml -y<br></code></pre></td></tr></table></figure><p>设置 GRUB 默认的内核版本</p><p>打开并编辑 &#x2F;etc&#x2F;default&#x2F;grub并设置CRUB_DEFAULT&#x3D;0,让GRUB初始化页面的第一个内核作为默认内核。</p><p>运行命令重新创建内核配置，重启并应用最新内核，开机后检查内核版本</p><figure class="highlight awk"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><code class="hljs awk">sed -i <span class="hljs-string">&#x27;s/GRUB_DEFAULT=saved/GRUB_DEFAULT=0/g&#x27;</span> <span class="hljs-regexp">/etc/</span>default/grub<br>grub2-mkconfig -o <span class="hljs-regexp">/boot/g</span>rub2/grub.cfg<br>reboot<br>uname -sr<br>[root@localhost ~]<span class="hljs-comment"># uname -sr</span><br>Linux <span class="hljs-number">6.3</span>.<span class="hljs-number">2</span>-<span class="hljs-number">1</span>.el7.elrepo.x86_64<br></code></pre></td></tr></table></figure><h3 id="修改主机名"><a href="#修改主机名" class="headerlink" title="修改主机名"></a>修改主机名</h3><figure class="highlight dsconfig"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs dsconfig"><span class="hljs-string">hostnamectl</span> <span class="hljs-built_in">set-hostname</span> <span class="hljs-string">master</span> &amp;&amp; <span class="hljs-string">bash</span><br></code></pre></td></tr></table></figure><h3 id="修改host解析"><a href="#修改host解析" class="headerlink" title="修改host解析"></a>修改host解析</h3><figure class="highlight accesslog"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs accesslog">cat &gt;&gt; /etc/hosts  &lt;&lt; EOF<br><span class="hljs-number">192.168.48.100</span> master<br><span class="hljs-number">192.168.48.101</span> node01<br><span class="hljs-number">192.168.48.102</span> node02<br>EOF<br></code></pre></td></tr></table></figure><h3 id="关闭防火墙和selinux"><a href="#关闭防火墙和selinux" class="headerlink" title="关闭防火墙和selinux"></a>关闭防火墙和selinux</h3><figure class="highlight nsis"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><code class="hljs nsis"><span class="hljs-params">system</span>ctl stop firewalld &amp;&amp; <span class="hljs-params">system</span>ctl disable firewalld &amp;&amp; <span class="hljs-params">system</span>ctl status firewalld<br><br>setenforce <span class="hljs-number">0</span><br>sed -i <span class="hljs-string">&#x27;s/^SELINUX=enforcing$/SELINUX=permissive/&#x27;</span> /etc/selinux/config<br><span class="hljs-comment">#查看selinux的状态</span><br>getenforce<br></code></pre></td></tr></table></figure><h3 id="关闭swap分区"><a href="#关闭swap分区" class="headerlink" title="关闭swap分区"></a>关闭swap分区</h3><figure class="highlight awk"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><code class="hljs awk"><span class="hljs-comment">#临时关闭</span><br>swapoff -a<br><span class="hljs-comment">#永久关闭修改/etc/fstab 文件，注释掉 SWAP 的自动挂载，</span><br>sed -i <span class="hljs-string">&#x27;s/.*swap.*/#&amp;/&#x27;</span>  <span class="hljs-regexp">/etc/</span>fstab<br><span class="hljs-comment">#验证</span><br>free -m<br></code></pre></td></tr></table></figure><h3 id="时间同步"><a href="#时间同步" class="headerlink" title="时间同步"></a>时间同步</h3><figure class="highlight dsconfig"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><code class="hljs dsconfig"><span class="hljs-comment">#设置时区</span><br><span class="hljs-string">sudo</span> <span class="hljs-string">timedatectl</span> <span class="hljs-built_in">set-timezone</span> <span class="hljs-string">Asia</span>/<span class="hljs-string">Shanghai</span><br><span class="hljs-comment">#安装ntpdate</span><br><span class="hljs-string">yum</span> <span class="hljs-string">install</span> <span class="hljs-string">ntpdate</span> -<span class="hljs-string">y</span><br><span class="hljs-string">ntpdate</span> <span class="hljs-string">time</span>.<span class="hljs-string">windows</span>.<span class="hljs-string">com</span><br>备注:<span class="hljs-string">ntpdate</span>源也可以设置成其它如：<span class="hljs-string">ntpdate</span> <span class="hljs-string">cn</span>.<span class="hljs-string">pool</span>.<span class="hljs-string">net</span>.<span class="hljs-string">org</span><br><span class="hljs-comment">#将系统时间写入到系统硬件当中</span><br><span class="hljs-string">hwclock</span> -<span class="hljs-string">w</span><br><span class="hljs-comment">#验证时间</span><br></code></pre></td></tr></table></figure><h3 id="加载内核模块"><a href="#加载内核模块" class="headerlink" title=".加载内核模块"></a>.加载内核模块</h3><p>br_netfilter模块用于将桥接流量转发至iptables链，加载br_netfilter模块</p><figure class="highlight arcade"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs arcade">modprobe br_netfilter<br>echo <span class="hljs-string">&quot;modprobe br_netfilter&quot;</span> &gt;&gt; <span class="hljs-regexp">/etc/</span>profile<br></code></pre></td></tr></table></figure><p>#验证模块是否加载成功：</p><figure class="highlight crmsh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs crmsh">[root@<span class="hljs-keyword">master</span> <span class="hljs-title">~]# lsmod</span> |grep br_netfilter<br>br_netfilter           <span class="hljs-number">32768</span>  <span class="hljs-number">0</span><br><br></code></pre></td></tr></table></figure><h3 id="修改内核参数"><a href="#修改内核参数" class="headerlink" title="修改内核参数"></a>修改内核参数</h3><figure class="highlight routeros"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><code class="hljs routeros"><span class="hljs-comment">#开启网桥模式，可将网桥的流量传递给iptables链</span><br>cat &gt; /etc/sysctl.d/k8s.conf &lt;&lt; EOF<br>net.bridge.<span class="hljs-attribute">bridge-nf-call-ip6tables</span>=1<br>net.bridge.<span class="hljs-attribute">bridge-nf-call-iptables</span>=1<br>net.ipv4.<span class="hljs-attribute">ip_forward</span>=1<br>vm.<span class="hljs-attribute">swappiness</span>=0<br>EOF<br><span class="hljs-comment">#使配置生效</span><br>sysctl -p /etc/sysctl.d/k8s.conf<br></code></pre></td></tr></table></figure><p>说明：<br>        net.bridge.bridge-nf-call-ip6tables 和 net.bridge.bridge-nf-call-iptables，netfilter实际上既可以在L2层过滤，也可以在L3层过滤的。当值为 0 ，即要求iptables不对bridge的数据进行处理。当值为 1，也就意味着二层的网桥在转发包时也会被iptables的FORWARD规则所过滤，这样就会出现L3层的iptables rules去过滤L2的帧的问题。<br>        max_map_count，文件包含限制一个进程可以拥有的VMA(虚拟内存区域)的数量。如不设置可能会报错：“max virtual memory areas vm.max_map_count [65530] is too low, increase to at least [262144]”<br>        net.ipv4.ip_forward，出于安全考虑，Linux系统默认是禁止数据包转发的。所谓转发即当主机拥有多于一块的网卡时，其中一块收到数据包，根据数据包的目的ip地址将数据包发往本机另一块网卡，该网卡根据路由表继续发送数据包。这通常是路由器所要实现的功能。要让Linux系统具有路由转发功能，需要配置 Linux 的内核参数 net.ipv4.ip_forward &#x3D; 1<br>        swappiness，等于 0 的时候表示最大限度使用物理内存，然后才是 swap空间，swappiness&#x3D;100的时候表示积极的使用swap分区，并且把内存上的数据及时的搬运到swap空间里面。</p><h3 id="ipvs转发"><a href="#ipvs转发" class="headerlink" title="ipvs转发"></a>ipvs转发</h3><p>不开启ipvs将会使用iptables进行数据包转发，但是效率低，所以官网推荐需要开通ipvs.</p><p>1.安装系统依赖包，开启ipvs转发</p><figure class="highlight awk"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><code class="hljs awk">yum install -y  ipvsadm ipset <br><br>cat &gt; <span class="hljs-regexp">/etc/</span>sysconfig<span class="hljs-regexp">/modules/i</span>pvs.modules &lt;&lt; EOF<br><span class="hljs-comment">#!/bin/bash</span><br>modprobe -- ip_vs<br>modprobe -- ip_vs_rr<br>modprobe -- ip_vs_wrr<br>modprobe -- ip_vs_sh<br>modprobe -- nf_conntrack<br>EOF<br><br><span class="hljs-comment">#所有节点上给脚本⽂件添加权限并执⾏</span><br>chmod <span class="hljs-number">755</span> <span class="hljs-regexp">/etc/</span>sysconfig<span class="hljs-regexp">/modules/i</span>pvs.modules <br>bash <span class="hljs-regexp">/etc/</span>sysconfig<span class="hljs-regexp">/modules/i</span>pvs.modules<br><br><span class="hljs-comment">#查看是否模块加载情况</span><br>lsmod |  grep ip_vs<br></code></pre></td></tr></table></figure><h3 id="安装docker"><a href="#安装docker" class="headerlink" title="安装docker"></a>安装docker</h3><figure class="highlight awk"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><code class="hljs awk"><span class="hljs-comment">#配置yum源</span><br>mkdir repo.bak<br>mv <span class="hljs-regexp">/etc/yum</span>.repos.d<span class="hljs-regexp">/* repo.bak/</span><br><span class="hljs-comment">##添加阿里源</span><br>wget -O <span class="hljs-regexp">/etc/yum</span>.repos.d<span class="hljs-regexp">/CentOS-Base.repo http:/</span><span class="hljs-regexp">/mirrors.aliyun.com/</span>repo/Centos-<span class="hljs-number">7</span>.repo<br><span class="hljs-comment">#添加yum docker软件源</span><br>wget https:<span class="hljs-regexp">//mi</span>rrors.aliyun.com<span class="hljs-regexp">/docker-ce/</span>linux<span class="hljs-regexp">/centos/</span>docker-ce.repo -O <span class="hljs-regexp">/etc/yum</span>.repos.d/docker-ce.repo<br>yum clean all &amp;&amp; yum makecache<br><br><span class="hljs-comment">#安装docker</span><br>yum -y install docker-ce<br><span class="hljs-comment">#启用并启动docker</span><br>systemctl enable docker &amp;&amp; systemctl start docker<br><br><span class="hljs-comment">##配置镜像加速器</span><br><br>cat &gt; <span class="hljs-regexp">/etc/</span>docker/daemon.json &lt;&lt; EOF<br>&#123;<br>  <span class="hljs-string">&quot;registry-mirrors&quot;</span>: [<span class="hljs-string">&quot;https://b9pmyelo.mirror.aliyuncs.com&quot;</span>],<br>  <span class="hljs-string">&quot;exec-opts&quot;</span>: [<span class="hljs-string">&quot;native.cgroupdriver=systemd&quot;</span>]<br>&#125;<br>EOF<br><br><span class="hljs-comment">#重启docker</span><br>systemctl daemon-reload &amp;&amp; systemctl restart docker<br>docker info |grep  <span class="hljs-string">&quot;Cgroup Driver&quot;</span><br></code></pre></td></tr></table></figure><h3 id="安装cri-dockerd"><a href="#安装cri-dockerd" class="headerlink" title="安装cri-dockerd"></a>安装cri-dockerd</h3><figure class="highlight awk"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><code class="hljs awk"><span class="hljs-comment">#下载cri-dockerd安装包</span><br>wget https:<span class="hljs-regexp">//gi</span>thub.com<span class="hljs-regexp">/Mirantis/</span>cri-dockerd<span class="hljs-regexp">/releases/</span>download<span class="hljs-regexp">/v0.3.1/</span>cri-dockerd-<span class="hljs-number">0.3</span>.<span class="hljs-number">1</span>-<span class="hljs-number">3</span>.el7.x86_64.rpm<br><span class="hljs-comment">#安装cri-dockerd</span><br>rpm -ivh cri-dockerd-<span class="hljs-number">0.3</span>.<span class="hljs-number">1</span>-<span class="hljs-number">3</span>.el7.x86_64.rpm<br><span class="hljs-comment">#如果报错，直接按下列网址安装</span><br>rpm -ivh  https:<span class="hljs-regexp">//gi</span>thub.com<span class="hljs-regexp">/Mirantis/</span>cri-dockerd<span class="hljs-regexp">/releases/</span>download<span class="hljs-regexp">/v0.3.1/</span>cri-dockerd-<span class="hljs-number">0.3</span>.<span class="hljs-number">1</span>-<span class="hljs-number">3</span>.el7.x86_64.rpm<br><span class="hljs-comment">#修改镜像地址为国内，否则kubelet拉取不了镜像导致启动失败</span><br>vi <span class="hljs-regexp">/usr/</span>lib<span class="hljs-regexp">/systemd/</span>system/cri-docker.service<br>修改下列行<br>ExecStart=<span class="hljs-regexp">/usr/</span>bin<span class="hljs-regexp">/cri-dockerd --container-runtime-endpoint fd:/</span><span class="hljs-regexp">/ --pod-infra-container-image=registry.aliyuncs.com/g</span>oogle_containers/pause:<span class="hljs-number">3.7</span><br><br><span class="hljs-comment">#启动cri-dockerd</span><br>systemctl daemon-reload <br>systemctl enable cri-docker &amp;&amp; systemctl start cri-docker<br></code></pre></td></tr></table></figure><h3 id="添加yum-k8s软件源"><a href="#添加yum-k8s软件源" class="headerlink" title="添加yum k8s软件源"></a>添加yum k8s软件源</h3><figure class="highlight awk"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><code class="hljs awk">cat &gt; <span class="hljs-regexp">/etc/yum</span>.repos.d/kubernetes.repo &lt;&lt; EOF<br>[kubernetes]<br>name=Kubernetes<br>baseurl=https:<span class="hljs-regexp">//mi</span>rrors.aliyun.com<span class="hljs-regexp">/kubernetes/yum</span><span class="hljs-regexp">/repos/</span>kubernetes-el7-x86_64<br>enabled=<span class="hljs-number">1</span><br>gpgcheck=<span class="hljs-number">0</span><br>repo_gpgcheck=<span class="hljs-number">0</span><br>gpgkey=https:<span class="hljs-regexp">//mi</span>rrors.aliyun.com<span class="hljs-regexp">/kubernetes/yum</span><span class="hljs-regexp">/doc/yum</span>-key.gpg https:<span class="hljs-regexp">//mi</span>rrors.aliyun.com<span class="hljs-regexp">/kubernetes/yum</span><span class="hljs-regexp">/doc/</span>rpm-package-key.gpg<br>EOF<br></code></pre></td></tr></table></figure><h3 id="安装kubeadm、kubelet、kubectl"><a href="#安装kubeadm、kubelet、kubectl" class="headerlink" title="安装kubeadm、kubelet、kubectl"></a>安装kubeadm、kubelet、kubectl</h3><figure class="highlight apache"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs apache"><span class="hljs-attribute">yum</span> install -y kubelet-<span class="hljs-number">1</span>.<span class="hljs-number">26</span>.<span class="hljs-number">1</span> kubeadm-<span class="hljs-number">1</span>.<span class="hljs-number">26</span>.<span class="hljs-number">1</span> kubectl-<span class="hljs-number">1</span>.<span class="hljs-number">26</span>.<span class="hljs-number">1</span><br><span class="hljs-attribute">systemctl</span> enable kubelet --now<br><span class="hljs-attribute">kubeadm</span> version<br><span class="hljs-attribute">crictl</span> image<br></code></pre></td></tr></table></figure><p>关机poweroff</p><p>打快照</p><h2 id="完整克隆两台node01和node02"><a href="#完整克隆两台node01和node02" class="headerlink" title="完整克隆两台node01和node02"></a>完整克隆两台node01和node02</h2><table><thead><tr><th>Hostname</th><th>IP</th><th>说明</th></tr></thead><tbody><tr><td>master01</td><td>192.168.48.100</td><td>master</td></tr><tr><td>node01</td><td>192.168.48.101</td><td>node01</td></tr><tr><td>node02</td><td>192.168.48.102</td><td>node02</td></tr></tbody></table><p>根据节点分布，改好<span style=color:red>两台机ip和主机名</span>，不做解释</p><h2 id="配置各主机之间的免密登录"><a href="#配置各主机之间的免密登录" class="headerlink" title="配置各主机之间的免密登录"></a>配置各主机之间的免密登录</h2><figure class="highlight dockerfile"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs dockerfile">在master节点：<br>ssh-keygen <br><span class="hljs-comment">##三次回车</span><br>for i in node01 node02;do ssh-<span class="hljs-keyword">copy</span><span class="language-bash">-<span class="hljs-built_in">id</span> -i .ssh/id_rsa.pub <span class="hljs-variable">$i</span>;<span class="hljs-keyword">done</span></span><br></code></pre></td></tr></table></figure><p>关机快照（集群基础环境）poweroff</p><h2 id="在master节点初始化Kubernetes"><a href="#在master节点初始化Kubernetes" class="headerlink" title="在master节点初始化Kubernetes"></a>在master节点初始化Kubernetes</h2><p><span style=color:red>以下操作在master节点操作</span></p><figure class="highlight stylus"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><code class="hljs stylus">kubeadm init \<br>  <span class="hljs-attr">--apiserver-advertise-address</span>=<span class="hljs-number">192.168</span>.<span class="hljs-number">48.100</span> \<br>  <span class="hljs-attr">--image-repository</span> registry<span class="hljs-selector-class">.aliyuncs</span>.com/google_containers \<br>  <span class="hljs-attr">--kubernetes-version</span> v1.<span class="hljs-number">26.1</span> \<br>  <span class="hljs-attr">--service-cidr</span>=<span class="hljs-number">10.96</span>.<span class="hljs-number">0.0</span>/<span class="hljs-number">12</span> \<br>  <span class="hljs-attr">--pod-network-cidr</span>=<span class="hljs-number">10.244</span>.<span class="hljs-number">0.0</span>/<span class="hljs-number">16</span> \<br>  <span class="hljs-attr">--cri-socket</span>=unix:<span class="hljs-comment">///var/run/cri-dockerd.sock \</span><br>  <span class="hljs-attr">--ignore-preflight-errors</span>=<span class="hljs-attribute">all</span><br><br>–apiserver-advertise-address：集群通告地址<br>–image-repository：由于默认拉取镜像地址k8s<span class="hljs-selector-class">.gcr</span>.io国内无法访问，这里指定阿里云镜像仓库地址<br>–kubernetes-version：K8s版本，与上面安装的一致<br>–service-cidr：集群内部虚拟网络，Pod统一访问入口<br>–pod-network-cidr：Pod网络，与下面部署的CNI网络组件yaml中保持一致<br>–cri-socket：指定cri-dockerd接口，如果是containerd则使用unix:<span class="hljs-comment">///run/containerd/containerd.sock</span><br></code></pre></td></tr></table></figure><p>PS：</p><p>1、如果不记得token，利用kubeadm命令重新生成token<br>kubeadm token create –print-join-command –ttl&#x3D;0<br>#–ttl&#x3D;0:配置该参数，生成的token将永不失效</p><p>2、如果初始化master有问题，可将集群重置，再次初始化master，其他节点重新加入前也要kubeadm reset</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">kubeadm reset<br></code></pre></td></tr></table></figure><p>保存记录的信息</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><code class="hljs bash">[addons] Applied essential addon: kube-proxy<br><br>Your Kubernetes control-plane has initialized successfully!<br><br>To start using your cluster, you need to run the following as a regular user:<br><br>  <span class="hljs-built_in">mkdir</span> -p <span class="hljs-variable">$HOME</span>/.kube<br>  sudo <span class="hljs-built_in">cp</span> -i /etc/kubernetes/admin.conf <span class="hljs-variable">$HOME</span>/.kube/config<br>  sudo <span class="hljs-built_in">chown</span> $(<span class="hljs-built_in">id</span> -u):$(<span class="hljs-built_in">id</span> -g) <span class="hljs-variable">$HOME</span>/.kube/config<br><br>Alternatively, <span class="hljs-keyword">if</span> you are the root user, you can run:<br><br>  <span class="hljs-built_in">export</span> KUBECONFIG=/etc/kubernetes/admin.conf<br><br>You should now deploy a pod network to the cluster.<br>Run <span class="hljs-string">&quot;kubectl apply -f [podnetwork].yaml&quot;</span> with one of the options listed at:<br>  https://kubernetes.io/docs/concepts/cluster-administration/addons/<br><br>Then you can <span class="hljs-built_in">join</span> any number of worker nodes by running the following on each as root:<br><br>kubeadm <span class="hljs-built_in">join</span> 192.168.48.100:6443 --token 66nkqe.7yo5d2r48wor8r8l \<br>        --discovery-token-ca-cert-hash sha256:5f62fbf4775349e16431fc62e25c1feed9e5a6c76ab457a2641b371386d1170e<br><br></code></pre></td></tr></table></figure><h3 id="使用kubectl"><a href="#使用kubectl" class="headerlink" title="使用kubectl"></a>使用kubectl</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs bash"><span class="hljs-built_in">mkdir</span> -p <span class="hljs-variable">$HOME</span>/.kube<br>sudo <span class="hljs-built_in">cp</span> -i /etc/kubernetes/admin.conf <span class="hljs-variable">$HOME</span>/.kube/config<br>sudo <span class="hljs-built_in">chown</span> $(<span class="hljs-built_in">id</span> -u):$(<span class="hljs-built_in">id</span> -g) <span class="hljs-variable">$HOME</span>/.kube/config<br></code></pre></td></tr></table></figure><h3 id="安装kubectl命令补全"><a href="#安装kubectl命令补全" class="headerlink" title="安装kubectl命令补全"></a>安装kubectl命令补全</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs bash">yum install -y bash-completion<br><span class="hljs-built_in">echo</span> <span class="hljs-string">&#x27;source /usr/share/bash-completion/bash_completion&#x27;</span> &gt;&gt; ~/.bashrc<br><span class="hljs-built_in">source</span> ~/.bashrc<br><span class="hljs-built_in">echo</span> <span class="hljs-string">&#x27;source &lt;(kubectl completion bash)&#x27;</span> &gt;&gt; ~/.bashrc<br><span class="hljs-built_in">source</span> ~/.bashrc<br></code></pre></td></tr></table></figure><h2 id="node01、node02加入集群"><a href="#node01、node02加入集群" class="headerlink" title="node01、node02加入集群"></a>node01、node02加入集群</h2><p>两个node都打</p><figure class="highlight jboss-cli"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs jboss-cli">kubeadm join 192.168.48.100<span class="hljs-function">:6443</span> <span class="hljs-params">--token</span> 66nkqe.7yo5d2r48wor8r8l \<br>        <span class="hljs-params">--discovery-token-ca-cert-hash</span> sha256<span class="hljs-function">:5f62fbf4775349e16431fc62e25c1feed9e5a6c76ab457a2641b371386d1170e</span> <span class="hljs-params">--cri-socket</span> unix:<span class="hljs-string">///var/run/cri-dockerd.sock</span><br></code></pre></td></tr></table></figure><h2 id="master配置网络插件calico"><a href="#master配置网络插件calico" class="headerlink" title="master配置网络插件calico"></a>master配置网络插件calico</h2><p>如果calico的文件下载不了，直接用文章最顶部的资源，已经给你们下载好了</p><p><span style=color:red>以下操作在master节点操作</span></p><figure class="highlight awk"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs awk">增加解析记录<br>echo <span class="hljs-string">&#x27;185.199.108.133 raw.githubusercontent.com&#x27;</span> &gt;&gt; <span class="hljs-regexp">/etc/</span>hosts <br>curl https:<span class="hljs-regexp">//</span>raw.githubusercontent.com<span class="hljs-regexp">/projectcalico/</span>calico<span class="hljs-regexp">/v3.25.1/m</span>anifests/calico.yaml -O<br>kubectl apply -f calico.yaml<br></code></pre></td></tr></table></figure><p>PS：如果部署失败，则删除calico ：kubectl  delete -f calico.yaml</p><p>验证集群节点状态正常</p><figure class="highlight crmsh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs crmsh">kubectl get nodes<br>kubectl label <span class="hljs-keyword">node</span> <span class="hljs-title">node01</span> <span class="hljs-keyword">node</span><span class="hljs-title">-role</span>.kubernetes.io/<span class="hljs-attr">worker=</span>worker<br>kubectl label <span class="hljs-keyword">node</span> <span class="hljs-title">node02</span> <span class="hljs-keyword">node</span><span class="hljs-title">-role</span>.kubernetes.io/<span class="hljs-attr">worker=</span>worker<br></code></pre></td></tr></table></figure><figure class="highlight crmsh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><code class="hljs crmsh"><span class="hljs-comment">#正常信息</span><br>[root@<span class="hljs-keyword">master</span> <span class="hljs-title">~]# kubectl</span> get nodes<br>NAME     STATUS   ROLES           AGE   <span class="hljs-keyword">VERSION</span><br><span class="hljs-keyword">master</span>   <span class="hljs-title">Ready</span>    control-plane   <span class="hljs-number">53m</span>   v1.<span class="hljs-number">26.1</span><br>node01   Ready    worker          <span class="hljs-number">46m</span>   v1.<span class="hljs-number">26.1</span><br>node02   Ready    worker          <span class="hljs-number">46m</span>   v1.<span class="hljs-number">26.1</span><br><span class="hljs-comment">##要过1分钟才会为Ready</span><br></code></pre></td></tr></table></figure><h2 id="部署Dashboard"><a href="#部署Dashboard" class="headerlink" title="部署Dashboard"></a>部署Dashboard</h2><p>如果dashboard的文件下载不了，直接用文章最顶部的资源，已经给你们下载好了</p><p>在master节点</p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><code class="hljs yaml"><span class="hljs-string">wget</span> <span class="hljs-string">https://raw.githubusercontent.com/cby-chen/Kubernetes/main/yaml/dashboard.yaml</span><br><br><span class="hljs-comment">#默认Dashboard只能集群内部访问，修改Service为NodePort类型，暴露到外部访问，修改如下：</span><br><span class="hljs-string">vim</span> <span class="hljs-string">dashboard.yaml</span><br><span class="hljs-attr">kind:</span> <span class="hljs-string">Service</span><br><span class="hljs-attr">apiVersion:</span> <span class="hljs-string">v1</span><br><span class="hljs-attr">metadata:</span><br>  <span class="hljs-attr">labels:</span><br>    <span class="hljs-attr">k8s-app:</span> <span class="hljs-string">kubernetes-dashboard</span><br>  <span class="hljs-attr">name:</span> <span class="hljs-string">kubernetes-dashboard</span><br>  <span class="hljs-attr">namespace:</span> <span class="hljs-string">kubernetes-dashboard</span><br><span class="hljs-attr">spec:</span><br>  <span class="hljs-attr">ports:</span><br>    <span class="hljs-bullet">-</span> <span class="hljs-attr">port:</span> <span class="hljs-number">443</span><br>      <span class="hljs-attr">targetPort:</span> <span class="hljs-number">8443</span><br>      <span class="hljs-attr">nodePort:</span> <span class="hljs-number">30001</span><br>  <span class="hljs-attr">selector:</span><br>    <span class="hljs-attr">k8s-app:</span> <span class="hljs-string">kubernetes-dashboard</span><br>  <span class="hljs-attr">type:</span> <span class="hljs-string">NodePort</span><br></code></pre></td></tr></table></figure><img src="https://article.biliimg.com/bfs/article/4450be1d854f6c44581995fe28dfd724697559838.png" alt="image-20230512171256847" style="zoom:67%;" /><p>位置顺序要按如图所示</p><figure class="highlight nsis"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><code class="hljs nsis">kubectl apply -f dashboard.yaml<br>kubectl get pods -n kubernetes-dashboard<br><span class="hljs-comment">#以下是正常信息 （Running）</span><br>[root@master ~]<span class="hljs-comment"># kubectl get pods -n kubernetes-dashboard</span><br><span class="hljs-keyword">NAME</span>                                        READY   STATUS    RESTARTS   AGE<br>dashboard-metrics-scraper-<span class="hljs-number">7</span>bc864c59-krfmg   <span class="hljs-number">1</span>/<span class="hljs-number">1</span>     Running   <span class="hljs-number">0</span>          <span class="hljs-number">2</span>m9s<br>kubernetes-dashboard-<span class="hljs-number">6</span>c7ccbcf87-krzr6       <span class="hljs-number">1</span>/<span class="hljs-number">1</span>     Running   <span class="hljs-number">0</span>          <span class="hljs-number">2</span>m9s<br><br><br>创建service account并绑定默认cluster-<span class="hljs-literal">admin</span>管理员群角色<br><span class="hljs-comment">#创建用户</span><br>kubectl create serviceaccount dashboard-<span class="hljs-literal">admin</span> -n kubernetes-dashboard<br><span class="hljs-comment">#用户授权</span><br>kubectl create clusterrolebinding dashboard-<span class="hljs-literal">admin</span> --clusterrole=cluster-<span class="hljs-literal">admin</span> --serviceaccount=kubernetes-dashboard:dashboard-<span class="hljs-literal">admin</span><br><span class="hljs-comment">#获取用户Token</span><br>kubectl create token dashboard-<span class="hljs-literal">admin</span> -n kubernetes-dashboard<br><br>eyJhbGciOiJSUzI1NiIsImtpZCI6IlNkWU1MVzBVV3ZNTXM1NVBHUlJmZlhHd2VtbGRiRW9vWUFtTk45eXZGb1EifQ.eyJhdWQiOlsiaHR0cHM6Ly9rdWJlcm5ldGVzLmRlZmF1bHQuc3ZjLmNsdXN0ZXIubG9jYWwiXSwiZXhwIjoxNjg0NDg2NzM2LCJpYXQiOjE2ODQ0ODMxMzYsImlzcyI6Imh0dHBzOi8va3ViZXJuZXRlcy5kZWZhdWx0LnN2Yy5jbHVzdGVyLmxvY2FsIiwia3ViZXJuZXRlcy5pbyI6eyJuYW1lc3BhY2UiOiJrdWJlcm5ldGVzLWRhc2hib2FyZCIsInNlcnZpY2VhY2NvdW50Ijp7Im5hbWUiOiJkYXNoYm9hcmQtYWRtaW4iLCJ1aWQiOiJhMDcxYWVhYi1jOTkyLTRjNDAtOTA2ZC0yMGYwZjZmMjdmMzUifX0sIm5iZiI6MTY4NDQ4MzEzNiwic3ViIjoic3lzdGVtOnNlcnZpY2VhY2NvdW50Omt1YmVybmV0ZXMtZGFzaGJvYXJkOmRhc2hib2FyZC1hZG1pbiJ9.osqhDrXydY_KoiXE61qlbtIAY6kKGh3Se2oQdNQ4Rl0doDB1yQTA_6REKC24AKBWvllaQdWhUHH-<span class="hljs-number">76</span>ch6C9W2Kus7i00efTPuvDIJGsDK3c_jSR0OdL2beqwqZNTOaBc-RoDn0Q5BpTqS2qsjhIAN4px4d4vrhSOF2K3hQusaYtqF46bvaSvFPHAuzePLIgSIp69qYiqxQFBCHenfajx5m4LmgkhlSDA6Wf8ISs7tDKwPsSGwPCKkxgs0i8pzTSqld9raGr0fLN67LeWpGMP8m8tkmOMXXZpx9cFdOShzACj29GSt8s3tYBt77uAv2dTTp1TPAkyHHOkOKgv4kfXqw<br></code></pre></td></tr></table></figure><p>查询pod状态</p><p><img src="https://article.biliimg.com/bfs/article/afd759b931330fe6dc49321b641d0287697559838.png" alt="image-20230519155939383"></p><figure class="highlight crmsh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs crmsh">[root@<span class="hljs-keyword">master</span> <span class="hljs-title">~]# kubectl</span> get pod,svc -o wide -n kubernetes-dashboard<br></code></pre></td></tr></table></figure><p>浏览器访问https:&#x2F;&#x2F;所在node的ip:30001<br><a href="https://192.168.48.101:30001/">https://192.168.48.101:30001</a>    因本pod在node01，请根据实际情况修改。<br>输入token</p><p><img src="https://article.biliimg.com/bfs/article/838a84c7131f684e5c50b0a492a600f8697559838.png" alt="image-20230519160425152"></p><h2 id="测试集群"><a href="#测试集群" class="headerlink" title="测试集群"></a>测试集群</h2><p>master</p><figure class="highlight routeros"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs routeros">kubectl create deployment nginx <span class="hljs-attribute">--image</span>=nginx<br>kubectl expose deployment nginx <span class="hljs-attribute">--port</span>=80 <span class="hljs-attribute">--type</span>=NodePort<br>kubectl <span class="hljs-built_in">get</span> pod,svc,deployment -o wide<br></code></pre></td></tr></table></figure><p><img src="https://article.biliimg.com/bfs/article/8ab042f939059cb326c434a3f4e3ed5d697559838.png" alt="image-20230519160645944"></p><p>如图可知，pod在node02，所以浏览器访问ip:31971</p><p><a href="http://192.168.48.102:31971/">http://192.168.48.102:31971</a></p><p><img src="https://article.biliimg.com/bfs/article/a60d6f48f6bf485b61f66c6bb4b60c4f697559838.png" alt="image-20230519160800617"></p><div class="tbsm" style="margin-top:54px;"><div class="tbsm-top"><span><svg t="1674654360507" class="icon" viewBox="0 0 1024 1024" version="1.1" xmlns="http://www.w3.org/2000/svg" p-id="987" data-spm-anchor-id="a313x.7781069.0.i0" width="35" height="35"><path d="M410.49 97.74H155.08a56.74 56.74 0 0 0-56.84 56.73V410a56.84 56.84 0 0 0 56.84 56.84h255.41A56.83 56.83 0 0 0 467.32 410V154.58a56.83 56.83 0 0 0-56.83-56.84zM410.49 558.74H155.08a56.74 56.74 0 0 0-56.84 56.73V871a56.84 56.84 0 0 0 56.84 56.84h255.41A56.83 56.83 0 0 0 467.32 871V615.58a56.83 56.83 0 0 0-56.83-56.84zM871.49 558.74H616.08a56.74 56.74 0 0 0-56.84 56.73V871a56.84 56.84 0 0 0 56.84 56.84h255.41A56.83 56.83 0 0 0 928.32 871V615.58a56.83 56.83 0 0 0-56.83-56.84z" fill="#66EEFF" p-id="988"></path><path d="M410.49 558.74h-4.14A475 475 0 0 0 299.52 859.6a481.16 481.16 0 0 0 4.84 68.22h106.13A56.83 56.83 0 0 0 467.32 871V615.58a56.83 56.83 0 0 0-56.83-56.84zM871.49 558.74H616.08a56.74 56.74 0 0 0-56.84 56.73V871a56.84 56.84 0 0 0 56.84 56.84h255.41A56.83 56.83 0 0 0 928.32 871V615.58a56.83 56.83 0 0 0-56.83-56.84z" fill="#C2F8FF" p-id="989"></path></svg></span><span style="font-size:30px;"> 特别声明</span></div><div class="tbsm-wz">千屹博客旗下的所有文章，是通过本人课堂学习和课外自学所精心整理的知识巨著<br/>难免会有出错的地方<br/>如果细心的你发现了小失误，可以在下方评论区告诉我，或者私信我！<br />非常感谢大家的热烈支持！</div></div>]]></content>
    
    
    
    <tags>
      
      <tag>Centos 7</tag>
      
      <tag>K8s</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>GitBash笔记</title>
    <link href="/2023/04/30/GitBash/"/>
    <url>/2023/04/30/GitBash/</url>
    
    <content type="html"><![CDATA[<meta name="referrer" content="no-referrer"/><h1 id="GitBash笔记"><a href="#GitBash笔记" class="headerlink" title="GitBash笔记"></a>GitBash笔记</h1><p>下载gitbash工具<a href="https://gitforwindows.org/">Git for Windows</a>安装教程在**<u>文末</u>**</p><p>·官网下载 <a href="https://git-scm.com/downloads">https://git-scm.com/downloads</a><br>·Windows系统直接用<a href="https://gitforwindows.org/">https://gitforwindows.org/</a></p><h2 id="基本环境"><a href="#基本环境" class="headerlink" title="基本环境"></a>基本环境</h2><h3 id="定义用户名和邮箱"><a href="#定义用户名和邮箱" class="headerlink" title="定义用户名和邮箱"></a>定义用户名和邮箱</h3><figure class="highlight verilog"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><code class="hljs verilog">git <span class="hljs-keyword">config</span> --<span class="hljs-keyword">global</span> user<span class="hljs-variable">.name</span> <span class="hljs-string">&quot;xxx&quot;</span><br>git <span class="hljs-keyword">config</span> --<span class="hljs-keyword">global</span> user<span class="hljs-variable">.email</span> <span class="hljs-string">&quot;xxx@xxx.xxx&quot;</span><br><br>检查设对没有<br>git <span class="hljs-keyword">config</span> user<span class="hljs-variable">.name</span><br>git <span class="hljs-keyword">config</span> user<span class="hljs-variable">.email</span><br></code></pre></td></tr></table></figure><p><img src="https://article.biliimg.com/bfs/article/7f63beb24ce0d7369a9f4cc715542b16697559838.png" alt="image-20230412004900608">用户名，邮箱就是你绑定的邮箱</p><h3 id="生成远程连接密钥"><a href="#生成远程连接密钥" class="headerlink" title="生成远程连接密钥"></a>生成远程连接密钥</h3><figure class="highlight arcade"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs arcade">ssh-keygen -t rsa -C <span class="hljs-string">&quot;xxx@xxx.xxx&quot;</span><br>查看密钥<br>cat ~<span class="hljs-regexp">/.ssh/i</span>d_rsa.pub<br><br>会有一串密密麻麻的文字，全部复制到这 生成就行了<br></code></pre></td></tr></table></figure><p>全局使用</p><p><img src="https://article.biliimg.com/bfs/article/0095dc549a05b8188fc84c55cc917afa697559838.png" alt="image-20230412005423098"></p><h3 id="测试远程连接"><a href="#测试远程连接" class="headerlink" title="测试远程连接"></a>测试远程连接</h3><figure class="highlight nginx"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs nginx"><span class="hljs-attribute">ssh</span> -T git<span class="hljs-variable">@github</span>.com<br></code></pre></td></tr></table></figure><h2 id="基本命令"><a href="#基本命令" class="headerlink" title="基本命令"></a>基本命令</h2><p>官方给了一个较好的解释文档</p><p><img src="https://article.biliimg.com/bfs/article/3f773bf40effa4f3d07b367cbd554f94697559838.png" alt="image-20230412022423485"></p><h3 id="git-init"><a href="#git-init" class="headerlink" title="git init"></a>git init</h3><figure class="highlight csharp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs csharp"><span class="hljs-meta">#初始化一个新的git仓库</span><br>git <span class="hljs-keyword">init</span><br></code></pre></td></tr></table></figure><h3 id="README-MD文件"><a href="#README-MD文件" class="headerlink" title="README.MD文件"></a>README.MD文件</h3><p>没有它会报错，如果你没准备可以用以下命令</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash"><span class="hljs-built_in">echo</span> <span class="hljs-string">&quot;# 123456&quot;</span> &gt;&gt; README.md<br></code></pre></td></tr></table></figure><p><code>README.md</code>是一个文本文件，通常在Git项目的根目录中，用于向其他人介绍该项目的信息。其中，<code>.md</code>是Markdown（标记语言）的文件格式，在GitHub等网站中被广泛使用。</p><p>具体来说，<code>README.md</code>文件通常包含以下信息：</p><ol><li>项目名称和描述</li><li>如何安装和运行该项目</li><li>项目的使用方法和注意事项</li><li>贡献者的信息和代码许可</li><li>项目的版本历史和最新更新内容等等。</li></ol><p>通过编写<code>README.md</code>文件，可以提供给其他人一个简洁、清晰的项目概述，方便其他人快速了解和使用该项目。同时，也可以通过修改<code>README.md</code>文件来更新和维护项目的最新信息和文档。</p><p>在GitHub等网站中，<code>README.md</code>文件会被自动渲染为网页显示，因此对项目的宣传和文档编写具有重要意义。</p><h3 id="git-add"><a href="#git-add" class="headerlink" title="git add"></a>git add</h3><figure class="highlight routeros"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><code class="hljs routeros">将文件添加到git仓库<br>git <span class="hljs-built_in">add</span> &lt;file&gt;<br>例如 ：<br>注意指令末尾小数点<br>git <span class="hljs-built_in">add</span> . <br><span class="hljs-comment">#将项目的所有文件添加到仓库中</span><br></code></pre></td></tr></table></figure><h3 id="git-commit"><a href="#git-commit" class="headerlink" title="git commit"></a>git commit</h3><figure class="highlight nginx"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs nginx"><span class="hljs-attribute">git</span> commit -m <span class="hljs-string">&quot;message&quot;</span><br>提交更改，并附上提交信息<br></code></pre></td></tr></table></figure><h3 id="git-status"><a href="#git-status" class="headerlink" title="git status"></a>git status</h3><figure class="highlight nginx"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs nginx"><span class="hljs-comment">#查看Git仓库状态</span><br><span class="hljs-attribute">git</span> status<br></code></pre></td></tr></table></figure><h3 id="git-log"><a href="#git-log" class="headerlink" title="git log"></a>git log</h3><figure class="highlight 1c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs 1c">git <span class="hljs-built_in">log</span><br>查看提交记录<br></code></pre></td></tr></table></figure><h3 id="git-clone"><a href="#git-clone" class="headerlink" title="git clone "></a>git clone <url></h3><p><img src="https://article.biliimg.com/bfs/article/5f8dd766b202cc1e7c46c7e1a2a3893c697559838.png" alt="image-20230412012126767"></p><figure class="highlight crmsh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs crmsh">git <span class="hljs-keyword">clone</span> <span class="hljs-title">https</span>://github.com······<br><span class="hljs-comment">#克隆一个Git仓库到本地</span><br></code></pre></td></tr></table></figure><h3 id="git-push"><a href="#git-push" class="headerlink" title="git push"></a>git push</h3><figure class="highlight avrasm"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs avrasm"><span class="hljs-meta">#将本地的更改推送到远程仓库</span><br>git <span class="hljs-keyword">push</span><br></code></pre></td></tr></table></figure><h3 id="git-pull"><a href="#git-pull" class="headerlink" title="git pull"></a>git pull</h3><figure class="highlight nginx"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs nginx"><span class="hljs-comment">#从远程仓库拉取最新更改</span><br><span class="hljs-attribute">git</span> pull<br></code></pre></td></tr></table></figure><h3 id="git-branch"><a href="#git-branch" class="headerlink" title="git branch"></a>git branch</h3><figure class="highlight nginx"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs nginx"><span class="hljs-comment">#查看和管理分支</span><br><span class="hljs-attribute">git</span> branch<br></code></pre></td></tr></table></figure><h3 id="git-merge"><a href="#git-merge" class="headerlink" title="git merge "></a>git merge <branch></h3><figure class="highlight livecodeserver"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs livecodeserver">git <span class="hljs-built_in">merge</span><br><span class="hljs-comment">#将一个分支合并到当前分支中</span><br></code></pre></td></tr></table></figure><h3 id="git-stash："><a href="#git-stash：" class="headerlink" title="git stash："></a>git stash：</h3><figure class="highlight nginx"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs nginx"><span class="hljs-comment">#将当前的更改保存到“存储区”，以便以后再次使用</span><br><span class="hljs-attribute">git</span> stash<br></code></pre></td></tr></table></figure><h3 id="git-remote-add-："><a href="#git-remote-add-：" class="headerlink" title="git remote add  ："></a>git remote add <name> <url>：</h3><figure class="highlight 1c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs 1c"><span class="hljs-meta">#将远程仓库添加到本地Git仓库中</span><br>关联本地仓库和远程仓库<br></code></pre></td></tr></table></figure><h2 id="实例操作"><a href="#实例操作" class="headerlink" title="实例操作"></a>实例操作</h2><p><span style=color:red;font-size:18px>请先完成 <strong>1.基本环境</strong>的所有步骤</span></p><p>假设我要上传项目</p><h3 id="GitHub建好一个新库"><a href="#GitHub建好一个新库" class="headerlink" title="GitHub建好一个新库"></a>GitHub建好一个新库</h3><p><img src="https://article.biliimg.com/bfs/article/f6beb36e795e72689e65b6486af474bd697559838.png" alt="image-20230412021445830"></p><h3 id="在本地也创建一个本地库"><a href="#在本地也创建一个本地库" class="headerlink" title="在本地也创建一个本地库"></a>在本地也创建一个本地库</h3><p>勾选显示隐藏的项目</p><p><img src="https://article.biliimg.com/bfs/article/afa4f6e8679b18893df37cde8b2310c1697559838.png" alt="image-20230412012857747"></p><p><img src="https://article.biliimg.com/bfs/article/b9506511215f7b356fc5e3968a5cf9c4697559838.png" alt="image-20230412021542032"></p><p>右键空白处</p><p><img src="https://article.biliimg.com/bfs/article/5ba548552025465c99728d242df31b7d697559838.png" alt="image-20230412021558652"></p><h3 id="初始化本地仓库"><a href="#初始化本地仓库" class="headerlink" title="初始化本地仓库"></a>初始化本地仓库</h3><figure class="highlight csharp"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs csharp">git <span class="hljs-keyword">init</span><br></code></pre></td></tr></table></figure><p><img src="https://article.biliimg.com/bfs/article/24476f2584b22c334418798e377fd195697559838.png" alt="image-20230412021648634"></p><h3 id="将项目的所有文件添加到本地仓库中"><a href="#将项目的所有文件添加到本地仓库中" class="headerlink" title="将项目的所有文件添加到本地仓库中"></a>将项目的所有文件添加到本地仓库中</h3><figure class="highlight routeros"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs routeros">git <span class="hljs-built_in">add</span> .<br><span class="hljs-comment">#注意小数点</span><br></code></pre></td></tr></table></figure><h3 id="添加README-md文件"><a href="#添加README-md文件" class="headerlink" title="添加README.md文件"></a>添加README.md文件</h3><p>要求当前文件下有这个文件，没有会报错</p><figure class="highlight routeros"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs routeros">git <span class="hljs-built_in">add</span> README.md<br></code></pre></td></tr></table></figure><h3 id="提交到仓库，附上信息备注"><a href="#提交到仓库，附上信息备注" class="headerlink" title="提交到仓库，附上信息备注"></a>提交到仓库，附上信息备注</h3><figure class="highlight nginx"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs nginx"><span class="hljs-attribute">git</span> commit -m <span class="hljs-string">&quot;上传测试文件&quot;</span><br></code></pre></td></tr></table></figure><p><img src="https://article.biliimg.com/bfs/article/e7a2664fd8c31b42b483ffad5765ced2697559838.png" alt="image-20230412021712910"></p><h3 id="修改分支（名字自定）"><a href="#修改分支（名字自定）" class="headerlink" title="修改分支（名字自定）"></a>修改分支（名字自定）</h3><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs css">git branch -M <span class="hljs-selector-tag">main</span><br></code></pre></td></tr></table></figure><p><code>git branch -M main</code>命令用于将当前分支的名称修改为<code>main</code>，并将所有已有分支指向新的主分支<code>main</code>。</p><h3 id="将本地仓库关联到GitHub仓库"><a href="#将本地仓库关联到GitHub仓库" class="headerlink" title="将本地仓库关联到GitHub仓库"></a>将本地仓库关联到GitHub仓库</h3><figure class="highlight armasm"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs armasm"><span class="hljs-symbol">git</span> remote <span class="hljs-keyword">add</span> origin https:<span class="hljs-comment">//github.com/······</span><br></code></pre></td></tr></table></figure><p>https的地址，如果https不行也可以换成ssh地址</p><p><img src="https://article.biliimg.com/bfs/article/9c4d97ac8078ad958c60515e1ca07085697559838.png" alt="image-20230412021750914"></p><h3 id="拉取最新更改"><a href="#拉取最新更改" class="headerlink" title="拉取最新更改"></a>拉取最新更改</h3><figure class="highlight clean"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs clean">git pull origin main<br>##上传github之前pull一下,第一次创建的库没有main分支,所有第一次不用打这个，以后建议，习惯的pull以下<br></code></pre></td></tr></table></figure><h3 id="上传代码至GitHub远程仓库"><a href="#上传代码至GitHub远程仓库" class="headerlink" title="上传代码至GitHub远程仓库"></a>上传代码至GitHub远程仓库</h3><figure class="highlight maxima"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs maxima">git <span class="hljs-built_in">push</span> -u <span class="hljs-built_in">origin</span> main<br></code></pre></td></tr></table></figure><p><img src="https://article.biliimg.com/bfs/article/c72bad2f8a6df11103033920343d00b1697559838.png" alt="image-20230412021831978"></p><p><img src="https://article.biliimg.com/bfs/article/6b1813ad0147e39b978ff46855cdafa4697559838.png" alt="image-20230412021905011"></p><h2 id="克隆代码"><a href="#克隆代码" class="headerlink" title="克隆代码"></a>克隆代码</h2><p>###从远程库克隆<br>这是针对在本地的一个空的项目，要从远程库考代码下来，一般有<strong>两个</strong>步骤：</p><p><strong>1.在本地想要克隆的文件夹下面创建GIT版本库，以及建立远程库的连接。（详细步骤可以查看前面章节内容）</strong></p><p>####建好本地库，基础环境 初始化等步骤，最后pull一下</p><figure class="highlight csharp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs csharp">git <span class="hljs-keyword">init</span><br>git remote <span class="hljs-keyword">add</span> origin https:<span class="hljs-comment">//github.com/·······</span><br>git pull origin main<br></code></pre></td></tr></table></figure><p><img src="https://article.biliimg.com/bfs/article/3c1a9ba2d6621fc3610421ceae88fd8e697559838.png" alt="image-20230412020003450"></p><p><strong>2.用git clone克隆远程库所在项目的代码，比如要克隆上一节的代码，用下面命令即可</strong></p><figure class="highlight crmsh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs crmsh">git <span class="hljs-keyword">clone</span> <span class="hljs-title">https</span>://github.com/·······<br></code></pre></td></tr></table></figure><p><img src="https://article.biliimg.com/bfs/article/0ed5915515133c819c6d0609d829fc57697559838.png" alt="image-20230412021953276"></p><h2 id="更新代码"><a href="#更新代码" class="headerlink" title="更新代码"></a>更新代码</h2><p>在本地仓库添加一个test2.txt</p><p><img src="https://article.biliimg.com/bfs/article/6e36ab6797cdb22cf234d93fd20c6d1d697559838.png" alt="image-20230412020630452"></p><ol><li>查看当前的git仓库状态</li></ol><figure class="highlight ebnf"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs ebnf"><span class="hljs-attribute">git status</span><br></code></pre></td></tr></table></figure><ol start="2"><li>更新test2.txt文件</li></ol><figure class="highlight routeros"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs routeros">git <span class="hljs-built_in">add</span> test2.txt<br></code></pre></td></tr></table></figure><ol start="3"><li>对test2.txt文件注入备注信息</li></ol><figure class="highlight nginx"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs nginx"><span class="hljs-attribute">git</span> commit -m <span class="hljs-string">&quot;上传test2.txt&quot;</span><br></code></pre></td></tr></table></figure><ol start="4"><li>拉取main分支最新代码</li></ol><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs css">git pull origin <span class="hljs-selector-tag">main</span><br></code></pre></td></tr></table></figure><ol start="5"><li>push到远程main分支上</li></ol><figure class="highlight maxima"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs maxima">git <span class="hljs-built_in">push</span> <span class="hljs-built_in">origin</span> main<br></code></pre></td></tr></table></figure><p>你也可以更新全部</p><figure class="highlight maxima"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs maxima">git add *<br>git commit -m <span class="hljs-string">&quot;上传所有文件&quot;</span><br>git pull <span class="hljs-built_in">origin</span> main<br>git <span class="hljs-built_in">push</span> <span class="hljs-built_in">origin</span> main<br></code></pre></td></tr></table></figure><p>打开GitHub已经同步了</p><p><img src="https://article.biliimg.com/bfs/article/c9a609eb571eac284a206139747b1a50697559838.png" alt="image-20230412020938339"></p><h2 id="安装教程"><a href="#安装教程" class="headerlink" title="安装教程"></a>安装教程</h2><h3 id="建议新建一个文件夹，放git，作为安装路径"><a href="#建议新建一个文件夹，放git，作为安装路径" class="headerlink" title="建议新建一个文件夹，放git，作为安装路径"></a>建议新建一个文件夹，放git，作为安装路径</h3><p><img src="https://article.biliimg.com/bfs/article/0fd98abc4d8425fbd64c00275bf816a6697559838.png" alt="image-20230412001233082"></p><p><img src="https://article.biliimg.com/bfs/article/79bc5d434751e78fba3e6a3219981cb3697559838.png" alt="image-20230412001348748"></p><h3 id="更换路径"><a href="#更换路径" class="headerlink" title="更换路径"></a>更换路径</h3><p><img src="https://article.biliimg.com/bfs/article/dc2b7a3d1535d9f4241bcd01f0b6b7eb697559838.png" alt="image-20230412001424892"></p><h3 id="按需自助选择"><a href="#按需自助选择" class="headerlink" title="按需自助选择"></a>按需自助选择</h3><p><img src="https://article.biliimg.com/bfs/article/14b5e6042f5177de03321ebe27b15806697559838.png" alt="image-20230412001812933"></p><p><img src="https://article.biliimg.com/bfs/article/a834f6bbafebb2728abc04ae0ae58471697559838.png" alt="image-20230412001959068"></p><h3 id="选择开始文件夹"><a href="#选择开始文件夹" class="headerlink" title="选择开始文件夹"></a>选择开始文件夹</h3><p>方框内 Git 可改为其他名字，也可点击 “Browse…” 选择其他文件夹或者给”Don’t create a Start Menu folder” 打勾不要文件夹，点击 [next]</p><p><img src="https://article.biliimg.com/bfs/article/07b67c42155f0f137019592e3cbe4e05697559838.png" alt="image-20230412002158820"></p><h3 id="Git编辑器"><a href="#Git编辑器" class="headerlink" title="Git编辑器"></a>Git编辑器</h3><p><img src="https://article.biliimg.com/bfs/article/d277cb3cbe4947e0b926b8e26bdfac2e697559838.png" alt="image-20230412002151766"></p><h3 id="决定初始化新项目-仓库-的主干名字"><a href="#决定初始化新项目-仓库-的主干名字" class="headerlink" title="决定初始化新项目(仓库)的主干名字"></a>决定初始化新项目(仓库)的主干名字</h3><p><img src="https://article.biliimg.com/bfs/article/510911f91019698276b051720bf5a435697559838.png" alt="image-20230412002328765"></p><h3 id="调整环境变量"><a href="#调整环境变量" class="headerlink" title="调整环境变量"></a>调整环境变量</h3><p><img src="https://article.biliimg.com/bfs/article/3c679bcec4af49ca5dff77de4bc31f71697559838.png" alt="image-20230412002502629"></p><h3 id="选择SSH执行文件"><a href="#选择SSH执行文件" class="headerlink" title="选择SSH执行文件"></a>选择SSH执行文件</h3><p><img src="https://article.biliimg.com/bfs/article/04779f4eb29ebcfe248570e74eeb0f04697559838.png" alt="image-20230412002529388"></p><h3 id="选择HTTPS后端传输"><a href="#选择HTTPS后端传输" class="headerlink" title="选择HTTPS后端传输"></a>选择HTTPS后端传输</h3><p>注意：如果具有企业管理证书的组织中使用Git，就需要使用安全通道。</p><p><img src="https://article.biliimg.com/bfs/article/a65abdc3f4e27029f7d75d84ec8dd3e1697559838.png" alt="image-20230412003005628"></p><h3 id="配置行尾符号转换"><a href="#配置行尾符号转换" class="headerlink" title="配置行尾符号转换"></a>配置行尾符号转换</h3><p><img src="https://article.biliimg.com/bfs/article/bb1a4433f179bd9f385e6b87ddafaec5697559838.png" alt="image-20230412003215788"></p><h3 id="配置终端模拟器以与-Git-Bash-一起使用"><a href="#配置终端模拟器以与-Git-Bash-一起使用" class="headerlink" title="配置终端模拟器以与 Git Bash 一起使用"></a>配置终端模拟器以与 Git Bash 一起使用</h3><p><img src="https://article.biliimg.com/bfs/article/2280e5e7b0d01e330bb81fadee89aafc697559838.png" alt="image-20230412003320788"></p><h3 id="选择默认的-git-pull-模式"><a href="#选择默认的-git-pull-模式" class="headerlink" title="选择默认的 git pull 模式"></a>选择默认的 git pull 模式</h3><p><code>git pull</code> 就是获取最新的远程仓库分支到本地，并与本地分支合并。</p><p><img src="https://article.biliimg.com/bfs/article/19a01d897b20926e0374b536b76b69d0697559838.png" alt="image-20230412003411911"></p><h3 id="选择一个凭证帮助程序"><a href="#选择一个凭证帮助程序" class="headerlink" title="选择一个凭证帮助程序"></a>选择一个凭证帮助程序</h3><p><img src="https://article.biliimg.com/bfs/article/2e5e55712af174c59d959d31b7e0cfb7697559838.png" alt="image-20230412003524413"></p><h3 id="配置额外的选项"><a href="#配置额外的选项" class="headerlink" title="配置额外的选项"></a>配置额外的选项</h3><p>配置建议两个都选</p><p><img src="https://article.biliimg.com/bfs/article/d1bffd363a2585446e1b5e9a3e6b8350697559838.png" alt="image-20230412003604092"></p><h3 id="配置实验性选择"><a href="#配置实验性选择" class="headerlink" title="配置实验性选择"></a>配置实验性选择</h3><p><img src="https://article.biliimg.com/bfs/article/a5a006326370eef1e0404228aefe7805697559838.png" alt="image-20230412003707549"></p><p>安装完成！！</p><div class="tbsm" style="margin-top:54px;"><div class="tbsm-top"><span><svg t="1674654360507" class="icon" viewBox="0 0 1024 1024" version="1.1" xmlns="http://www.w3.org/2000/svg" p-id="987" data-spm-anchor-id="a313x.7781069.0.i0" width="35" height="35"><path d="M410.49 97.74H155.08a56.74 56.74 0 0 0-56.84 56.73V410a56.84 56.84 0 0 0 56.84 56.84h255.41A56.83 56.83 0 0 0 467.32 410V154.58a56.83 56.83 0 0 0-56.83-56.84zM410.49 558.74H155.08a56.74 56.74 0 0 0-56.84 56.73V871a56.84 56.84 0 0 0 56.84 56.84h255.41A56.83 56.83 0 0 0 467.32 871V615.58a56.83 56.83 0 0 0-56.83-56.84zM871.49 558.74H616.08a56.74 56.74 0 0 0-56.84 56.73V871a56.84 56.84 0 0 0 56.84 56.84h255.41A56.83 56.83 0 0 0 928.32 871V615.58a56.83 56.83 0 0 0-56.83-56.84z" fill="#66EEFF" p-id="988"></path><path d="M410.49 558.74h-4.14A475 475 0 0 0 299.52 859.6a481.16 481.16 0 0 0 4.84 68.22h106.13A56.83 56.83 0 0 0 467.32 871V615.58a56.83 56.83 0 0 0-56.83-56.84zM871.49 558.74H616.08a56.74 56.74 0 0 0-56.84 56.73V871a56.84 56.84 0 0 0 56.84 56.84h255.41A56.83 56.83 0 0 0 928.32 871V615.58a56.83 56.83 0 0 0-56.83-56.84z" fill="#C2F8FF" p-id="989"></path></svg></span><span style="font-size:30px;"> 特别声明</span></div><div class="tbsm-wz">千屹博客旗下的所有文章，是通过本人课堂学习和课外自学所精心整理的知识巨著<br/>难免会有出错的地方<br/>如果细心的你发现了小失误，可以在下方评论区告诉我，或者私信我！<br />非常感谢大家的热烈支持！</div></div>]]></content>
    
    
    
    <tags>
      
      <tag>GitBash</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>Hadoop组件部署</title>
    <link href="/2023/04/13/Hadoop_zj/"/>
    <url>/2023/04/13/Hadoop_zj/</url>
    
    <content type="html"><![CDATA[<meta name="referrer" content="no-referrer"/><h1 id="Hadoop组件部署"><a href="#Hadoop组件部署" class="headerlink" title="Hadoop组件部署"></a>Hadoop组件部署</h1><p><a href="https://blog.qianyios.top/2023/03/24/Hadoop/">Hadoop部署 - 严千屹 (qianyios.top)</a>本笔记建立在Hadoop伪分布机子上，可以前往查看安装机子</p><h2 id="Zookeeper"><a href="#Zookeeper" class="headerlink" title="Zookeeper"></a>Zookeeper</h2><table><thead><tr><th align="center">名称</th><th align="center">ip</th></tr></thead><tbody><tr><td align="center">zk01</td><td align="center">192.168.48.11</td></tr><tr><td align="center">zk02</td><td align="center">192.168.48.12</td></tr><tr><td align="center">zk03</td><td align="center">192.168.48.13</td></tr></tbody></table><h3 id="设置hosts"><a href="#设置hosts" class="headerlink" title="设置hosts"></a>设置hosts</h3><figure class="highlight accesslog"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><code class="hljs accesslog"><span class="hljs-string">[root@localhost ~]</span># cat /etc/hosts<br><span class="hljs-number">127.0.0.1</span>   localhost localhost.localdomain localhost4 localhost4.localdomain4<br>::<span class="hljs-number">1</span>         localhost localhost.localdomain localhost6 localhost6.localdomain6<br><span class="hljs-number">192.168.48.11</span> zk01<br><span class="hljs-number">192.168.48.12</span> zk02<br><span class="hljs-number">192.168.48.13</span> zk03<br></code></pre></td></tr></table></figure><h3 id="更改主机名"><a href="#更改主机名" class="headerlink" title="更改主机名"></a>更改主机名</h3><figure class="highlight dsconfig"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs dsconfig"><span class="hljs-string">hostnamectl</span> <span class="hljs-built_in">set-hostname</span> <span class="hljs-string">zk01</span> &amp;&amp; <span class="hljs-string">bash</span><br></code></pre></td></tr></table></figure><h3 id="检查java版本"><a href="#检查java版本" class="headerlink" title="检查java版本"></a>检查java版本</h3><figure class="highlight mipsasm"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs mipsasm">[root@zk01 ~]<span class="hljs-comment"># java -version</span><br><span class="hljs-keyword">java </span>version <span class="hljs-string">&quot;1.8.0_162&quot;</span><br><span class="hljs-keyword">Java(TM) </span>SE Runtime Environment (<span class="hljs-keyword">build </span><span class="hljs-number">1</span>.<span class="hljs-number">8</span>.<span class="hljs-number">0</span>_162-<span class="hljs-keyword">b12)</span><br><span class="hljs-keyword"></span><span class="hljs-keyword">Java </span>HotSpot(TM) <span class="hljs-number">64</span>-<span class="hljs-keyword">Bit </span>Server VM (<span class="hljs-keyword">build </span><span class="hljs-number">25</span>.<span class="hljs-number">162</span>-<span class="hljs-keyword">b12, </span>mixed mode)<br></code></pre></td></tr></table></figure><h3 id="检查hadoop版本"><a href="#检查hadoop版本" class="headerlink" title="检查hadoop版本"></a>检查hadoop版本</h3><figure class="highlight awk"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><code class="hljs awk">[root@zk01 ~]<span class="hljs-comment"># hadoop version</span><br>Hadoop <span class="hljs-number">3.1</span>.<span class="hljs-number">3</span><br>Source code repository https:<span class="hljs-regexp">//gi</span>tbox.apache.org<span class="hljs-regexp">/repos/</span>asf/hadoop.git -r ba631c436b806728f8ec2f54ab1e289526c90579<br>Compiled by ztang on <span class="hljs-number">2019</span>-<span class="hljs-number">09</span>-<span class="hljs-number">12</span>T02:<span class="hljs-number">47</span>Z<br>Compiled with protoc <span class="hljs-number">2.5</span>.<span class="hljs-number">0</span><br>From source with checksum ec785077c385118ac91aadde5ec9799<br>This command was run using <span class="hljs-regexp">/usr/</span>local<span class="hljs-regexp">/hadoop/</span>share<span class="hljs-regexp">/hadoop/</span>common/hadoop-common-<span class="hljs-number">3.1</span>.<span class="hljs-number">3</span>.jar<br></code></pre></td></tr></table></figure><h3 id="安装zookeeper"><a href="#安装zookeeper" class="headerlink" title="安装zookeeper"></a>安装zookeeper</h3><figure class="highlight apache"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><code class="hljs apache"><span class="hljs-attribute">tar</span> -xf apache-zookeeper-<span class="hljs-number">3</span>.<span class="hljs-number">8</span>.<span class="hljs-number">0</span>-bin.tar.gz -C /opt<br><span class="hljs-attribute">echo</span> <span class="hljs-string">&quot;export ZOOKEEPER_HOME=/opt/apache-zookeeper-3.8.0-bin&quot;</span> &gt;&gt; /etc/profile<br><span class="hljs-attribute">echo</span> <span class="hljs-string">&quot;export PATH=\$ZOOKEEPER_HOME/bin:\$PATH&quot;</span> &gt;&gt; /etc/profile<br><span class="hljs-attribute">source</span> /etc/profile<br><span class="hljs-attribute">cd</span> /opt/apache-zookeeper-<span class="hljs-number">3</span>.<span class="hljs-number">8</span>.<span class="hljs-number">0</span>-bin/<br><span class="hljs-attribute">cp</span> conf/zoo_sample.cfg conf/zoo.cfg<br><br><span class="hljs-attribute">vi</span> conf/zoo.cfg<br>    <span class="hljs-attribute">tickTime</span>=<span class="hljs-number">2000</span><br>    <span class="hljs-attribute">dataDir</span>=/opt/apache-zookeeper-<span class="hljs-number">3</span>.<span class="hljs-number">8</span>.<span class="hljs-number">0</span>-bin/data<br>    <span class="hljs-attribute">clientPort</span>=<span class="hljs-number">2181</span><br>    <span class="hljs-attribute">initLimit</span>=<span class="hljs-number">10</span><br>    <span class="hljs-attribute">syncLimit</span>=<span class="hljs-number">5</span><br>    <span class="hljs-attribute">maxClientCnxns</span>=<span class="hljs-number">60</span><br>    <span class="hljs-attribute">server</span>.<span class="hljs-number">1</span>=zk01:<span class="hljs-number">2888</span>:<span class="hljs-number">3888</span><br>    <span class="hljs-attribute">server</span>.<span class="hljs-number">2</span>=zk02:<span class="hljs-number">2888</span>:<span class="hljs-number">3888</span><br>    <span class="hljs-attribute">server</span>.<span class="hljs-number">3</span>=zk03:<span class="hljs-number">2888</span>:<span class="hljs-number">3888</span><br><br><span class="hljs-attribute">mkdir</span> /opt/apache-zookeeper-<span class="hljs-number">3</span>.<span class="hljs-number">8</span>.<span class="hljs-number">0</span>-bin/data<br><span class="hljs-attribute">echo</span> <span class="hljs-number">1</span> &gt; /opt/apache-zookeeper-<span class="hljs-number">3</span>.<span class="hljs-number">8</span>.<span class="hljs-number">0</span>-bin/data/myid<br><span class="hljs-attribute">cat</span> /opt/apache-zookeeper-<span class="hljs-number">3</span>.<span class="hljs-number">8</span>.<span class="hljs-number">0</span>-bin/data/myid<br></code></pre></td></tr></table></figure><h3 id="关机克隆出两台机-zk02-zk03"><a href="#关机克隆出两台机-zk02-zk03" class="headerlink" title="关机克隆出两台机 zk02 zk03"></a>关机克隆出两台机 zk02 zk03</h3><p>zk02  192.168.48.12</p><figure class="highlight awk"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs awk">vi <span class="hljs-regexp">/opt/</span>apache-zookeeper-<span class="hljs-number">3.8</span>.<span class="hljs-number">0</span>-bin<span class="hljs-regexp">/data/myi</span>d<br><span class="hljs-number">2</span><br></code></pre></td></tr></table></figure><p>zk03  192.168.48.13</p><figure class="highlight awk"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs awk">vi <span class="hljs-regexp">/opt/</span>apache-zookeeper-<span class="hljs-number">3.8</span>.<span class="hljs-number">0</span>-bin<span class="hljs-regexp">/data/myi</span>d<br><span class="hljs-number">3</span><br></code></pre></td></tr></table></figure><h3 id="互相ping测试连通性"><a href="#互相ping测试连通性" class="headerlink" title="互相ping测试连通性"></a>互相ping测试连通性</h3><figure class="highlight autoit"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs autoit"><span class="hljs-built_in">ping</span> zk01<br><span class="hljs-built_in">ping</span> zk02<br><span class="hljs-built_in">ping</span> zk03<br></code></pre></td></tr></table></figure><p>能互通说明成功</p><h3 id="开启zookeeper服务"><a href="#开启zookeeper服务" class="headerlink" title="开启zookeeper服务"></a>开启zookeeper服务</h3><p>需开启两台才能看见Mode: follower</p><figure class="highlight vim"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs vim">zkServer.<span class="hljs-keyword">sh</span> start<br>zkServer.<span class="hljs-keyword">sh</span> status<br>zkServer.<span class="hljs-keyword">sh</span> <span class="hljs-keyword">stop</span><br></code></pre></td></tr></table></figure><h2 id="HBase安装"><a href="#HBase安装" class="headerlink" title="HBase安装"></a>HBase安装</h2><h3 id="安装hbase"><a href="#安装hbase" class="headerlink" title="安装hbase"></a>安装hbase</h3><figure class="highlight awk"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><code class="hljs awk">[root@hadoop ~]<span class="hljs-comment"># ll</span><br>-rw-r--r--  <span class="hljs-number">1</span> root root <span class="hljs-number">232190985</span> <span class="hljs-number">3</span>月  <span class="hljs-number">17</span> <span class="hljs-number">19</span>:<span class="hljs-number">37</span> hbase-<span class="hljs-number">2.2</span>.<span class="hljs-number">2</span>-bin.tar.gz<br><br>tar -xf hbase-<span class="hljs-number">2.2</span>.<span class="hljs-number">2</span>-bin.tar.gz -C <span class="hljs-regexp">/usr/</span>local/<br>mv <span class="hljs-regexp">/usr/</span>local<span class="hljs-regexp">/hbase-2.2.2 /u</span>sr<span class="hljs-regexp">/local/</span>hbase<br>echo <span class="hljs-string">&quot;export HBASE_HOME=/usr/local/hbase&quot;</span> &gt;&gt; <span class="hljs-regexp">/etc/</span>profile<br>echo <span class="hljs-string">&quot;export PATH=\$PATH:\$HBASE_HOME/bin&quot;</span> &gt;&gt; <span class="hljs-regexp">/etc/</span>profile<br>source <span class="hljs-regexp">/etc/</span>profile<br><br>------------------------------------------------------------------------<br>[root@hadoop ~]<span class="hljs-comment"># vi /usr/local/hbase/bin/hbase</span><br>CLASSPATH=<span class="hljs-variable">$&#123;CLASSPATH&#125;</span>:<span class="hljs-variable">$JAVA_HOME</span><span class="hljs-regexp">/lib/</span>tools.jar:<span class="hljs-regexp">/usr/</span>local<span class="hljs-regexp">/hbase/</span>lib/*<br>或<br>[root@hadoop ~]<span class="hljs-comment"># sed -i &quot;s/CLASSPATH=\$&#123;CLASSPATH&#125;:\$JAVA_HOME\/lib\/tools.jar/CLASSPATH=\$&#123;CLASSPATH&#125;:\$JAVA_HOME\/lib\/tools.jar:\/usr\/local\/hbase\/lib\/*/g&quot; /usr/local/hbase/bin/hbase</span><br>------------------------------------------------------------------------<br><br>[root@hadoop ~]<span class="hljs-comment"># hbase version                                                       SLF4J: Class path contains multiple SLF4J bindings.</span><br>SLF4J: Found binding <span class="hljs-keyword">in</span> [jar:file:<span class="hljs-regexp">/usr/</span>local<span class="hljs-regexp">/hadoop/</span>share<span class="hljs-regexp">/hadoop/</span>common<span class="hljs-regexp">/lib/</span>slf4j-log4j12-<span class="hljs-number">1.7</span>.<span class="hljs-number">25</span>.jar!<span class="hljs-regexp">/org/</span>slf4j<span class="hljs-regexp">/impl/</span>StaticLoggerBinder.class]<br>SLF4J: Found binding <span class="hljs-keyword">in</span> [jar:file:<span class="hljs-regexp">/usr/</span>local<span class="hljs-regexp">/hbase/</span>lib<span class="hljs-regexp">/client-facing-thirdparty/</span>slf4j-log4j12-<span class="hljs-number">1.7</span>.<span class="hljs-number">25</span>.jar!<span class="hljs-regexp">/org/</span>slf4j<span class="hljs-regexp">/impl/</span>StaticLoggerBinder.class]<br>SLF4J: See http:<span class="hljs-regexp">//</span>www.slf4j.org/codes.html<span class="hljs-comment">#multiple_bindings for an explanation.</span><br>SLF4J: Actual binding is of type [org.slf4j.impl.Log4jLoggerFactory]<br>HBase <span class="hljs-number">2.2</span>.<span class="hljs-number">2</span><br>Source code repository git:<span class="hljs-regexp">//</span><span class="hljs-number">6</span>ad68c41b902<span class="hljs-regexp">/opt/</span>hbase-rm<span class="hljs-regexp">/output/</span>hbase revision=e6513a76c91cceda95dad7af246ac81d46fa2589<br>Compiled by hbase-rm on Sat Oct <span class="hljs-number">19</span> <span class="hljs-number">10</span>:<span class="hljs-number">10</span>:<span class="hljs-number">12</span> UTC <span class="hljs-number">2019</span><br>From source with checksum <span class="hljs-number">4</span>d23f97701e395c5d34db1882ac5021b<br></code></pre></td></tr></table></figure><h3 id="HBase配置"><a href="#HBase配置" class="headerlink" title="HBase配置"></a>HBase配置</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><code class="hljs bash"><span class="hljs-built_in">echo</span> <span class="hljs-string">&quot;export JAVA_HOME=/usr/lib/jvm/jdk1.8.0_162&quot;</span> &gt;&gt; <span class="hljs-variable">$HBASE_HOME</span>/conf/hbase-env.sh<br><span class="hljs-built_in">echo</span> <span class="hljs-string">&quot;export HBASE_CLASSPATH=/usr/local/hbase/conf&quot;</span> &gt;&gt; <span class="hljs-variable">$HBASE_HOME</span>/conf/hbase-env.sh<br><span class="hljs-built_in">echo</span> <span class="hljs-string">&quot;export HBASE_MANAGES_ZK=true&quot;</span> &gt;&gt; <span class="hljs-variable">$HBASE_HOME</span>/conf/hbase-env.sh<br><br>vi <span class="hljs-variable">$HBASE_HOME</span>/conf/hbase-site.xml<br>&lt;configuration&gt;<br>        &lt;property&gt;<br>                &lt;name&gt;hbase.rootdir&lt;/name&gt;<br>                &lt;value&gt;hdfs://yjx48:9000/hbase&lt;/value&gt;<br>        &lt;/property&gt;<br>        &lt;property&gt;<br>                &lt;name&gt;hbase.cluster.distributed&lt;/name&gt;<br>                &lt;value&gt;<span class="hljs-literal">true</span>&lt;/value&gt;<br>        &lt;/property&gt;<br>        &lt;property&gt;<br>                &lt;name&gt;hbase.unsafe.stream.capability.enforce&lt;/name&gt;<br>                &lt;value&gt;<span class="hljs-literal">false</span>&lt;/value&gt;<br>        &lt;/property&gt;<br>&lt;/configuration&gt;<br></code></pre></td></tr></table></figure><h3 id="HBase启动"><a href="#HBase启动" class="headerlink" title="HBase启动"></a>HBase启动</h3><figure class="highlight awk"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><code class="hljs awk">start-all.sh <br>start-hbase.sh<br>[root@hadoop hbase]<span class="hljs-comment"># jps</span><br><span class="hljs-number">16532</span> ResourceManager<br><span class="hljs-number">22502</span> HMaster-----------<br><span class="hljs-number">15799</span> NameNode<br><span class="hljs-number">16697</span> NodeManager<br><span class="hljs-number">23097</span> Jps<br><span class="hljs-number">15962</span> DataNode<br><span class="hljs-number">22666</span> HRegionServer-----------<br><span class="hljs-number">16223</span> SecondaryNameNode<br><span class="hljs-number">22431</span> HQuorumPeer<br>[root@hadoop ~]<span class="hljs-comment"># hbase shell</span><br>hbase(main):<span class="hljs-number">001</span>:<span class="hljs-number">0</span>&gt; list<br>TABLE<br><span class="hljs-number">0</span> row(s)<br>Took <span class="hljs-number">0.3118</span> seconds<br>=&gt; []<br>hbase(main):<span class="hljs-number">002</span>:<span class="hljs-number">0</span>&gt; <span class="hljs-keyword">exit</span><br></code></pre></td></tr></table></figure><h3 id="访问网页"><a href="#访问网页" class="headerlink" title="访问网页"></a>访问网页</h3><p>ip:16010</p><h3 id="HBase管理"><a href="#HBase管理" class="headerlink" title="HBase管理"></a>HBase管理</h3><table><thead><tr><th align="center">学号（S_No）</th><th align="center">姓名（S_Name）</th><th align="center">性别（S_Sex）</th><th align="center">年龄（S_Age）</th></tr></thead><tbody><tr><td align="center">2015001</td><td align="center">zhangsan</td><td align="center">male</td><td align="center">23</td></tr><tr><td align="center">2015002</td><td align="center">Mary</td><td align="center">female</td><td align="center">22</td></tr><tr><td align="center">2015003</td><td align="center">Lisi</td><td align="center">male</td><td align="center">24</td></tr></tbody></table><h4 id="创建学生表"><a href="#创建学生表" class="headerlink" title="创建学生表"></a>创建学生表</h4><figure class="highlight excel"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><code class="hljs excel">hbase(main)<span class="hljs-symbol">:004</span><span class="hljs-symbol">:0</span>&gt; create &#x27;student&#x27;,&#x27;no&#x27;,&#x27;name&#x27;,&#x27;sex&#x27;,&#x27;age&#x27;<br>Created table student<br>Took <span class="hljs-number">1.3125</span> seconds<br>=&gt; Hba<span class="hljs-symbol">se:</span><span class="hljs-symbol">:Ta</span>ble - student<br>hbase(main)<span class="hljs-symbol">:005</span><span class="hljs-symbol">:0</span>&gt; list<br>TABLE<br>student<br><span class="hljs-number">1</span> <span class="hljs-built_in">row</span>(s)<br>Took <span class="hljs-number">0.0074</span> seconds<br>=&gt; [<span class="hljs-string">&quot;student&quot;</span>]<br>#查看表结构<br>hbase(main)<span class="hljs-symbol">:001</span><span class="hljs-symbol">:0</span>&gt; describe &#x27;student&#x27;<br>Table student is ENABLED<br>student<br><span class="hljs-built_in">COLUMN</span> FAMILIES DESCRIPTION<br>&#123;NAME =&gt; &#x27;age&#x27;, VERSIONS =&gt; &#x27;<span class="hljs-number">1</span>&#x27;, EVICT_BLOCKS_ON_CLOSE =&gt; &#x27;<span class="hljs-built_in">false</span>&#x27;<br>.......<br></code></pre></td></tr></table></figure><h4 id="添加数据"><a href="#添加数据" class="headerlink" title="添加数据"></a>添加数据</h4><p>s001为行键</p><figure class="highlight stylus"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><code class="hljs stylus"><span class="hljs-function"><span class="hljs-title">hbase</span><span class="hljs-params">(main)</span></span>:<span class="hljs-number">001</span>:<span class="hljs-number">0</span>&gt; scan <span class="hljs-string">&#x27;student&#x27;</span><br>ROW                        COLUMN+CELL<br><span class="hljs-number">0</span> <span class="hljs-built_in">row</span>(s)<br>Took <span class="hljs-number">0.2712</span> seconds<br><span class="hljs-function"><span class="hljs-title">hbase</span><span class="hljs-params">(main)</span></span>:<span class="hljs-number">002</span>:<span class="hljs-number">0</span>&gt; put <span class="hljs-string">&#x27;student&#x27;</span>,<span class="hljs-string">&#x27;s001&#x27;</span>,<span class="hljs-string">&#x27;no&#x27;</span>,<span class="hljs-string">&#x27;2015001&#x27;</span><br>Took <span class="hljs-number">0.0236</span> seconds<br><span class="hljs-function"><span class="hljs-title">hbase</span><span class="hljs-params">(main)</span></span>:<span class="hljs-number">003</span>:<span class="hljs-number">0</span>&gt; put <span class="hljs-string">&#x27;student&#x27;</span>,<span class="hljs-string">&#x27;s001&#x27;</span>,<span class="hljs-string">&#x27;name&#x27;</span>,<span class="hljs-string">&#x27;zhangsan&#x27;</span><br>Took <span class="hljs-number">0.0057</span> seconds<br><span class="hljs-function"><span class="hljs-title">hbase</span><span class="hljs-params">(main)</span></span>:<span class="hljs-number">004</span>:<span class="hljs-number">0</span>&gt; scan <span class="hljs-string">&#x27;student&#x27;</span><br>ROW                        COLUMN+CELL<br> s001                      column=name:, timestamp=<span class="hljs-number">1679058447572</span>, value=zhangsan<br> s001                      column=no:, timestamp=<span class="hljs-number">1679058447550</span>, value=<span class="hljs-number">2015001</span><br><span class="hljs-number">1</span> <span class="hljs-built_in">row</span>(s)<br>Took <span class="hljs-number">0.0179</span> seconds<br></code></pre></td></tr></table></figure><h4 id="查看整行"><a href="#查看整行" class="headerlink" title="查看整行"></a>查看整行</h4><figure class="highlight routeros"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><code class="hljs routeros">hbase(main):001:0&gt; <span class="hljs-built_in">get</span> <span class="hljs-string">&#x27;student&#x27;</span>,<span class="hljs-string">&#x27;s001&#x27;</span><br>COLUMN                     CELL<br> name:                     <span class="hljs-attribute">timestamp</span>=1679058447572, <span class="hljs-attribute">value</span>=zhangsan<br> <span class="hljs-literal">no</span>:                       <span class="hljs-attribute">timestamp</span>=1679058447550, <span class="hljs-attribute">value</span>=2015001<br>1 row(s)<br>Took 0.2910 seconds<br></code></pre></td></tr></table></figure><h4 id="查看单元格"><a href="#查看单元格" class="headerlink" title="查看单元格"></a>查看单元格</h4><figure class="highlight routeros"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs routeros">hbase(main):008:0&gt; <span class="hljs-built_in">get</span> <span class="hljs-string">&#x27;student&#x27;</span>,<span class="hljs-string">&#x27;s001&#x27;</span>,<span class="hljs-string">&#x27;name&#x27;</span><br>COLUMN                     CELL<br> name:                     <span class="hljs-attribute">timestamp</span>=1679058447572, <span class="hljs-attribute">value</span>=zhangsan<br>1 row(s)<br>Took 0.0053 seconds<br></code></pre></td></tr></table></figure><h3 id="订单例子"><a href="#订单例子" class="headerlink" title="订单例子"></a>订单例子</h3><p><img src="https://article.biliimg.com/bfs/article/08e0a6d8c054787343911f423df6a115697559838.png" alt="image-20230317212813880"></p><h4 id="创建order表"><a href="#创建order表" class="headerlink" title="创建order表"></a>创建order表</h4><figure class="highlight routeros"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br></pre></td><td class="code"><pre><code class="hljs routeros">create <span class="hljs-string">&#x27;order&#x27;</span>,<span class="hljs-string">&#x27;userinfo&#x27;</span>,<span class="hljs-string">&#x27;orderinfo&#x27;</span><br>list<br>put <span class="hljs-string">&#x27;order&#x27;</span>,<span class="hljs-string">&#x27;1&#x27;</span>,<span class="hljs-string">&#x27;userinfo:name&#x27;</span>,<span class="hljs-string">&#x27;sw&#x27;</span><br>put <span class="hljs-string">&#x27;order&#x27;</span>,<span class="hljs-string">&#x27;1&#x27;</span>,<span class="hljs-string">&#x27;userinfo:age&#x27;</span>,<span class="hljs-string">&#x27;24&#x27;</span><br>put <span class="hljs-string">&#x27;order&#x27;</span>,<span class="hljs-string">&#x27;1&#x27;</span>,<span class="hljs-string">&#x27;orderinfo:id&#x27;</span>,<span class="hljs-string">&#x27;23333&#x27;</span><br>put <span class="hljs-string">&#x27;order&#x27;</span>,<span class="hljs-string">&#x27;1&#x27;</span>,<span class="hljs-string">&#x27;orderinfo:money&#x27;</span>,<span class="hljs-string">&#x27;30&#x27;</span><br>scan <span class="hljs-string">&#x27;order&#x27;</span><br>-----------------------------------------------------------<br>hbase(main):017:0* create <span class="hljs-string">&#x27;order&#x27;</span>,<span class="hljs-string">&#x27;userinfo&#x27;</span>,<span class="hljs-string">&#x27;orderinfo&#x27;</span><br>Created table order<br>Took 2.3102 seconds<br>=&gt; Hbase::Table - order<br>hbase(main):018:0&gt; list<br>TABLE<br>order<br>student<br>2 row(s)<br>Took 0.0104 seconds<br>=&gt; [<span class="hljs-string">&quot;order&quot;</span>, <span class="hljs-string">&quot;student&quot;</span>]<br>hbase(main):019:0&gt; put <span class="hljs-string">&#x27;order&#x27;</span>,<span class="hljs-string">&#x27;1&#x27;</span>,<span class="hljs-string">&#x27;userinfo:name&#x27;</span>,<span class="hljs-string">&#x27;sw&#x27;</span><br>Took 0.0326 seconds<br>hbase(main):020:0&gt; put <span class="hljs-string">&#x27;order&#x27;</span>,<span class="hljs-string">&#x27;1&#x27;</span>,<span class="hljs-string">&#x27;userinfo:age&#x27;</span>,<span class="hljs-string">&#x27;24&#x27;</span><br>Took 0.0031 seconds<br>hbase(main):021:0&gt; put <span class="hljs-string">&#x27;order&#x27;</span>,<span class="hljs-string">&#x27;1&#x27;</span>,<span class="hljs-string">&#x27;orderinfo:id&#x27;</span>,<span class="hljs-string">&#x27;23333&#x27;</span><br>Took 0.0036 seconds<br>hbase(main):022:0&gt; put <span class="hljs-string">&#x27;order&#x27;</span>,<span class="hljs-string">&#x27;1&#x27;</span>,<span class="hljs-string">&#x27;orderinfo:money&#x27;</span>,<span class="hljs-string">&#x27;30&#x27;</span><br>Took 0.0031 seconds<br>hbase(main):023:0&gt; scan <span class="hljs-string">&#x27;order&#x27;</span><br>ROW                        COLUMN+CELL<br> 1                         <span class="hljs-attribute">column</span>=orderinfo:id, <span class="hljs-attribute">timestamp</span>=1679060732699, <span class="hljs-attribute">value</span>=23333<br> 1                         <span class="hljs-attribute">column</span>=orderinfo:money, <span class="hljs-attribute">timestamp</span>=1679060732711, <span class="hljs-attribute">value</span>=30<br> 1                         <span class="hljs-attribute">column</span>=userinfo:age, <span class="hljs-attribute">timestamp</span>=1679060732685, <span class="hljs-attribute">value</span>=24<br> 1                         <span class="hljs-attribute">column</span>=userinfo:name, <span class="hljs-attribute">timestamp</span>=1679060732667, <span class="hljs-attribute">value</span>=sw<br>1 row(s)<br>Took 0.0116 seconds<br></code></pre></td></tr></table></figure><h3 id="修改数据"><a href="#修改数据" class="headerlink" title="修改数据"></a>修改数据</h3><figure class="highlight stylus"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><code class="hljs stylus"><span class="hljs-function"><span class="hljs-title">hbase</span><span class="hljs-params">(main)</span></span>:<span class="hljs-number">001</span>:<span class="hljs-number">0</span>&gt; put <span class="hljs-string">&#x27;student&#x27;</span>,<span class="hljs-string">&#x27;s001&#x27;</span>,<span class="hljs-string">&#x27;name&#x27;</span>,<span class="hljs-string">&#x27;zhangxiaosan&#x27;</span><br>Took <span class="hljs-number">0.2879</span> seconds<br><span class="hljs-function"><span class="hljs-title">hbase</span><span class="hljs-params">(main)</span></span>:<span class="hljs-number">002</span>:<span class="hljs-number">0</span>&gt; get <span class="hljs-string">&#x27;student&#x27;</span>,<span class="hljs-string">&#x27;s001&#x27;</span>,<span class="hljs-string">&#x27;name&#x27;</span><br>COLUMN                     CELL<br> name:                     timestamp=<span class="hljs-number">1679061655288</span>, value=zhangxiaosan<br><span class="hljs-number">1</span> <span class="hljs-built_in">row</span>(s)<br>Took <span class="hljs-number">0.0280</span> seconds<br></code></pre></td></tr></table></figure><h3 id="时间戳"><a href="#时间戳" class="headerlink" title="时间戳"></a>时间戳</h3><p>#数据添加到HBase的时候都会被记录一个时间戳，这个时间戳被我们当做一个版本。</p><p>当修改某一条的时候，本质上是往里边新增一条数据，记录的版本加一。</p><p><img src="https://article.biliimg.com/bfs/article/5226ce1642156f1c7df2c7b02d9d7fe8697559838.png" alt="image-20230317220909473"></p><p>#现在要把这条记录的值改为40，实际上就是多添加一条记录，在读的时候按照时间戳读最新的记录</p><p><img src="https://article.biliimg.com/bfs/article/05fb0cd53424e07ab688fbb6a5b5e057697559838.png" alt="image-20230317221537086"></p><figure class="highlight routeros"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><code class="hljs routeros">put <span class="hljs-string">&#x27;order&#x27;</span>,<span class="hljs-string">&#x27;1&#x27;</span>,<span class="hljs-string">&#x27;orderinfo:money&#x27;</span>,<span class="hljs-string">&#x27;40&#x27;</span><br><span class="hljs-built_in">get</span> <span class="hljs-string">&#x27;order&#x27;</span>,<span class="hljs-string">&#x27;1&#x27;</span>,<span class="hljs-string">&#x27;orderinfo:money&#x27;</span><br><br>hbase(main):008:0&gt; put <span class="hljs-string">&#x27;order&#x27;</span>,<span class="hljs-string">&#x27;1&#x27;</span>,<span class="hljs-string">&#x27;orderinfo:money&#x27;</span>,<span class="hljs-string">&#x27;40&#x27;</span><br>Took 0.0190 seconds<br>hbase(main):009:0&gt; <span class="hljs-built_in">get</span> <span class="hljs-string">&#x27;order&#x27;</span>,<span class="hljs-string">&#x27;1&#x27;</span>,<span class="hljs-string">&#x27;orderinfo:money&#x27;</span><br>COLUMN                     CELL<br> orderinfo:money           <span class="hljs-attribute">timestamp</span>=1679064515487, <span class="hljs-attribute">value</span>=40<br>1 row(s)<br>Took 0.0096 seconds<br><br></code></pre></td></tr></table></figure><h3 id="删除数据"><a href="#删除数据" class="headerlink" title="删除数据"></a>删除数据</h3><figure class="highlight actionscript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs actionscript">scan <span class="hljs-string">&#x27;student&#x27;</span><br><span class="hljs-keyword">delete</span> <span class="hljs-string">&#x27;student&#x27;</span>,<span class="hljs-string">&#x27;s001&#x27;</span>,<span class="hljs-string">&#x27;name&#x27;</span><br><span class="hljs-keyword">get</span> <span class="hljs-string">&#x27;student&#x27;</span>,<span class="hljs-string">&#x27;s001&#x27;</span>,<span class="hljs-string">&#x27;name&#x27;</span><br></code></pre></td></tr></table></figure><h3 id="删除表"><a href="#删除表" class="headerlink" title="删除表"></a>删除表</h3><figure class="highlight pgsql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs pgsql"><span class="hljs-keyword">disable</span> <span class="hljs-string">&#x27;student&#x27;</span><br>describe <span class="hljs-string">&#x27;student&#x27;</span><br><span class="hljs-keyword">drop</span> <span class="hljs-string">&#x27;student&#x27;</span><br></code></pre></td></tr></table></figure><h3 id="访问网页-1"><a href="#访问网页-1" class="headerlink" title="访问网页"></a>访问网页</h3><p>ip:16010</p><h2 id="NoSQL数据库安装"><a href="#NoSQL数据库安装" class="headerlink" title="NoSQL数据库安装"></a>NoSQL数据库安装</h2><p>（Redis键值对非关系型数据库）</p><h3 id="安装redis"><a href="#安装redis" class="headerlink" title="安装redis"></a>安装redis</h3><figure class="highlight jboss-cli"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br></pre></td><td class="code"><pre><code class="hljs jboss-cli">tar -xf redis-5.0.5.tar.gz<br>mv redis-5.0.5 <span class="hljs-string">/opt/redis</span><br><span class="hljs-keyword">cd</span> <span class="hljs-string">/opt/redis</span><br>yum install -y gcc automake autoconf libtool<br><span class="hljs-comment">#编译安装</span><br>make &amp;&amp; make install<br><span class="hljs-keyword">cd</span> src<br>[root@yjx48 src]<span class="hljs-comment"># ./redis-server</span><br>5861<span class="hljs-function">:C</span> 30 Mar 2023 08<span class="hljs-function">:49</span><span class="hljs-function">:48.699</span> <span class="hljs-comment"># oO0OoO0OoO0Oo Redis is starting oO0OoO0OoO0Oo</span><br>5861<span class="hljs-function">:C</span> 30 Mar 2023 08<span class="hljs-function">:49</span><span class="hljs-function">:48.699</span> <span class="hljs-comment"># Redis version=5.0.5, bits=64, commit=00000000, modified=0, pid=5861, just started</span><br>5861<span class="hljs-function">:C</span> 30 Mar 2023 08<span class="hljs-function">:49</span><span class="hljs-function">:48.699</span> <span class="hljs-comment"># Warning: no config file specified, using the default config. In order to specify a config file use ./redis-server /path/to/redis.conf</span><br>5861<span class="hljs-function">:M</span> 30 Mar 2023 08<span class="hljs-function">:49</span><span class="hljs-function">:48.699</span> * Increased maximum number of open files to 10032 <span class="hljs-params">(it was originally set to 1024)</span>.<br>                _._<br>           _.-``__ &#x27;&#x27;-<span class="hljs-string">._</span><br>      _.-``    `.  `_.  &#x27;&#x27;-<span class="hljs-string">._</span>           Redis 5.0.5 <span class="hljs-params">(00000000/0)</span> 64 bit<br>  <span class="hljs-string">.-</span>`` <span class="hljs-string">.-</span>```.  ```\/    _.,_ &#x27;&#x27;-<span class="hljs-string">._</span><br> <span class="hljs-params">(    &#x27;      ,       .-`  | `,    )</span>     Running in standalone mode<br> |`-<span class="hljs-string">._</span>`-<span class="hljs-string">...-</span>` __.<span class="hljs-string">..-.</span>``-<span class="hljs-string">._</span>|&#x27;` _.-&#x27;|     Port: 6379<br> |    `-<span class="hljs-string">._</span>   `<span class="hljs-string">._</span>    /     _.-&#x27;    |     PID: 5861<br>  `-<span class="hljs-string">._</span>    `-<span class="hljs-string">._</span>  `-<span class="hljs-string">./</span>  _.-&#x27;    _.-&#x27;<br> |`-<span class="hljs-string">._</span>`-<span class="hljs-string">._</span>    `-<span class="hljs-string">.__.-</span>&#x27;    _.-&#x27;_.-&#x27;|<br> |    `-<span class="hljs-string">._</span>`-<span class="hljs-string">._</span>        _.-&#x27;_.-&#x27;    |           http:<span class="hljs-string">//redis.io</span><br>  `-<span class="hljs-string">._</span>    `-<span class="hljs-string">._</span>`-<span class="hljs-string">.__.-</span>&#x27;_.-&#x27;    _.-&#x27;<br> |`-<span class="hljs-string">._</span>`-<span class="hljs-string">._</span>    `-<span class="hljs-string">.__.-</span>&#x27;    _.-&#x27;_.-&#x27;|<br> |    `-<span class="hljs-string">._</span>`-<span class="hljs-string">._</span>        _.-&#x27;_.-&#x27;    |<br>  `-<span class="hljs-string">._</span>    `-<span class="hljs-string">._</span>`-<span class="hljs-string">.__.-</span>&#x27;_.-&#x27;    _.-&#x27;<br>      `-<span class="hljs-string">._</span>    `-<span class="hljs-string">.__.-</span>&#x27;    _.-&#x27;<br>          `-<span class="hljs-string">._</span>        _.-&#x27;<br>              `-<span class="hljs-string">.__.-</span>&#x27;<br><br>5861<span class="hljs-function">:M</span> 30 Mar 2023 08<span class="hljs-function">:49</span><span class="hljs-function">:48.700</span> <span class="hljs-comment"># WARNING: The TCP backlog setting of 511 cannot be enforced because /proc/sys/net/core/somaxconn is set to the lower value of 128.</span><br></code></pre></td></tr></table></figure><figure class="highlight accesslog"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><code class="hljs accesslog">#另开一个会话<br><span class="hljs-string">[root@yjx48 ~]</span># cd /opt/redis/src<br><span class="hljs-string">[root@yjx48 src]</span># ./redis-cli<br><span class="hljs-number">127.0.0.1:6379</span>&gt; set hello world<br>OK<br><span class="hljs-number">127.0.0.1:6379</span>&gt; get hello<br><span class="hljs-string">&quot;world&quot;</span><br><span class="hljs-number">127.0.0.1:6379</span>&gt; exit<br><span class="hljs-string">[root@yjx48 src]</span>#<br></code></pre></td></tr></table></figure><h3 id="数据库管理"><a href="#数据库管理" class="headerlink" title="数据库管理"></a>数据库管理</h3><p><img src="https://article.biliimg.com/bfs/article/aab46cda6e8d635f3baf8a0937e16733697559838.png" alt="image-20230330112542140"></p><h3 id="redis语法"><a href="#redis语法" class="headerlink" title="redis语法"></a>redis语法</h3><figure class="highlight routeros"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><code class="hljs routeros"><span class="hljs-comment">#插入数据</span><br><span class="hljs-built_in">set</span> student:2015001:sname zhangsan<br><span class="hljs-built_in">get</span> student:2015001:sname<br><span class="hljs-built_in">set</span> student:2015001:sex male<br><span class="hljs-built_in">get</span> student:2015001:sex<br><span class="hljs-comment">#修改数据</span><br><span class="hljs-built_in">set</span> student:2015001:sname zhangxiaosan<br><span class="hljs-built_in">get</span> student:2015001:sname<br><span class="hljs-comment">#删除数据</span><br><span class="hljs-built_in">get</span> <span class="hljs-built_in">set</span> student:2015001:sname<br>del <span class="hljs-built_in">set</span> student:2015001:sname<br><span class="hljs-built_in">get</span> <span class="hljs-built_in">set</span> student:2015001:sname<br><span class="hljs-comment">#没数据了</span><br></code></pre></td></tr></table></figure><h3 id="Hash数据库"><a href="#Hash数据库" class="headerlink" title="Hash数据库"></a>Hash数据库</h3><p>student表</p><figure class="highlight routeros"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs routeros">2015001=&#123;<br><span class="hljs-attribute">name</span>=zhangsan<br><span class="hljs-attribute">sex</span>=male<br><span class="hljs-attribute">age</span>=23<br>&#125;<br></code></pre></td></tr></table></figure><p>插入和查询数据</p><figure class="highlight apache"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><code class="hljs apache"><span class="hljs-attribute">hset</span> student:<span class="hljs-number">2015001</span> name zhangsan<br><span class="hljs-attribute">hset</span> student:<span class="hljs-number">2015001</span> sex male<br><span class="hljs-attribute">hset</span> student:<span class="hljs-number">2015001</span> age <span class="hljs-number">23</span><br><span class="hljs-attribute">hget</span> student:<span class="hljs-number">2015001</span> name <br><span class="hljs-attribute">hget</span> student:<span class="hljs-number">2015001</span> sex<br><span class="hljs-attribute">hgetall</span> student:<span class="hljs-number">2015001</span><br></code></pre></td></tr></table></figure><p>修改数据</p><figure class="highlight apache"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs apache"><span class="hljs-attribute">hset</span> student:<span class="hljs-number">2015001</span> sex female<br><span class="hljs-attribute">hget</span> student:<span class="hljs-number">2015001</span> sex female<br></code></pre></td></tr></table></figure><p>删除数据</p><figure class="highlight apache"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs apache"><span class="hljs-attribute">hdel</span> student:<span class="hljs-number">2015001</span> sex<br><span class="hljs-attribute">hget</span> student:<span class="hljs-number">2015001</span> sex<br><span class="hljs-comment">#无数据</span><br></code></pre></td></tr></table></figure><h2 id="MongoDB"><a href="#MongoDB" class="headerlink" title="MongoDB"></a>MongoDB</h2><p>​Mongodb是一个基于分布式文件存储的文档数据库，介于关系数据库和非关系数据库之间，是非关系数<br>据库当中功能最丰富、最像关系数据库的一种 NOSQL数据库。<br>​Mongo最大的特点是支持的查询语言非常强大，语法有点类似于面向对象的查询语言，几乎可以实现类<br>似关系数据库单表查询的绝大部分功能，而且还支持对数据建立索引。<br>​Mongodb支持的数据结构非常松散，是类似json的bson格式，因此可以存储比较复杂的数据类型。</p><h3 id="JSON语法"><a href="#JSON语法" class="headerlink" title="JSON语法"></a>JSON语法</h3><p>JSON 语法是 JavaScript 语法的子集。</p><h4 id="JSON-数字"><a href="#JSON-数字" class="headerlink" title="JSON 数字"></a>JSON 数字</h4><p>JSON 数字可以是整型或者浮点型：<br>{ “age”:30 }</p><h4 id="JSON-对象"><a href="#JSON-对象" class="headerlink" title="JSON 对象"></a>JSON 对象</h4><p>JSON 对象在大括号 {} 中书写：<br>对象可以包含多个名称&#x2F;值对：</p><h4 id="JSON-数组"><a href="#JSON-数组" class="headerlink" title="JSON 数组"></a>JSON 数组</h4><p>JSON 数组在中括号 [] 中书写：<br>数组可包含多个对象：</p><figure class="highlight ada"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><code class="hljs ada">[<br>&#123; key1 : <span class="hljs-type">value1</span>-<span class="hljs-number">1</span> , key2:value1-<span class="hljs-number">2</span> &#125;,<br>&#123; key1 : <span class="hljs-type">value2</span>-<span class="hljs-number">1</span> , key2:value2-<span class="hljs-number">2</span> &#125;,<br>&#123; key1 : <span class="hljs-type">value3</span>-<span class="hljs-number">1</span> , key2:value3-<span class="hljs-number">2</span> &#125;,<br>...<br>&#123; key1 : <span class="hljs-type">valueN</span>-<span class="hljs-number">1</span> , key2:valueN-<span class="hljs-number">2</span> &#125;,<br>]<br><br>&#123;<br><span class="hljs-string">&quot;sites&quot;</span>: [<br>        &#123; <span class="hljs-string">&quot;name&quot;</span>:<span class="hljs-string">&quot;菜鸟教程&quot;</span> , <span class="hljs-string">&quot;url&quot;</span>:<span class="hljs-string">&quot;www.runoob.com&quot;</span> &#125;,<br>        &#123; <span class="hljs-string">&quot;name&quot;</span>:<span class="hljs-string">&quot;google&quot;</span> , <span class="hljs-string">&quot;url&quot;</span>:<span class="hljs-string">&quot;www.google.com&quot;</span> &#125;,<br>        &#123; <span class="hljs-string">&quot;name&quot;</span>:<span class="hljs-string">&quot;微博&quot;</span> , <span class="hljs-string">&quot;url&quot;</span>:<span class="hljs-string">&quot;www.weibo.com&quot;</span> &#125;<br>       ]<br>&#125;<br></code></pre></td></tr></table></figure><p>在上面的例子中，对象 sites 是包含三个对象的数组。每个对象代表一条关于某个网站（name、url）<br>的记录。</p><h4 id="JSON-布尔值"><a href="#JSON-布尔值" class="headerlink" title="JSON 布尔值"></a>JSON 布尔值</h4><p>JSON 布尔值可以是 true 或者 false：</p><figure class="highlight json"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs json"><span class="hljs-punctuation">&#123;</span> <span class="hljs-attr">&quot;flag&quot;</span><span class="hljs-punctuation">:</span><span class="hljs-literal"><span class="hljs-keyword">true</span></span> <span class="hljs-punctuation">&#125;</span><br></code></pre></td></tr></table></figure><h4 id="JSON-null"><a href="#JSON-null" class="headerlink" title="JSON null"></a>JSON null</h4><p>JSON 可以设置 null 值：</p><figure class="highlight json"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs json"><span class="hljs-punctuation">&#123;</span> <span class="hljs-attr">&quot;runoob&quot;</span><span class="hljs-punctuation">:</span><span class="hljs-literal"><span class="hljs-keyword">null</span></span> <span class="hljs-punctuation">&#125;</span><br></code></pre></td></tr></table></figure><h3 id="MongoDB安装"><a href="#MongoDB安装" class="headerlink" title="MongoDB安装"></a>MongoDB安装</h3><figure class="highlight gradle"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><code class="hljs gradle">tar -xf mongodb-linux-x86_64-rhel70-<span class="hljs-number">5.0</span>.<span class="hljs-number">5</span>.tgz <br>mv mongodb-linux-x86_64-rhel70-<span class="hljs-number">5.0</span>.<span class="hljs-number">5</span> <span class="hljs-regexp">/opt/m</span>ongodb<br>cd <span class="hljs-regexp">/opt/m</span>ongodb/bin<br>./mongo -version<br><br>#默认情况下 MongoDB 启动后会初始化以下两个目录，事先创建好：<br>#数据存储目录：<span class="hljs-regexp">/var/</span>lib/mongodb<br>#日志文件目录：<span class="hljs-regexp">/var/</span>log/mongodb<br>mkdir -p <span class="hljs-regexp">/var/</span>lib/mongo<br>mkdir -p <span class="hljs-regexp">/var/</span>log/mongodb<br>#启动mongodb服务<br>cd <span class="hljs-regexp">/opt/m</span>ongodb/bin<br>.<span class="hljs-regexp">/mongod --dbpath /</span>var<span class="hljs-regexp">/lib/m</span>ongo --logpath <span class="hljs-regexp">/var/</span>log<span class="hljs-regexp">/mongodb/m</span>ongod.log --fork<br>ps ax | <span class="hljs-keyword">grep</span> mongod<br>./mongo<br></code></pre></td></tr></table></figure><h3 id="数据库管理-1"><a href="#数据库管理-1" class="headerlink" title="数据库管理"></a>数据库管理</h3><h4 id="常用命令"><a href="#常用命令" class="headerlink" title="常用命令"></a>常用命令</h4><p>#列出所有数据库</p><figure class="highlight pgsql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs pgsql">&gt;<span class="hljs-keyword">show</span> dbs<br><span class="hljs-keyword">admin</span> <span class="hljs-number">0.000</span>GB<br>config <span class="hljs-number">0.000</span>GB<br><span class="hljs-keyword">local</span> <span class="hljs-number">0.000</span>GB<br></code></pre></td></tr></table></figure><p>#切换数据库</p><figure class="highlight pgsql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs pgsql">&gt;use <span class="hljs-keyword">admin</span><br>switched <span class="hljs-keyword">to</span> db <span class="hljs-keyword">admin</span><br></code></pre></td></tr></table></figure><p>#显示当前数据库的所有集合</p><figure class="highlight pgsql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs pgsql">&gt;<span class="hljs-keyword">show</span> collections<br><span class="hljs-keyword">system</span>.<span class="hljs-keyword">version</span><br></code></pre></td></tr></table></figure><p>#显示集合的所有数据</p><figure class="highlight stylus"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs stylus">&gt;db<span class="hljs-selector-class">.system</span><span class="hljs-selector-class">.version</span><span class="hljs-selector-class">.find</span>()<br>&#123; <span class="hljs-string">&quot;_id&quot;</span> : <span class="hljs-string">&quot;featureCompatibilityVersion&quot;</span>, <span class="hljs-string">&quot;version&quot;</span> : <span class="hljs-string">&quot;5.0&quot;</span> &#125;<br></code></pre></td></tr></table></figure><h4 id="创建数据库和集合"><a href="#创建数据库和集合" class="headerlink" title="创建数据库和集合"></a>创建数据库和集合</h4><figure class="highlight mipsasm"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><code class="hljs mipsasm"><span class="hljs-comment">#mongodb没有创建数据库命令</span><br>&gt; use <span class="hljs-keyword">school</span><br><span class="hljs-keyword"></span><span class="hljs-keyword">switched </span>to db <span class="hljs-keyword">school</span><br><span class="hljs-keyword"></span><span class="hljs-comment">#创建集合，同时会自动创建以上的数据库</span><br>&gt; db.createCollection(<span class="hljs-string">&#x27;student&#x27;</span>)<br>&#123; <span class="hljs-string">&quot;ok&quot;</span> : <span class="hljs-number">1</span> &#125;<br>&gt; <span class="hljs-keyword">show </span>dbs<br>admin <span class="hljs-number">0</span>.<span class="hljs-number">000</span>GB<br><span class="hljs-built_in">config</span> <span class="hljs-number">0</span>.<span class="hljs-number">000</span>GB<br>local <span class="hljs-number">0</span>.<span class="hljs-number">000</span>GB<br><span class="hljs-keyword">school </span><span class="hljs-number">0</span>.<span class="hljs-number">000</span>GB<br>&gt; <span class="hljs-keyword">show </span>collections<br>Student<br></code></pre></td></tr></table></figure><h4 id="插入数据"><a href="#插入数据" class="headerlink" title="插入数据"></a>插入数据</h4><figure class="highlight stylus"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><code class="hljs stylus">#两种方法插入数据：insert和save<br>#_id可以手动输入，否则会自动生成<br>&gt;db<span class="hljs-selector-class">.student</span><span class="hljs-selector-class">.insert</span>(&#123;<br>  sno: <span class="hljs-number">2015001</span>,<br>  name: <span class="hljs-string">&quot;zhangsan&quot;</span>,<br>  sex: <span class="hljs-string">&quot;male&quot;</span>,<br>  age: <span class="hljs-number">23</span><br>&#125;)<br><span class="hljs-function"><span class="hljs-title">WriteResult</span><span class="hljs-params">(&#123; <span class="hljs-string">&quot;nInserted&quot;</span> : <span class="hljs-number">1</span> &#125;)</span></span><br><br>&gt; db<span class="hljs-selector-class">.student</span><span class="hljs-selector-class">.find</span>()<br>&#123; <span class="hljs-string">&quot;_id&quot;</span> : <span class="hljs-built_in">ObjectId</span>(<span class="hljs-string">&quot;642e21279c9d145e592fda70&quot;</span>), <span class="hljs-string">&quot;sno&quot;</span> : <span class="hljs-number">2015001</span>, <span class="hljs-string">&quot;name&quot;</span> : <span class="hljs-string">&quot;zhangsan&quot;</span>, <span class="hljs-string">&quot;sex&quot;</span> : <span class="hljs-string">&quot;male&quot;</span>, <span class="hljs-string">&quot;age&quot;</span> : <span class="hljs-number">23</span> &#125;<br><br>&gt; db<span class="hljs-selector-class">.student</span><span class="hljs-selector-class">.save</span>(&#123;sno:<span class="hljs-number">2015002</span>,name:<span class="hljs-string">&#x27;marry&#x27;</span>,sex:<span class="hljs-string">&#x27;female&#x27;</span>,age:<span class="hljs-number">22</span>&#125;)<br><span class="hljs-function"><span class="hljs-title">WriteResult</span><span class="hljs-params">(&#123; <span class="hljs-string">&quot;nInserted&quot;</span> : <span class="hljs-number">1</span> &#125;)</span></span><br><br>&gt; db<span class="hljs-selector-class">.student</span><span class="hljs-selector-class">.find</span>()<br>&#123; <span class="hljs-string">&quot;_id&quot;</span> : <span class="hljs-built_in">ObjectId</span>(<span class="hljs-string">&quot;642e259014c45ed3f90756c0&quot;</span>), <span class="hljs-string">&quot;sno&quot;</span> : <span class="hljs-number">2015001</span>, <span class="hljs-string">&quot;name&quot;</span> : <span class="hljs-string">&quot;zhangsan&quot;</span>, <span class="hljs-string">&quot;sex&quot;</span> : <span class="hljs-string">&quot;male&quot;</span>, <span class="hljs-string">&quot;age&quot;</span> : <span class="hljs-number">23</span> &#125;<br>&#123; <span class="hljs-string">&quot;_id&quot;</span> : <span class="hljs-built_in">ObjectId</span>(<span class="hljs-string">&quot;642e259614c45ed3f90756c1&quot;</span>), <span class="hljs-string">&quot;sno&quot;</span> : <span class="hljs-number">2015002</span>, <span class="hljs-string">&quot;name&quot;</span> : <span class="hljs-string">&quot;marry&quot;</span>, <span class="hljs-string">&quot;sex&quot;</span> : <span class="hljs-string">&quot;female&quot;</span>, <span class="hljs-string">&quot;age&quot;</span> : <span class="hljs-number">22</span> &#125;<br></code></pre></td></tr></table></figure><figure class="highlight stylus"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><code class="hljs stylus">#insert和save区别：手动插入一行时，如_id已经存在，insert则出错，save则替代原值。<br>&gt; db<span class="hljs-selector-class">.student</span><span class="hljs-selector-class">.insert</span>(&#123;<span class="hljs-string">&quot;_id&quot;</span>: <span class="hljs-built_in">ObjectId</span>(<span class="hljs-string">&quot;642e259014c45ed3f90756c0&quot;</span>),   <span class="hljs-string">&quot;sno&quot;</span>: <span class="hljs-number">2015001</span>,   <span class="hljs-string">&quot;name&quot;</span>: <span class="hljs-string">&quot;zhangsan&quot;</span>,   <span class="hljs-string">&quot;sex&quot;</span>: <span class="hljs-string">&quot;male&quot;</span>,   <span class="hljs-string">&quot;age&quot;</span>: <span class="hljs-number">23</span> &#125;)<br><br><span class="hljs-built_in">WriteResult</span>(&#123;<br>        <span class="hljs-string">&quot;nInserted&quot;</span> : <span class="hljs-number">0</span>,<br>        <span class="hljs-string">&quot;writeError&quot;</span> : &#123;<br>                <span class="hljs-string">&quot;code&quot;</span> : <span class="hljs-number">11000</span>,<br>                <span class="hljs-string">&quot;errmsg&quot;</span> : <span class="hljs-string">&quot;E11000 duplicate key error collection: test.student index: _id_ dup key: &#123; _id: ObjectId(&#x27;642e21279c9d145e592fda70&#x27;) &#125;&quot;</span><br>        &#125;<br>&#125;)<br>#更改年龄<span class="hljs-number">23</span>→<span class="hljs-number">24</span><br>&gt; db<span class="hljs-selector-class">.student</span><span class="hljs-selector-class">.save</span>(&#123;<span class="hljs-string">&quot;_id&quot;</span>: <span class="hljs-built_in">ObjectId</span>(<span class="hljs-string">&quot;642e259014c45ed3f90756c0&quot;</span>),   <span class="hljs-string">&quot;sno&quot;</span>: <span class="hljs-number">2015001</span>,   <span class="hljs-string">&quot;name&quot;</span>: <span class="hljs-string">&quot;zhangsan&quot;</span>,   <span class="hljs-string">&quot;sex&quot;</span>: <span class="hljs-string">&quot;male&quot;</span>,   <span class="hljs-string">&quot;age&quot;</span>: <span class="hljs-number">24</span> &#125;)<br><span class="hljs-function"><span class="hljs-title">WriteResult</span><span class="hljs-params">(&#123; <span class="hljs-string">&quot;nMatched&quot;</span> : <span class="hljs-number">1</span>, <span class="hljs-string">&quot;nUpserted&quot;</span> : <span class="hljs-number">0</span>, <span class="hljs-string">&quot;nModified&quot;</span> : <span class="hljs-number">1</span> &#125;)</span></span><br><br>&gt; db<span class="hljs-selector-class">.student</span><span class="hljs-selector-class">.find</span>()<br>&#123; <span class="hljs-string">&quot;_id&quot;</span> : <span class="hljs-built_in">ObjectId</span>(<span class="hljs-string">&quot;642e259014c45ed3f90756c0&quot;</span>), <span class="hljs-string">&quot;sno&quot;</span> : <span class="hljs-number">2015001</span>, <span class="hljs-string">&quot;name&quot;</span> : <span class="hljs-string">&quot;zhangsan&quot;</span>, <span class="hljs-string">&quot;sex&quot;</span> : <span class="hljs-string">&quot;male&quot;</span>, <span class="hljs-string">&quot;age&quot;</span> : <span class="hljs-number">24</span> &#125;<br>&#123; <span class="hljs-string">&quot;_id&quot;</span> : <span class="hljs-built_in">ObjectId</span>(<span class="hljs-string">&quot;642e259614c45ed3f90756c1&quot;</span>), <span class="hljs-string">&quot;sno&quot;</span> : <span class="hljs-number">2015002</span>, <span class="hljs-string">&quot;name&quot;</span> : <span class="hljs-string">&quot;marry&quot;</span>, <span class="hljs-string">&quot;sex&quot;</span> : <span class="hljs-string">&quot;female&quot;</span>, <span class="hljs-string">&quot;age&quot;</span> : <span class="hljs-number">22</span> &#125;<br></code></pre></td></tr></table></figure><h4 id="查找数据"><a href="#查找数据" class="headerlink" title="查找数据"></a>查找数据</h4><figure class="highlight stylus"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><code class="hljs stylus">#查询<br>#查询格式：<span class="hljs-built_in">find</span>(<span class="hljs-selector-attr">[query]</span>,<span class="hljs-selector-attr">[fields]</span>)，类似于sql的select语句，query相当于where，fields相当<br>于显示的列<br>#查询名字为zhangsan的数据<br>&gt; db<span class="hljs-selector-class">.student</span><span class="hljs-selector-class">.find</span>(&#123;name:<span class="hljs-string">&#x27;zhangsan&#x27;</span>&#125;)<br>&#123; <span class="hljs-string">&quot;_id&quot;</span> : <span class="hljs-built_in">ObjectId</span>(<span class="hljs-string">&quot;642e259014c45ed3f90756c0&quot;</span>), <span class="hljs-string">&quot;sno&quot;</span> : <span class="hljs-number">2015001</span>, <span class="hljs-string">&quot;name&quot;</span> : <span class="hljs-string">&quot;zhangsan&quot;</span>, <span class="hljs-string">&quot;sex&quot;</span> : <span class="hljs-string">&quot;male&quot;</span>, <span class="hljs-string">&quot;age&quot;</span> : <span class="hljs-number">24</span> &#125;<br>#查询名字为zhangsan的人的性别<br>&gt; db<span class="hljs-selector-class">.student</span><span class="hljs-selector-class">.find</span>(&#123;name:<span class="hljs-string">&#x27;zhangsan&#x27;</span>&#125;,&#123;name:<span class="hljs-number">1</span>,sex:<span class="hljs-number">1</span>&#125;)<br>&#123; <span class="hljs-string">&quot;_id&quot;</span> : <span class="hljs-built_in">ObjectId</span>(<span class="hljs-string">&quot;642e259014c45ed3f90756c0&quot;</span>), <span class="hljs-string">&quot;name&quot;</span> : <span class="hljs-string">&quot;zhangsan&quot;</span>, <span class="hljs-string">&quot;sex&quot;</span> : <span class="hljs-string">&quot;male&quot;</span> &#125;<br>#不显示_id<br>&gt; db<span class="hljs-selector-class">.student</span><span class="hljs-selector-class">.find</span>(&#123;name:<span class="hljs-string">&#x27;zhangsan&#x27;</span>&#125;,&#123;_id:<span class="hljs-number">0</span>,name:<span class="hljs-number">1</span>,sex:<span class="hljs-number">1</span>&#125;)<br>&#123; <span class="hljs-string">&quot;name&quot;</span> : <span class="hljs-string">&quot;zhangsan&quot;</span>, <span class="hljs-string">&quot;sex&quot;</span> : <span class="hljs-string">&quot;male&quot;</span> &#125;<br>#查询指定列<br>&gt; db<span class="hljs-selector-class">.student</span><span class="hljs-selector-class">.find</span>(&#123;&#125;,&#123;name:<span class="hljs-number">1</span>&#125;)<br>&#123; <span class="hljs-string">&quot;_id&quot;</span> : <span class="hljs-built_in">ObjectId</span>(<span class="hljs-string">&quot;642e259014c45ed3f90756c0&quot;</span>), <span class="hljs-string">&quot;name&quot;</span> : <span class="hljs-string">&quot;zhangsan&quot;</span> &#125;<br>&#123; <span class="hljs-string">&quot;_id&quot;</span> : <span class="hljs-built_in">ObjectId</span>(<span class="hljs-string">&quot;642e259614c45ed3f90756c1&quot;</span>), <span class="hljs-string">&quot;name&quot;</span> : <span class="hljs-string">&quot;marry&quot;</span> &#125;<br>#and查询条件 <br>&gt; db<span class="hljs-selector-class">.student</span><span class="hljs-selector-class">.find</span>(&#123;name:<span class="hljs-string">&#x27;zhangsan&#x27;</span>,sex:<span class="hljs-string">&#x27;female&#x27;</span>&#125;)<br>&gt; db<span class="hljs-selector-class">.student</span><span class="hljs-selector-class">.find</span>(&#123;name:<span class="hljs-string">&#x27;zhangsan&#x27;</span>,sex:<span class="hljs-string">&#x27;male&#x27;</span>&#125;)<br>&#123; <span class="hljs-string">&quot;_id&quot;</span> : <span class="hljs-built_in">ObjectId</span>(<span class="hljs-string">&quot;642e259014c45ed3f90756c0&quot;</span>), <span class="hljs-string">&quot;sno&quot;</span> : <span class="hljs-number">2015001</span>, <span class="hljs-string">&quot;name&quot;</span> : <span class="hljs-string">&quot;zhangsan&quot;</span>, <span class="hljs-string">&quot;sex&quot;</span> : <span class="hljs-string">&quot;male&quot;</span>, <span class="hljs-string">&quot;age&quot;</span> : <span class="hljs-number">24</span> &#125;<br>&gt;db<span class="hljs-selector-class">.student</span><span class="hljs-selector-class">.find</span>(&#123;<span class="hljs-variable">$or</span>:<span class="hljs-selector-attr">[&#123;age:24&#125;,&#123;age:22&#125;]</span>&#125;)<br>#or查询<br>&gt; db<span class="hljs-selector-class">.student</span><span class="hljs-selector-class">.find</span>(&#123;  <span class="hljs-variable">$or</span>:<span class="hljs-selector-attr">[&#123;age:24&#125;,&#123;age:22&#125;]</span>  &#125;)<br>&#123; <span class="hljs-string">&quot;_id&quot;</span> : <span class="hljs-built_in">ObjectId</span>(<span class="hljs-string">&quot;642e259014c45ed3f90756c0&quot;</span>), <span class="hljs-string">&quot;sno&quot;</span> : <span class="hljs-number">2015001</span>, <span class="hljs-string">&quot;name&quot;</span> : <span class="hljs-string">&quot;zhangsan&quot;</span>, <span class="hljs-string">&quot;sex&quot;</span> : <span class="hljs-string">&quot;male&quot;</span>, <span class="hljs-string">&quot;age&quot;</span> : <span class="hljs-number">24</span> &#125;<br>&#123; <span class="hljs-string">&quot;_id&quot;</span> : <span class="hljs-built_in">ObjectId</span>(<span class="hljs-string">&quot;642e259614c45ed3f90756c1&quot;</span>), <span class="hljs-string">&quot;sno&quot;</span> : <span class="hljs-number">2015002</span>, <span class="hljs-string">&quot;name&quot;</span> : <span class="hljs-string">&quot;marry&quot;</span>, <span class="hljs-string">&quot;sex&quot;</span> : <span class="hljs-string">&quot;female&quot;</span>, <span class="hljs-string">&quot;age&quot;</span> : <span class="hljs-number">22</span> &#125;<br></code></pre></td></tr></table></figure><h4 id="修改数据-1"><a href="#修改数据-1" class="headerlink" title="修改数据"></a>修改数据</h4><p>#格式：update( query, <update object or pipeline>[, upsert_bool, multi_bool] )<br>#query : update的查询条件，类似sql update查询内where后面的。<br>#update : update的对象和一些更新的操作符（如$,$inc…）等，也可以理解为sql update查询内<br>set后面的<br>#upsert : 可选，这个参数的意思是，如果不存在update的记录，是否插入objNew,true为插入，默认是<br>false，不插入。<br>#multi : 可选，mongodb 默认是false,只更新找到的第一条记录，如果这个参数为true,就把按条件查<br>出来多条记录全部更新。</p><figure class="highlight stylus"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><code class="hljs stylus">&gt; db<span class="hljs-selector-class">.student</span><span class="hljs-selector-class">.update</span>(&#123;name:<span class="hljs-string">&#x27;zhangsan&#x27;</span>&#125;,&#123;<span class="hljs-variable">$set</span>:&#123;age:<span class="hljs-number">23</span>&#125;&#125;)<br><span class="hljs-function"><span class="hljs-title">WriteResult</span><span class="hljs-params">(&#123; <span class="hljs-string">&quot;nMatched&quot;</span> : <span class="hljs-number">1</span>, <span class="hljs-string">&quot;nUpserted&quot;</span> : <span class="hljs-number">0</span>, <span class="hljs-string">&quot;nModified&quot;</span> : <span class="hljs-number">1</span> &#125;)</span></span><br><br>&gt; db<span class="hljs-selector-class">.student</span><span class="hljs-selector-class">.find</span>()<br>&#123; <span class="hljs-string">&quot;_id&quot;</span> : <span class="hljs-built_in">ObjectId</span>(<span class="hljs-string">&quot;642e259014c45ed3f90756c0&quot;</span>), <span class="hljs-string">&quot;sno&quot;</span> : <span class="hljs-number">2015001</span>, <span class="hljs-string">&quot;name&quot;</span> : <span class="hljs-string">&quot;zhangsan&quot;</span>, <span class="hljs-string">&quot;sex&quot;</span> : <span class="hljs-string">&quot;male&quot;</span>, <span class="hljs-string">&quot;age&quot;</span> : <span class="hljs-number">23</span> &#125;<br>&#123; <span class="hljs-string">&quot;_id&quot;</span> : <span class="hljs-built_in">ObjectId</span>(<span class="hljs-string">&quot;642e259614c45ed3f90756c1&quot;</span>), <span class="hljs-string">&quot;sno&quot;</span> : <span class="hljs-number">2015002</span>, <span class="hljs-string">&quot;name&quot;</span> : <span class="hljs-string">&quot;marry&quot;</span>, <span class="hljs-string">&quot;sex&quot;</span> : <span class="hljs-string">&quot;female&quot;</span>, <span class="hljs-string">&quot;age&quot;</span> : <span class="hljs-number">22</span> &#125;<br></code></pre></td></tr></table></figure><h4 id="删除数据-1"><a href="#删除数据-1" class="headerlink" title="删除数据"></a>删除数据</h4><figure class="highlight stylus"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs stylus">&gt; db<span class="hljs-selector-class">.student</span><span class="hljs-selector-class">.remove</span>(&#123;name:<span class="hljs-string">&#x27;zhangsan&#x27;</span>&#125;)<br><span class="hljs-function"><span class="hljs-title">WriteResult</span><span class="hljs-params">(&#123; <span class="hljs-string">&quot;nRemoved&quot;</span> : <span class="hljs-number">1</span> &#125;)</span></span><br>&gt; db<span class="hljs-selector-class">.student</span><span class="hljs-selector-class">.find</span>()<br>&#123; <span class="hljs-string">&quot;_id&quot;</span> : <span class="hljs-built_in">ObjectId</span>(<span class="hljs-string">&quot;642e259614c45ed3f90756c1&quot;</span>), <span class="hljs-string">&quot;sno&quot;</span> : <span class="hljs-number">2015002</span>, <span class="hljs-string">&quot;name&quot;</span> : <span class="hljs-string">&quot;marry&quot;</span>, <span class="hljs-string">&quot;sex&quot;</span> : <span class="hljs-string">&quot;female&quot;</span>, <span class="hljs-string">&quot;age&quot;</span> : <span class="hljs-number">22</span> &#125;<br></code></pre></td></tr></table></figure><h4 id="删除集合"><a href="#删除集合" class="headerlink" title="删除集合"></a>删除集合</h4><figure class="highlight node-repl"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><code class="hljs node-repl"><span class="hljs-meta prompt_">&gt;</span> <span class="language-javascript">db.<span class="hljs-title function_">createCollection</span>(<span class="hljs-string">&#x27;course&#x27;</span>)</span><br>&#123; &quot;ok&quot; : 1 &#125;<br><span class="hljs-meta prompt_">&gt;</span> <span class="language-javascript">show collections</span><br>course<br>student<br><span class="hljs-meta prompt_">&gt;</span> <span class="language-javascript">db.<span class="hljs-property">course</span>.<span class="hljs-title function_">drop</span>()</span><br>true<br><span class="hljs-meta prompt_">&gt;</span> <span class="language-javascript">show collections</span><br>student<br><br></code></pre></td></tr></table></figure><h2 id="Hive数据仓库安装"><a href="#Hive数据仓库安装" class="headerlink" title="Hive数据仓库安装"></a>Hive数据仓库安装</h2><p>hive 是一种底层封装了Hadoop 的数据仓库处理工具，使用类SQL 的hiveSQL 语言实现数据查询，所有hive 的数据都存储在Hadoop 兼容的文件系统（例如，[Amazon S3](<a href="https://baike.baidu.com/item/Amazon">https://baike.baidu.com/item/Amazon</a> S3&#x2F;10809744)、HDFS）中。hive 在加载数据过程中不会对数据进行任何的修改，只是将数据移动到HDFS 中hive 设定的目录下，因此，hive 不支持对数据的改写和添加，所有的数据都是在加载的时候确定的。</p><p><strong>用户接口Client</strong></p><p>用户接口主要有三个：CLI，Client 和 WUI。其中最常用的是 Cli，Cli 启动的时候，会同时启动一个 hive 副本。Client 是 hive 的客户端，用户连接至 hive Server。在启动 Client 模式的时候，需要指出 hive Server 所在节点，并且在该节点启动 hive Server。 WUI 是通过浏览器访问 hive。</p><p><strong>元数据存储 Metastore</strong></p><p>hive 将元数据存储在数据库中，如 mysql、derby。hive 中的元数据包括表的名字，表的列和分区及其属性，表的属性（是否为外部表等），表的数据所在目录等。</p><p><strong>驱动器：Driver 解释器、编译器、优化器、执行器</strong></p><p>解释器、编译器、优化器完成 HQL 查询语句从词法分析、语法分析、编译、优化以及查询计划的生成。生成的查询计划存储在 HDFS 中，并在随后由 MapReduce 调用执行。</p><p><strong>Hadoop</strong></p><p>hive 的数据存储在 HDFS 中，大部分的查询由 MapReduce 完成（不包含 * 的查询，比如 select * from tbl 不会生成 MapReduce 任务）。</p><p><img src="https://article.biliimg.com/bfs/article/8ae8e7e6d2caa991b511245460748615697559838.png" alt="image-20230413095240448"></p><p><img src="https://article.biliimg.com/bfs/article/8d03f69248459ebce301c4b7a66bde74697559838.png" alt="image-20230413095305455"></p><h3 id="安装hive"><a href="#安装hive" class="headerlink" title="安装hive"></a>安装hive</h3><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br></pre></td><td class="code"><pre><code class="hljs xml">tar -xf apache-hive-3.1.2-bin.tar.gz<br>mv apache-hive-3.1.2-bin /usr/local/hive<br>echo &quot;export HIVE_HOME=/usr/local/hive&quot; &gt;&gt; /etc/profile<br>echo &quot;export PATH=\$HIVE_HOME/bin:\$PATH&quot; &gt;&gt; /etc/profile<br>source /etc/profile<br>cd /usr/local/hive/conf/<br>cp hive-default.xml.template hive-default.xml<br>vi hive-site.xml<br><span class="hljs-meta">&lt;?xml version=<span class="hljs-string">&quot;1.0&quot;</span> encoding=<span class="hljs-string">&quot;UTF-8&quot;</span> standalone=<span class="hljs-string">&quot;no&quot;</span>?&gt;</span><br><span class="hljs-meta">&lt;?xml-stylesheet type=<span class="hljs-string">&quot;text/xsl&quot;</span> href=<span class="hljs-string">&quot;configuration.xsl&quot;</span>?&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">configuration</span>&gt;</span><br>  <span class="hljs-tag">&lt;<span class="hljs-name">property</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">name</span>&gt;</span>javax.jdo.option.ConnectionURL<span class="hljs-tag">&lt;/<span class="hljs-name">name</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">value</span>&gt;</span>jdbc:mysql://yjx48:3306/hive?useSSL=false<span class="hljs-tag">&lt;/<span class="hljs-name">value</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">description</span>&gt;</span>JDBC connect string for a JDBC metastore<span class="hljs-tag">&lt;/<span class="hljs-name">description</span>&gt;</span><br>  <span class="hljs-tag">&lt;/<span class="hljs-name">property</span>&gt;</span><br>  <span class="hljs-tag">&lt;<span class="hljs-name">property</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">name</span>&gt;</span>javax.jdo.option.ConnectionDriverName<span class="hljs-tag">&lt;/<span class="hljs-name">name</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">value</span>&gt;</span>com.mysql.jdbc.Driver<span class="hljs-tag">&lt;/<span class="hljs-name">value</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">description</span>&gt;</span>Driver class name for a JDBC metastore<span class="hljs-tag">&lt;/<span class="hljs-name">description</span>&gt;</span><br>  <span class="hljs-tag">&lt;/<span class="hljs-name">property</span>&gt;</span><br>  <span class="hljs-tag">&lt;<span class="hljs-name">property</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">name</span>&gt;</span>javax.jdo.option.ConnectionUserName<span class="hljs-tag">&lt;/<span class="hljs-name">name</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">value</span>&gt;</span>root<span class="hljs-tag">&lt;/<span class="hljs-name">value</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">description</span>&gt;</span>username to use against metastore database<span class="hljs-tag">&lt;/<span class="hljs-name">description</span>&gt;</span><br>  <span class="hljs-tag">&lt;/<span class="hljs-name">property</span>&gt;</span><br>  <span class="hljs-tag">&lt;<span class="hljs-name">property</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">name</span>&gt;</span>javax.jdo.option.ConnectionPassword<span class="hljs-tag">&lt;/<span class="hljs-name">name</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">value</span>&gt;</span>Yjx@666.<span class="hljs-tag">&lt;/<span class="hljs-name">value</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">description</span>&gt;</span>password to use against metastore database<span class="hljs-tag">&lt;/<span class="hljs-name">description</span>&gt;</span><br>  <span class="hljs-tag">&lt;/<span class="hljs-name">property</span>&gt;</span><br><span class="hljs-tag">&lt;/<span class="hljs-name">configuration</span>&gt;</span><br></code></pre></td></tr></table></figure><p>其中Yjx@666.是mysql密码</p><h3 id="安装mysql"><a href="#安装mysql" class="headerlink" title="安装mysql"></a>安装mysql</h3><figure class="highlight apache"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><code class="hljs apache"><span class="hljs-attribute">cd</span><br><span class="hljs-attribute">yum</span> remove mariadb-libs.x86_64 -y<br><span class="hljs-attribute">yum</span> install -y net-tools<br><span class="hljs-attribute">mkdir</span> mysql<br><span class="hljs-attribute">tar</span> -xf mysql-<span class="hljs-number">5</span>.<span class="hljs-number">7</span>.<span class="hljs-number">37</span>-<span class="hljs-number">1</span>.el7.x86_64.rpm-bundle.tar -C mysql<br><span class="hljs-attribute">cd</span> mysql<br><span class="hljs-attribute">rpm</span> -ivh mysql-community-common-<span class="hljs-number">5</span>.<span class="hljs-number">7</span>.<span class="hljs-number">37</span>-<span class="hljs-number">1</span>.el7.x86_64.rpm<br><span class="hljs-attribute">rpm</span> -ivh mysql-community-libs-<span class="hljs-number">5</span>.<span class="hljs-number">7</span>.<span class="hljs-number">37</span>-<span class="hljs-number">1</span>.el7.x86_64.rpm<br><span class="hljs-attribute">rpm</span> -ivh mysql-community-libs-compat-<span class="hljs-number">5</span>.<span class="hljs-number">7</span>.<span class="hljs-number">37</span>-<span class="hljs-number">1</span>.el7.x86_64.rpm<br><span class="hljs-attribute">rpm</span> -ivh mysql-community-client-<span class="hljs-number">5</span>.<span class="hljs-number">7</span>.<span class="hljs-number">37</span>-<span class="hljs-number">1</span>.el7.x86_64.rpm<br><span class="hljs-attribute">rpm</span> -ivh mysql-community-devel-<span class="hljs-number">5</span>.<span class="hljs-number">7</span>.<span class="hljs-number">37</span>-<span class="hljs-number">1</span>.el7.x86_64.rpm<br><span class="hljs-attribute">rpm</span> -ivh mysql-community-server-<span class="hljs-number">5</span>.<span class="hljs-number">7</span>.<span class="hljs-number">37</span>-<span class="hljs-number">1</span>.el7.x86_64.rpm<br><span class="hljs-attribute">systemctl</span> enable --now mysqld<br><span class="hljs-attribute">grep</span>  &#x27;temporary password&#x27; /var/log/mysqld.log<br><span class="hljs-attribute">mysqladmin</span> -uroot -p&#x27;darm4hb.<span class="hljs-number">2</span>Rsy&#x27; password &#x27;Yjx@<span class="hljs-number">666</span>.&#x27;<br><span class="hljs-attribute">mysql</span> -uroot -pYjx@<span class="hljs-number">666</span>.<br><span class="hljs-comment">#给root用户授权</span><br><span class="hljs-attribute">grant</span> <span class="hljs-literal">all</span> privileges <span class="hljs-literal">on</span> *.* to &#x27;root&#x27;@&#x27;localhost&#x27; identified by &#x27;Yjx@<span class="hljs-number">666</span>.&#x27; with grant option;<br><span class="hljs-attribute">grant</span> <span class="hljs-literal">all</span> privileges <span class="hljs-literal">on</span> *.* to &#x27;root&#x27;@&#x27;%&#x27; identified by &#x27;Yjx@<span class="hljs-number">666</span>.&#x27; with grant option;<br><span class="hljs-attribute">flush</span> privileges;<br><span class="hljs-attribute">create</span> database hive;<br><span class="hljs-attribute">exit</span><br></code></pre></td></tr></table></figure><h3 id="配置和启动hive"><a href="#配置和启动hive" class="headerlink" title="配置和启动hive"></a>配置和启动hive</h3><figure class="highlight awk"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><code class="hljs awk">cd<br>tar -xf mysql-connector-java-<span class="hljs-number">5.1</span>.<span class="hljs-number">40</span>.tar.gz<br>cp mysql-connector-java-<span class="hljs-number">5.1</span>.<span class="hljs-number">40</span><span class="hljs-regexp">/mysql-connector-java-5.1.40-bin.jar /u</span>sr<span class="hljs-regexp">/local/</span>hive<span class="hljs-regexp">/lib/</span><br>mv <span class="hljs-regexp">/usr/</span>local<span class="hljs-regexp">/hive/</span>lib/guava-<span class="hljs-number">19.0</span>.jar&#123;,.bak&#125;<br>cp <span class="hljs-regexp">/usr/</span>local<span class="hljs-regexp">/hadoop/</span>share<span class="hljs-regexp">/hadoop/</span>common<span class="hljs-regexp">/lib/gu</span>ava-<span class="hljs-number">27.0</span>-jre.jar  <span class="hljs-regexp">/usr/</span>local<span class="hljs-regexp">/hive/</span>lib<br>start-all.sh <br>schematool -dbType mysql -initSchema<br>hive<br></code></pre></td></tr></table></figure><h3 id="Hive数据类型"><a href="#Hive数据类型" class="headerlink" title="Hive数据类型"></a>Hive数据类型</h3><table><thead><tr><th align="center">类型</th><th align="center">描述</th><th align="center">示例</th></tr></thead><tbody><tr><td align="center">TINYINT（tinyint）</td><td align="center">一个字节（8位）有符号整数，  -128~127</td><td align="center">1</td></tr><tr><td align="center">SMALLINT（smallint）</td><td align="center">2字节（16位）有符号整数，-32768~32767</td><td align="center">1</td></tr><tr><td align="center">INT（int）</td><td align="center">4字节（32位）有符号整数</td><td align="center">1</td></tr><tr><td align="center">BIGINT（bigint）</td><td align="center">8字节（64位）有符号整数</td><td align="center">1</td></tr><tr><td align="center">FLOAT（float）</td><td align="center">4字节（32位）单精度浮点数</td><td align="center">1</td></tr><tr><td align="center">DOUBLE（double）</td><td align="center">8字节（64位）双精度浮点数</td><td align="center">1</td></tr><tr><td align="center">DECIMAL(decimal)</td><td align="center">任意精度的带符号小数</td><td align="center">1</td></tr><tr><td align="center">BOOLEAN（boolean）</td><td align="center">true&#x2F;false</td><td align="center">true&#x2F;false</td></tr><tr><td align="center">STRING（string）</td><td align="center">字符串，变长</td><td align="center">‘a’,‘b’,‘1’</td></tr><tr><td align="center">VARCHAR（varchar）</td><td align="center">变长字符串</td><td align="center">‘a’</td></tr><tr><td align="center">CHAR（char）</td><td align="center">固定长度字符串</td><td align="center">‘a’</td></tr><tr><td align="center">BINANY（binany）</td><td align="center">字节数组</td><td align="center">无法表示</td></tr><tr><td align="center">TIMESTAMP（timestamp）</td><td align="center">时间戳，纳秒精度</td><td align="center">1.22327E+11</td></tr><tr><td align="center">DATE（date）</td><td align="center">日期</td><td align="center">‘2016-03-29’</td></tr></tbody></table><h3 id="hive的集合数据类型"><a href="#hive的集合数据类型" class="headerlink" title="hive的集合数据类型"></a>hive的集合数据类型</h3><table><thead><tr><th align="center">类型</th><th align="center">描述</th><th align="center">示例</th></tr></thead><tbody><tr><td align="center">ARRAY</td><td align="center">有序数组，字段的类型必须相同</td><td align="center">Array（1，2）</td></tr><tr><td align="center">MAP</td><td align="center">一组无序的键值对，键的类型必须是原始数据类型，他的值可以是任何类型，同一个映射的键的类型必须相同，值得类型也必须相同</td><td align="center">Map（‘a’,1）</td></tr><tr><td align="center">STRUCT</td><td align="center">一组命名的字段,字段类型可以不同</td><td align="center">Struct（‘a’,1,2.0</td></tr><tr><td align="center">UNION</td><td align="center">UNION则类似于C语言中的UNION结构，在给定的任何一个时间点，UNION类型可以保存指定数据类型中的任意一种</td><td align="center"></td></tr></tbody></table><h3 id="基本命令"><a href="#基本命令" class="headerlink" title="基本命令"></a>基本命令</h3><h4 id="创建数据库和表"><a href="#创建数据库和表" class="headerlink" title="创建数据库和表"></a>创建数据库和表</h4><figure class="highlight pgsql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs pgsql"><span class="hljs-keyword">create</span> <span class="hljs-keyword">database</span> hive;<br>use hive;<br><span class="hljs-keyword">create</span> <span class="hljs-keyword">table</span> usr(id <span class="hljs-type">int</span>,<span class="hljs-type">name</span> string,age <span class="hljs-type">int</span>);<br></code></pre></td></tr></table></figure><h4 id="查看和描述数据库和表"><a href="#查看和描述数据库和表" class="headerlink" title="查看和描述数据库和表"></a>查看和描述数据库和表</h4><figure class="highlight abnf"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs abnf">show databases<span class="hljs-comment">;</span><br>show tables<span class="hljs-comment">;</span><br>describe database hive<span class="hljs-comment">;</span><br>describe hive.usr<span class="hljs-comment">;</span><br></code></pre></td></tr></table></figure><h4 id="向表中装载数据"><a href="#向表中装载数据" class="headerlink" title="向表中装载数据"></a>向表中装载数据</h4><figure class="highlight pgsql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><code class="hljs pgsql"><span class="hljs-keyword">insert</span> <span class="hljs-keyword">into</span> usr <span class="hljs-keyword">values</span>(<span class="hljs-number">1</span>,<span class="hljs-string">&#x27;sina&#x27;</span>,<span class="hljs-number">20</span>);<br><br>#从linux读取数据<br>[root@yjx48 ~]# echo &quot;2,zhangsan,22&quot; &gt;&gt; /opt/data<br>hive&gt; use hive;<br><span class="hljs-keyword">create</span> <span class="hljs-keyword">table</span> usr1(id <span class="hljs-type">int</span>,<span class="hljs-type">name</span> string,age <span class="hljs-type">int</span>) <span class="hljs-keyword">row</span> <span class="hljs-keyword">format</span> delimited fields terminated <span class="hljs-keyword">by</span> &quot;,&quot;;<br><span class="hljs-keyword">load</span> data <span class="hljs-keyword">local</span> inpath <span class="hljs-string">&#x27;/opt/data&#x27;</span> overwrite <span class="hljs-keyword">into</span> <span class="hljs-keyword">table</span> usr1;<br></code></pre></td></tr></table></figure><h4 id="从hdfs中读取数据"><a href="#从hdfs中读取数据" class="headerlink" title="从hdfs中读取数据"></a>从hdfs中读取数据</h4><figure class="highlight gradle"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs gradle">echo <span class="hljs-string">&quot;3,lisi,25&quot;</span> &gt;&gt; <span class="hljs-regexp">/opt/</span>test.txt<br>hdfs dfs -put <span class="hljs-regexp">/opt/</span>test.txt /<br>hive<br>load data inpath <span class="hljs-string">&#x27;hdfs://yjx48:9000/test.txt&#x27;</span> overwrite <span class="hljs-keyword">into</span> table usr1;<br></code></pre></td></tr></table></figure><h4 id="从别的表中读取数据"><a href="#从别的表中读取数据" class="headerlink" title="从别的表中读取数据"></a>从别的表中读取数据</h4><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><code class="hljs sql">hive<span class="hljs-operator">&gt;</span> <span class="hljs-keyword">select</span> <span class="hljs-operator">*</span> <span class="hljs-keyword">from</span> usr;<br>OK<br><span class="hljs-number">1</span>       sina    <span class="hljs-number">20</span><br><br>hive<span class="hljs-operator">&gt;</span> <span class="hljs-keyword">select</span> <span class="hljs-operator">*</span> <span class="hljs-keyword">from</span> usr1;<br>OK<br><span class="hljs-number">3</span>       lisi    <span class="hljs-number">25</span><br>#读取usr1的id<span class="hljs-operator">=</span><span class="hljs-number">3</span>的数据到usr<br><span class="hljs-keyword">insert</span> overwrite <span class="hljs-keyword">table</span> usr <span class="hljs-keyword">select</span> <span class="hljs-operator">*</span> <span class="hljs-keyword">from</span> usr1 <span class="hljs-keyword">where</span> id<span class="hljs-operator">=</span><span class="hljs-number">3</span>;<br><br>hive<span class="hljs-operator">&gt;</span> <span class="hljs-keyword">select</span> <span class="hljs-operator">*</span> <span class="hljs-keyword">from</span> usr;<br>OK<br><span class="hljs-number">3</span>       lisi    <span class="hljs-number">25</span><br></code></pre></td></tr></table></figure><h4 id="查询表中数据"><a href="#查询表中数据" class="headerlink" title="查询表中数据"></a>查询表中数据</h4><figure class="highlight axapta"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs axapta"><span class="hljs-keyword">select</span> * <span class="hljs-keyword">from</span> usr1;<br></code></pre></td></tr></table></figure><h3 id="Hive实验：词频统计"><a href="#Hive实验：词频统计" class="headerlink" title="Hive实验：词频统计"></a>Hive实验：词频统计</h3><h4 id="在linux上创建输入目录：-x2F-opt-x2F-input；"><a href="#在linux上创建输入目录：-x2F-opt-x2F-input；" class="headerlink" title="在linux上创建输入目录：&#x2F;opt&#x2F;input；"></a>在linux上创建输入目录：&#x2F;opt&#x2F;input；</h4><figure class="highlight vim"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs vim"><span class="hljs-built_in">mkdir</span> /<span class="hljs-keyword">opt</span>/<span class="hljs-built_in">input</span><br></code></pre></td></tr></table></figure><h4 id="在以上输入目录中添加多个文本文件，其中文件中包含单词：姓名学号，例如：yjx48；"><a href="#在以上输入目录中添加多个文本文件，其中文件中包含单词：姓名学号，例如：yjx48；" class="headerlink" title="在以上输入目录中添加多个文本文件，其中文件中包含单词：姓名学号，例如：yjx48；"></a>在以上输入目录中添加多个文本文件，其中文件中包含单词：姓名学号，例如：yjx48；</h4><figure class="highlight vim"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs vim"><span class="hljs-keyword">echo</span> <span class="hljs-string">&quot;hello1 yjx48&quot;</span> &gt;&gt; /<span class="hljs-keyword">opt</span>/<span class="hljs-built_in">input</span>/text1.txt<br><span class="hljs-keyword">echo</span> <span class="hljs-string">&quot;hello2 yjx48&quot;</span> &gt;&gt; /<span class="hljs-keyword">opt</span>/<span class="hljs-built_in">input</span>/text2.txt<br><span class="hljs-keyword">echo</span> <span class="hljs-string">&quot;hello3 yjx48&quot;</span> &gt;&gt; /<span class="hljs-keyword">opt</span>/<span class="hljs-built_in">input</span>/text3.txt<br></code></pre></td></tr></table></figure><h4 id="在Hive中创建表“docs”，并把输入目录的文件数据加载到该表中；"><a href="#在Hive中创建表“docs”，并把输入目录的文件数据加载到该表中；" class="headerlink" title="在Hive中创建表“docs”，并把输入目录的文件数据加载到该表中；"></a>在Hive中创建表“docs”，并把输入目录的文件数据加载到该表中；</h4><figure class="highlight pgsql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs pgsql">use hive;<br><span class="hljs-keyword">create</span> <span class="hljs-keyword">table</span> docs(<span class="hljs-type">line</span> string);<br><span class="hljs-keyword">load</span> data <span class="hljs-keyword">local</span> inpath <span class="hljs-string">&#x27;/opt/input&#x27;</span> overwrite <span class="hljs-keyword">into</span> <span class="hljs-keyword">table</span> docs;<br><span class="hljs-keyword">select</span> * <span class="hljs-keyword">from</span> docs;<br></code></pre></td></tr></table></figure><h4 id="编写HiveQL语句对输入目录的文本进行词频统计，统计单词“姓名学号”出现的次数。"><a href="#编写HiveQL语句对输入目录的文本进行词频统计，统计单词“姓名学号”出现的次数。" class="headerlink" title="编写HiveQL语句对输入目录的文本进行词频统计，统计单词“姓名学号”出现的次数。"></a>编写HiveQL语句对输入目录的文本进行词频统计，统计单词“姓名学号”出现的次数。</h4><figure class="highlight n1ql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><code class="hljs n1ql"><span class="hljs-keyword">create</span> table word_count <span class="hljs-keyword">as</span><br><span class="hljs-keyword">select</span> word,<span class="hljs-built_in">count</span>(<span class="hljs-number">1</span>) <span class="hljs-keyword">as</span> <span class="hljs-built_in">count</span> <span class="hljs-keyword">from</span><br>(<span class="hljs-keyword">select</span> explode(<span class="hljs-built_in">split</span>(line,<span class="hljs-string">&#x27; &#x27;</span>)) <span class="hljs-keyword">as</span> word <span class="hljs-keyword">from</span> docs) w<br><span class="hljs-keyword">group</span> <span class="hljs-keyword">by</span> word<br><span class="hljs-keyword">order</span> <span class="hljs-keyword">by</span> word;<br><br><span class="hljs-keyword">select</span> * <span class="hljs-keyword">from</span> word_count;<br>describe word_count;<br></code></pre></td></tr></table></figure><p><img src="https://article.biliimg.com/bfs/article/aa2e931a60d1fc3fd918bfc711c17eb1697559838.png" alt="image-20230413214018276"></p><div class="tbsm" style="margin-top:54px;"><div class="tbsm-top"><span><svg t="1674654360507" class="icon" viewBox="0 0 1024 1024" version="1.1" xmlns="http://www.w3.org/2000/svg" p-id="987" data-spm-anchor-id="a313x.7781069.0.i0" width="35" height="35"><path d="M410.49 97.74H155.08a56.74 56.74 0 0 0-56.84 56.73V410a56.84 56.84 0 0 0 56.84 56.84h255.41A56.83 56.83 0 0 0 467.32 410V154.58a56.83 56.83 0 0 0-56.83-56.84zM410.49 558.74H155.08a56.74 56.74 0 0 0-56.84 56.73V871a56.84 56.84 0 0 0 56.84 56.84h255.41A56.83 56.83 0 0 0 467.32 871V615.58a56.83 56.83 0 0 0-56.83-56.84zM871.49 558.74H616.08a56.74 56.74 0 0 0-56.84 56.73V871a56.84 56.84 0 0 0 56.84 56.84h255.41A56.83 56.83 0 0 0 928.32 871V615.58a56.83 56.83 0 0 0-56.83-56.84z" fill="#66EEFF" p-id="988"></path><path d="M410.49 558.74h-4.14A475 475 0 0 0 299.52 859.6a481.16 481.16 0 0 0 4.84 68.22h106.13A56.83 56.83 0 0 0 467.32 871V615.58a56.83 56.83 0 0 0-56.83-56.84zM871.49 558.74H616.08a56.74 56.74 0 0 0-56.84 56.73V871a56.84 56.84 0 0 0 56.84 56.84h255.41A56.83 56.83 0 0 0 928.32 871V615.58a56.83 56.83 0 0 0-56.83-56.84z" fill="#C2F8FF" p-id="989"></path></svg></span><span style="font-size:30px;"> 特别声明</span></div><div class="tbsm-wz">千屹博客旗下的所有文章，是通过本人课堂学习和课外自学所精心整理的知识巨著<br/>难免会有出错的地方<br/>如果细心的你发现了小失误，可以在下方评论区告诉我，或者私信我！<br />非常感谢大家的热烈支持！</div></div>]]></content>
    
    
    
    <tags>
      
      <tag>Hadoop</tag>
      
      <tag>Zookeeper</tag>
      
      <tag>HBase</tag>
      
      <tag>NoSQL</tag>
      
      <tag>MongoDB</tag>
      
      <tag>Hive</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>OpenStack-Train双节点部署</title>
    <link href="/2023/04/02/OpenStack-Train%E5%8F%8C%E8%8A%82%E7%82%B9%E9%83%A8%E7%BD%B2/"/>
    <url>/2023/04/02/OpenStack-Train%E5%8F%8C%E8%8A%82%E7%82%B9%E9%83%A8%E7%BD%B2/</url>
    
    <content type="html"><![CDATA[<div class="hbe hbe-container" id="hexo-blog-encrypt" data-wpm="抱歉, 这个密码看着不太对, 请再试试." data-whm="抱歉, 这个文章不能被校验, 不过您还是能看看解密后的内容.">  <script id="hbeData" type="hbeData" data-hmacdigest="08fe25457e44b784f367d62afd96fec248375819838bea51b2ea7a3f817eb12c"></script>  <div class="hbe hbe-content">    <div class="hbe hbe-input hbe-input-default">      <input class="hbe hbe-input-field hbe-input-field-default" type="password" id="hbePass">      <label class="hbe hbe-input-label hbe-input-label-default" for="hbePass">        <span class="hbe hbe-input-label-content hbe-input-label-content-default">购买密钥看文章底部评论</span>      </label>    </div>  </div></div><script data-pjax src="/lib/hbe.js"></script><link href="/css/hbe.style.css" rel="stylesheet" type="text/css">]]></content>
    
    
    
    <tags>
      
      <tag>Centos 7</tag>
      
      <tag>OpenStack</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>Docker笔记</title>
    <link href="/2023/03/26/Docker%20node/"/>
    <url>/2023/03/26/Docker%20node/</url>
    
    <content type="html"><![CDATA[<meta name="referrer" content="no-referrer"/><h1 id="Docker笔记"><a href="#Docker笔记" class="headerlink" title="Docker笔记"></a>Docker笔记</h1><p>结合<a href="https://blog.qianyios.top/2023/01/17/docker/">Centos 8 使用Docker实现容器 - 严千屹 (qianyios.top)</a>搭建的Docker实现本次笔记的所有内容及例子</p><p>也可以使用以下Centos7部署Docker CE 19.03实现本实验的所有例子</p><h2 id="Centos7部署Docker-CE-19-03"><a href="#Centos7部署Docker-CE-19-03" class="headerlink" title="Centos7部署Docker CE 19.03"></a>Centos7部署Docker CE 19.03</h2><p>（2023年4月8日01点00分）当前最常用的 Docker 版本是 Docker CE 19.03。这是 Docker 社区版（Community Edition）的最新版本，它包括一些更新和新功能，如多阶段构建、Dockerfile 中的 ARG 和 FROM 指令以及与 Kubernetes 的更好集成等。另外，Docker CE 19.03 支持 Windows、MacOS 和 Linux 操作系统。</p><h3 id="卸载旧版本"><a href="#卸载旧版本" class="headerlink" title="卸载旧版本"></a>卸载旧版本</h3><figure class="highlight livescript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><code class="hljs livescript">sudo yum -y remove docker <span class="hljs-string">\</span><br>                  docker-client <span class="hljs-string">\</span><br>                  docker-client-latest <span class="hljs-string">\</span><br>                  docker-common <span class="hljs-string">\</span><br>                  docker-latest <span class="hljs-string">\</span><br>                  docker-latest-logrotate <span class="hljs-string">\</span><br>                  docker-logrotate <span class="hljs-string">\</span><br>                  docker-selinux <span class="hljs-string">\</span><br>                  docker-engine-selinux <span class="hljs-string">\</span><br>                  docker-engine<br>sudo yum remove docker-ce docker-ce-cli containerd.io docker-compose docker-machine docker-swarm<br>sudo rm /etc/yum.repos.d/docker-ce.repo<br>sudo rm -rf /<span class="hljs-keyword">var</span>/lib/docker<br></code></pre></td></tr></table></figure><h3 id="安装docker"><a href="#安装docker" class="headerlink" title="安装docker"></a>安装docker</h3><figure class="highlight awk"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><code class="hljs awk">sudo yum install -y yum-utils device-mapper-persistent-data lvm2<br>sudo yum-config-manager --add-repo https:<span class="hljs-regexp">//</span>download.docker.com<span class="hljs-regexp">/linux/</span>centos/docker-ce.repo<br>sudo yum install docker-ce docker-ce-cli containerd.io -y<br>sudo systemctl start docker<br>docker version<br>sudo curl -L <span class="hljs-string">&quot;https://github.com/docker/compose/releases/download/1.28.6/docker-compose-$(uname -s)-$(uname -m)&quot;</span> -o <span class="hljs-regexp">/usr/</span>local<span class="hljs-regexp">/bin/</span>docker-compose<br>sudo chmod +x <span class="hljs-regexp">/usr/</span>local<span class="hljs-regexp">/bin/</span>docker-compose<br>docker-compose --version<br></code></pre></td></tr></table></figure><h2 id="Docker的常用命令"><a href="#Docker的常用命令" class="headerlink" title="Docker的常用命令"></a>Docker的常用命令</h2><figure class="highlight jboss-cli"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs jboss-cli">docker <span class="hljs-keyword">version</span>   <span class="hljs-comment"># 显示docker的版本信息</span><br>docker info   <span class="hljs-comment"># 显示docker的系统信息,包括镜像和容器的数量</span><br>docker 命令 <span class="hljs-params">--help</span>    <span class="hljs-comment"># 帮助命令</span><br></code></pre></td></tr></table></figure><h2 id="镜像命令"><a href="#镜像命令" class="headerlink" title="镜像命令"></a>镜像命令</h2><h3 id="镜像命令-1"><a href="#镜像命令-1" class="headerlink" title="镜像命令"></a>镜像命令</h3><figure class="highlight crmsh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><code class="hljs crmsh">docker images<span class="hljs-comment"># 查看所有本地的主机上的镜像</span><br>-a,--al1<span class="hljs-comment"># 列出所有镜像</span><br>-q,--quiet<span class="hljs-comment"># 只显示镜像的id</span><br><span class="hljs-comment"># 解释</span><br>REPOSITORY        <span class="hljs-keyword">TAG</span>         <span class="hljs-title">IMAGE</span> ID        CREATED          SIZE<br>镜像的仓库源      镜像的标签  镜像的id        镜像的创建时间   镜像的大小<br></code></pre></td></tr></table></figure><h3 id="搜索命令"><a href="#搜索命令" class="headerlink" title="搜索命令"></a>搜索命令</h3><figure class="highlight autoit"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs autoit">[root<span class="hljs-symbol">@docker</span> ~]<span class="hljs-meta"># docker search centos</span><br>NAME    DESCRIPTION    STARS                               OFFICIAL  AUTOMATED<br>centos  DEPRECATED<span class="hljs-comment">;    The official build of CentOS.       7537      [OK]</span><br>检索Docker仓库中的Ubuntu镜像<br></code></pre></td></tr></table></figure><h3 id="拉取镜像"><a href="#拉取镜像" class="headerlink" title="拉取镜像"></a>拉取镜像</h3><figure class="highlight coffeescript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><code class="hljs coffeescript">[root@docker ~]<span class="hljs-comment"># docke pull 镜像名[:tag]#下载镜像</span><br><span class="hljs-comment"># 如果不写tag，默认就是latest</span><br><br>[root@docker ~]<span class="hljs-comment"># docker pull centos</span><br>Using <span class="hljs-keyword">default</span> tag: latest<br>latest: Pulling <span class="hljs-keyword">from</span> library/centos<br>a1d0c7532777: Pull complete<br>Digest: sha256:a27fd8080b517143cbbbab9dfb7c8571c40d67d534bbdee55bd6c473f432b177<br>Status: Downloaded newer image <span class="hljs-keyword">for</span> centos:latest<br>docker.io/library/centos:latest<br>从docker库拉去centos镜像<br>[root@docker ~]<span class="hljs-comment"># docker images</span><br>REPOSITORY   TAG       IMAGE ID       CREATED         SIZE<br>centos       latest    <span class="hljs-number">5</span>d0da3dc9764   <span class="hljs-number">18</span> months ago   <span class="hljs-number">231</span>MB<br><br></code></pre></td></tr></table></figure><h3 id="删除镜像"><a href="#删除镜像" class="headerlink" title="删除镜像"></a>删除镜像</h3><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><code class="hljs powershell">docker rmi <span class="hljs-operator">-f</span> 镜像名/id<span class="hljs-comment"># 删除指定镜像</span><br>docker rmi <span class="hljs-operator">-f</span> 镜像名<span class="hljs-number">1</span> 镜像名<span class="hljs-number">2</span> 镜像名<span class="hljs-number">3</span> <span class="hljs-comment"># 一次删除指定多个镜像</span><br>docker rmi <span class="hljs-operator">-f</span> <span class="hljs-variable">$</span>(docker images <span class="hljs-literal">-aq</span>)<span class="hljs-comment"># 删除全部容器</span><br><br>[<span class="hljs-type">root</span>@<span class="hljs-type">docker</span> ~]<span class="hljs-comment"># docker images</span><br>REPOSITORY   TAG       IMAGE ID       CREATED         SIZE<br>centos       latest    <span class="hljs-number">5</span>d0da3dc9764   <span class="hljs-number">18</span> months ago   <span class="hljs-number">231</span>MB<br>[<span class="hljs-type">root</span>@<span class="hljs-type">docker</span> ~]<span class="hljs-comment"># docker rmi 5d0</span><br>Untagged: centos:latest<br>。。。。。。<br>（一般情况下 删除镜像id 只需要输入前面<span class="hljs-number">3</span>个字符就行了）<br></code></pre></td></tr></table></figure><h3 id="查看镜像分层"><a href="#查看镜像分层" class="headerlink" title="查看镜像分层"></a>查看镜像分层</h3><figure class="highlight coffeescript"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs coffeescript">[root@docker ~]<span class="hljs-comment"># docker image inspect 镜像id</span><br></code></pre></td></tr></table></figure><h3 id="镜像资源包"><a href="#镜像资源包" class="headerlink" title="镜像资源包"></a>镜像资源包</h3><figure class="highlight awk"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs awk">curl -O http:<span class="hljs-regexp">//mi</span>rrors.douxuedu.com<span class="hljs-regexp">/cloud/</span>docker.zip<br>unzip docker.zip<br>docker load &lt; 镜像名.tar<br>例如：<br>[root@localhost ~]<span class="hljs-comment"># docker load &lt; docker/centos_latest.tar</span><br></code></pre></td></tr></table></figure><h2 id="容器命令"><a href="#容器命令" class="headerlink" title="容器命令"></a>容器命令</h2><h3 id="新建容器并启动"><a href="#新建容器并启动" class="headerlink" title="新建容器并启动"></a>新建容器并启动</h3><figure class="highlight awk"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><code class="hljs awk">docker run [可选参数] 镜像名<span class="hljs-comment"># 新建容器并启动</span><br>--name=Name<span class="hljs-comment"># 容器名字用来区分容器</span><br>-d<span class="hljs-comment"># 后台方式运行</span><br>-it<span class="hljs-comment"># 使用交互方式运行，进入容器查看内容</span><br>-p<span class="hljs-comment"># 指定容器的端口-p 8080:8080</span><br>-P<span class="hljs-comment"># 随机指定端口</span><br>进入容器<br>[root@docker ~]<span class="hljs-comment"># docker run -it --name test centos</span><br>[root@<span class="hljs-number">4018</span>f9ac2f33 /]<span class="hljs-comment"># pwd</span><br>/<br><span class="hljs-keyword">exit</span>         <span class="hljs-comment"># 退出</span><br>Ctrl+P+Q     <span class="hljs-comment"># 容器不停止退出</span><br></code></pre></td></tr></table></figure><h3 id="查看容器列表"><a href="#查看容器列表" class="headerlink" title="查看容器列表"></a>查看容器列表</h3><figure class="highlight cmake"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><code class="hljs cmake">查看容器列表   （若加 -a可以查看所有容器包括为运行的）<br>[root@docker ~]<span class="hljs-comment"># docker ps [可选参数]</span><br>CONTAINER ID   IMAGE     <span class="hljs-keyword">COMMAND</span>       CREATED              STATUS              PORTS     NAMES<br><span class="hljs-number">4018</span>f9ac2f33   centos    <span class="hljs-string">&quot;/bin/bash&quot;</span>   About a minute ago   Up About a minute             <span class="hljs-keyword">test</span><br>[可选参数]<br>-a<span class="hljs-comment"># 列出当前正在运行的容器+带出历史运行过的容器</span><br>-n=?<span class="hljs-comment"># 显示最近创建的容器</span><br>-q<span class="hljs-comment"># 只显示容器的编号</span><br></code></pre></td></tr></table></figure><h3 id="删除容器"><a href="#删除容器" class="headerlink" title="删除容器"></a>删除容器</h3><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs powershell">（一般情况下 删除容器id 只需要输入前面<span class="hljs-number">3</span>个字符就行了）<br>docker <span class="hljs-built_in">rm</span> 容器id<span class="hljs-comment"># 删除指定的容器，不能删除正在运行的容器，如果要强制删除 rm -f</span><br>docker <span class="hljs-built_in">rm</span> <span class="hljs-operator">-f</span> <span class="hljs-variable">$</span> (docker <span class="hljs-built_in">ps</span> <span class="hljs-literal">-aq</span>)<span class="hljs-comment"># 强制删除所有的容器</span><br>docker <span class="hljs-built_in">ps</span> <span class="hljs-literal">-a</span> <span class="hljs-literal">-q</span>|xargs docker <span class="hljs-built_in">rm</span><span class="hljs-comment"># 删除所有的容器</span><br></code></pre></td></tr></table></figure><h3 id="启动和停止容器"><a href="#启动和停止容器" class="headerlink" title="启动和停止容器"></a>启动和停止容器</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs bash">docker start 容器<span class="hljs-built_in">id</span><span class="hljs-comment"># 启动容器</span><br>docker restart 容器<span class="hljs-built_in">id</span><span class="hljs-comment"># 重启容器</span><br>docker stop 容器<span class="hljs-built_in">id</span><span class="hljs-comment"># 停止当前正在运行的容器</span><br>docker <span class="hljs-built_in">kill</span> 容器<span class="hljs-built_in">id</span><span class="hljs-comment"># 强制停止当前容器</span><br></code></pre></td></tr></table></figure><h3 id="进入正在运行的容器"><a href="#进入正在运行的容器" class="headerlink" title="进入正在运行的容器"></a>进入正在运行的容器</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs bash">进入容器后开启一个新的终端，可以在里面操作<br>docker <span class="hljs-built_in">exec</span> -it 容器<span class="hljs-built_in">id</span> /bin/bash<br>进入容器正在执行的终端，不会启动新的进程<br>docker attach 容器<span class="hljs-built_in">id</span><br></code></pre></td></tr></table></figure><h3 id="拷贝容器内的文件到主机上"><a href="#拷贝容器内的文件到主机上" class="headerlink" title="拷贝容器内的文件到主机上"></a>拷贝容器内的文件到主机上</h3><figure class="highlight autoit"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><code class="hljs autoit">docker cp 容器id:容器内路径 目的主机路径<br><br>[root<span class="hljs-symbol">@docker</span> ~]<span class="hljs-meta"># docker exec -it 401 /bin/bash</span><br>[root<span class="hljs-symbol">@4018f9ac2f33</span> /]<span class="hljs-meta"># echo <span class="hljs-string">&quot;11&quot;</span> &gt; test.txt</span><br>[root<span class="hljs-symbol">@4018f9ac2f33</span> /]<span class="hljs-meta"># cat test.txt</span><br><span class="hljs-number">11</span><br>Ctrl+P+Q     <span class="hljs-meta"># 容器不停止退出</span><br>[root<span class="hljs-symbol">@docker</span> ~]<span class="hljs-meta"># docker cp 401:test.txt /root/</span><br>Preparing <span class="hljs-keyword">to</span> copy...<br>Successfully copied <span class="hljs-number">2.048</span>kB <span class="hljs-keyword">to</span> /root/<br>[root<span class="hljs-symbol">@docker</span> ~]<span class="hljs-meta"># cat test.txt</span><br><span class="hljs-number">11</span><br><br></code></pre></td></tr></table></figure><h3 id="停止容器，将容器打包成新镜像"><a href="#停止容器，将容器打包成新镜像" class="headerlink" title="停止容器，将容器打包成新镜像"></a>停止容器，将容器打包成新镜像</h3><figure class="highlight ldif"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><code class="hljs ldif">[root@docker ~]<span class="hljs-comment"># docker commit [可选参数] 容器id REPOSITORY:TAG</span><br>[可选参数]：<br><span class="hljs-literal">-</span>a :提交的镜像作者；<br><span class="hljs-literal">-</span>c :使用Dockerfile指令来创建镜像；<br><span class="hljs-literal">-</span>m :提交时的说明文字；<br><span class="hljs-literal">-</span>p :在commit时，将容器暂停。<br><br><br>[root@localhost ~]<span class="hljs-comment"># docker commit -a qianyios -m &quot;创建了test.txt&quot; 401 test/centos:v1</span><br><span class="hljs-attribute">sha256</span>:29ffb8423a78853c5a49918c99e8d513239f9c3365cca06e1fc0027f589b7f59<br>[root@localhost ~]<span class="hljs-comment"># docker images</span><br>REPOSITORY    TAG       IMAGE ID       CREATED         SIZE<br>test/centos   v1        29ffb8423a78   3 seconds ago   233MB<br>centos        latest    5d0da3dc9764   18 months ago   231MB<br><br></code></pre></td></tr></table></figure><h2 id="Docker数据卷"><a href="#Docker数据卷" class="headerlink" title="Docker数据卷"></a>Docker数据卷</h2><ul><li>数据卷用途：使容器内部的文件跟容器外面的文件同步</li><li>数据卷的特点:<ol><li>数据卷可在容器之间共享或重用数据</li><li>卷中的更改可以直接生效</li><li>数据卷中的更改不会包含在镜像的更新中</li><li>数据卷的生命周期一直持续到没有容器使用它为止</li></ol></li></ul><h3 id="数据卷基本命令"><a href="#数据卷基本命令" class="headerlink" title="数据卷基本命令"></a>数据卷基本命令</h3><figure class="highlight dockerfile"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs dockerfile">docker <span class="hljs-keyword">volume</span><span class="language-bash"> <span class="hljs-built_in">ls</span><span class="hljs-comment"># 查看所有挂载的数据卷</span></span><br>docker <span class="hljs-keyword">volume</span><span class="language-bash"> inspect 卷名<span class="hljs-comment"># 查看数据卷所在的路径</span></span><br></code></pre></td></tr></table></figure><h3 id="指定路径挂载"><a href="#指定路径挂载" class="headerlink" title="指定路径挂载"></a>指定路径挂载</h3><figure class="highlight routeros"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs routeros">docker <span class="hljs-built_in">run</span> -v 主机目录:容器内目录<br></code></pre></td></tr></table></figure><h3 id="卷名挂载"><a href="#卷名挂载" class="headerlink" title="卷名挂载"></a>卷名挂载</h3><figure class="highlight routeros"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs routeros">docker <span class="hljs-built_in">run</span> -v 卷名(不是目录了):容器内 目录<br></code></pre></td></tr></table></figure><h3 id="匿名挂载"><a href="#匿名挂载" class="headerlink" title="匿名挂载"></a>匿名挂载</h3><figure class="highlight routeros"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs routeros">docker <span class="hljs-built_in">run</span> -v 容器内目录<br></code></pre></td></tr></table></figure><h3 id="数据卷权限"><a href="#数据卷权限" class="headerlink" title="数据卷权限"></a>数据卷权限</h3><figure class="highlight applescript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs applescript">docker <span class="hljs-built_in">run</span> -v 主机目录:容器内目录:ro<span class="hljs-comment"># ro readonly 只读</span><br>docker <span class="hljs-built_in">run</span> -v 主机目录:容器内目录:rw<span class="hljs-comment"># rw readwrite 可读可写</span><br><span class="hljs-comment"># ro只能在主机上面来操作目录，容器无法操作</span><br></code></pre></td></tr></table></figure><h3 id="数据卷容器"><a href="#数据卷容器" class="headerlink" title="数据卷容器"></a>数据卷容器</h3><figure class="highlight axapta"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs axapta">--volumes-<span class="hljs-keyword">from</span> 要同步文件的容器<span class="hljs-meta"># 实现多个容器的数据同步与共享</span><br></code></pre></td></tr></table></figure><ul><li>例子：三个MySQL同步数据</li></ul><p>1、数据库1使用的命令</p><figure class="highlight awk"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs awk">docker run -d -p 主机端口:<span class="hljs-number">3306</span> /<br>-v <span class="hljs-regexp">/etc/my</span>sql<span class="hljs-regexp">/conf.d -v /</span>var<span class="hljs-regexp">/1ib/my</span>sql /<br>-e MYSQL_ROOT_PASSWORD=数据库密码 --name mysql01 mysql<br></code></pre></td></tr></table></figure><p>2、数据库2使用的命令</p><figure class="highlight routeros"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs routeros">docker <span class="hljs-built_in">run</span> -d -p 主机端口:3306 /<br>--volumes-from mysql01 /<br>-e <span class="hljs-attribute">MYSQL_ROOT_PASSWORD</span>=数据库密码 --name mysql02 mysql<br>Copy<br></code></pre></td></tr></table></figure><p>3、数据库3使用的命令</p><figure class="highlight routeros"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs routeros">docker <span class="hljs-built_in">run</span> -d -p 主机端口:3306 /<br>--volumes-from mysql01 /<br>-e <span class="hljs-attribute">MYSQL_ROOT_PASSWORD</span>=数据库密码 --name mysql03 mysql<br></code></pre></td></tr></table></figure><h2 id="DockerFile"><a href="#DockerFile" class="headerlink" title="DockerFile"></a>DockerFile</h2><p>DockerFile是用来构建Docker镜像的构建文件。</p><h3 id="注意事项"><a href="#注意事项" class="headerlink" title="!注意事项"></a><span style="color:red">!</span>注意事项</h3><ul><li>1、每个保留关键字（指令）都是必须是大写字母</li><li>2、执行从上到下顺序执行</li><li>3、#表示注释</li><li>4、每一个指令都会创建提交一个新的镜像层，并提交</li></ul><img src="https://article.biliimg.com/bfs/article/549feec048e2aba754444afde28c977e697559838.png" alt="image-20230325152651663" style="zoom: 50%;" /><h3 id="DockerFile命令"><a href="#DockerFile命令" class="headerlink" title="DockerFile命令"></a>DockerFile命令</h3><figure class="highlight dockerfile"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><code class="hljs dockerfile"><span class="hljs-keyword">FROM</span>          <span class="hljs-comment"># 基础镜镜像,—切从这里开始构建</span><br><span class="hljs-keyword">MAINTAINER</span>    <span class="hljs-comment"># 镜像的作者,姓名&lt;邮箱&gt;</span><br><span class="hljs-keyword">RUN</span><span class="language-bash">           <span class="hljs-comment"># 镜像构建的时候需要运行的命令</span></span><br><span class="hljs-keyword">ADD</span><span class="language-bash">           <span class="hljs-comment"># 添加内容，添加压缩包会自动解压</span></span><br><span class="hljs-keyword">WORKDIR</span><span class="language-bash"> <span class="hljs-comment"># 镜像的工作目录</span></span><br><span class="hljs-keyword">VOLUME</span><span class="language-bash">        <span class="hljs-comment"># 挂载的目录</span></span><br><span class="hljs-keyword">EXPOSE</span>        <span class="hljs-comment"># 保留端口配置</span><br><span class="hljs-keyword">CMD</span><span class="language-bash"><span class="hljs-comment"># 指定这个容器启动的时候要运行的命令,只有最后一个会生效，可被替代</span></span><br><span class="hljs-keyword">ENTRYPOINT</span><span class="language-bash">    <span class="hljs-comment"># 指定这个容器启动的时候要运行的命令,可以追加命令</span></span><br><span class="hljs-keyword">ONBUILD</span> <span class="hljs-comment"># 当构建一个被继承DockerFile这个时候就会运行ONBUILD 的指令。触发指令。</span><br><span class="hljs-keyword">COPY</span><span class="language-bash">          <span class="hljs-comment"># 类似ADD ，将我们文件拷贝到镜像中</span></span><br><span class="hljs-keyword">ENV</span>           <span class="hljs-comment"># 构建的时候设置环境变量!</span><br></code></pre></td></tr></table></figure><h3 id="用DockerFile文件创建镜像"><a href="#用DockerFile文件创建镜像" class="headerlink" title="用DockerFile文件创建镜像"></a>用DockerFile文件创建镜像</h3><figure class="highlight mipsasm"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs mipsasm">docker <span class="hljs-keyword">build </span>-f DockerFile文件名 -t 镜像名:版本号 .<br><span class="hljs-comment"># -f指定Dockfile文件，若Dockerfile文件名就是Dockerfile，则不用-f再指定。系统则自动判定此文件是Dockerfile文件。</span><br><span class="hljs-comment"># 最后一个是 . 一定加上</span><br></code></pre></td></tr></table></figure><p>例子：</p><figure class="highlight dockerfile"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><code class="hljs dockerfile">[root@docker ~]<span class="hljs-comment"># mkdir centos</span><br>[root@docker ~]<span class="hljs-comment"># cd centos/</span><br>[root@docker centos]<span class="hljs-comment"># touch DockerFile</span><br>[root@docker centos]<span class="hljs-comment"># vi DockerFile</span><br><span class="hljs-comment">#基础镜像信息</span><br><span class="hljs-keyword">FROM</span> centos:latest<br><span class="hljs-comment">#维护者信息</span><br><span class="hljs-keyword">MAINTAINER</span> qianyios xiaoohu2002@<span class="hljs-number">163</span>.com<br><span class="hljs-comment">#镜像操作指令</span><br><span class="hljs-keyword">RUN</span><span class="language-bash"> sed -i <span class="hljs-string">&#x27;s/mirrorlist/#mirrorlist/g&#x27;</span> /etc/yum.repos.d/CentOS-*</span><br><span class="hljs-keyword">RUN</span><span class="language-bash"> sed -i <span class="hljs-string">&#x27;s|#baseurl=http://mirror.centos.org|baseurl=http://vault.centos.org|g&#x27;</span> /etc/yum.repos.d/CentOS-*</span><br><span class="hljs-keyword">RUN</span><span class="language-bash"> yum install -y wget</span><br><span class="hljs-keyword">RUN</span><span class="language-bash"> wget -O /etc/yum.repos.d/CentOS-Base.repo https://mirrors.aliyun.com/repo/Centos-vault-8.5.2111.repo</span><br><span class="hljs-keyword">RUN</span><span class="language-bash"> yum clean all &amp;&amp; yum makecache</span><br><span class="hljs-keyword">RUN</span><span class="language-bash"> <span class="hljs-built_in">mkdir</span> /test </span><br><span class="hljs-keyword">RUN</span><span class="language-bash"> <span class="hljs-built_in">echo</span> <span class="hljs-string">&#x27;test&#x27;</span> &gt; /test/test.txt</span><br><br>[root@docker centos]<span class="hljs-comment"># docker build -f /root/centos/DockerFile -t centos-test:v1 .</span><br>[root@docker centos]<span class="hljs-comment"># docker images</span><br>REPOSITORY    TAG       IMAGE ID       CREATED         SIZE<br>centos-test   v1        b1f4c91e59ee   <span class="hljs-number">2</span> minutes ago   <span class="hljs-number">328</span>MB<br><span class="hljs-comment">#此时已经有一个镜像了</span><br></code></pre></td></tr></table></figure><p>用这个镜像创建容器，且将容器中的&#x2F;test挂载到主机目录下的&#x2F;opt&#x2F;test</p><p>b1f是镜像id前三个字符</p><figure class="highlight awk"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><code class="hljs awk">docker run -it -v <span class="hljs-regexp">/opt/</span>test:<span class="hljs-regexp">/test --name test -p 80:80 b1f /</span>bin/bash<br><span class="hljs-keyword">exit</span><br>退出<span class="hljs-keyword">exit</span>之后查看<span class="hljs-regexp">/opt/</span>test是否有test.txt文件<br>[root@docker ~]<span class="hljs-comment"># cat /opt/test/test.txt</span><br>test<br>成功！！！<br></code></pre></td></tr></table></figure><h2 id="配置镜像加速器"><a href="#配置镜像加速器" class="headerlink" title="配置镜像加速器"></a>配置镜像加速器</h2><figure class="highlight nsis"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><code class="hljs nsis"><span class="hljs-comment"># 设置 Docker 镜像加速器</span><br>cat &gt; /etc/docker/daemon.json &lt;&lt; EOF<br>&#123;<br>  <span class="hljs-string">&quot;registry-mirrors&quot;</span>: [<br>    <span class="hljs-string">&quot;http://hub-mirror.c.163.com&quot;</span>,<br>    <span class="hljs-string">&quot;https://docker.mirrors.ustc.edu.cn/&quot;</span><br>  ],<br>  <span class="hljs-string">&quot;insecure-registries&quot;</span>: [],<br>  <span class="hljs-string">&quot;debug&quot;</span>: <span class="hljs-literal">false</span>,<br>  <span class="hljs-string">&quot;experimental&quot;</span>: <span class="hljs-literal">false</span>,<br>  <span class="hljs-string">&quot;features&quot;</span>: &#123;<br>    <span class="hljs-string">&quot;buildkit&quot;</span>: <span class="hljs-literal">true</span><br>  &#125;<br>&#125;<br>EOF<br><br>sudo <span class="hljs-params">system</span>ctl daemon-reload<br>sudo <span class="hljs-params">system</span>ctl restart docker<br></code></pre></td></tr></table></figure><h2 id="Docker-网络"><a href="#Docker-网络" class="headerlink" title="Docker 网络"></a>Docker 网络</h2><p>docker网络主要是解决容器联网问题，也是我们使用容器中最重要的一个环节，如果容器没有网络则无法向网络中提供服务。</p><h3 id="网络管理命令：docker-network"><a href="#网络管理命令：docker-network" class="headerlink" title="网络管理命令：docker network"></a>网络管理命令：docker network</h3><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><code class="hljs sql">[root<span class="hljs-variable">@docker</span> <span class="hljs-operator">~</span>]# docker network <span class="hljs-comment">--help</span><br>Usage:docker network COMMAND<br>Manage networks<br>Commands:<br>  <span class="hljs-keyword">connect</span>        连接容器到网络<br>  <span class="hljs-keyword">create</span>          创建网络<br>  <span class="hljs-keyword">disconnect</span>    断开容器与网络的连接<br>  inspect         显示一个或多个网络的详细信息<br>  ls                 列表网络<br>  prune           删除所有未使用的网络<br>  rm               删除一个或多个网络<br></code></pre></td></tr></table></figure><h3 id="docker网络类型"><a href="#docker网络类型" class="headerlink" title="docker网络类型"></a>docker网络类型</h3><p>创建容器的时候可以通过—network命令来指定容器的网络，网络类型有以下四种</p><ul><li>bridge</li><li>host</li><li>none</li><li>容器网络或联盟网络</li></ul><h4 id="bridge"><a href="#bridge" class="headerlink" title="bridge"></a>bridge</h4><p>桥接网络是指容器通过桥接的方式将<strong>容器网卡</strong>桥接到<strong>宿主机的docker0网桥</strong>，然后在通过宿主机防火墙的NAT表实现与外网的联系。</p><h4 id="宿主机docker0网桥"><a href="#宿主机docker0网桥" class="headerlink" title="宿主机docker0网桥"></a>宿主机docker0网桥</h4><figure class="highlight pf"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br></pre></td><td class="code"><pre><code class="hljs pf">[root@docker ~]<span class="hljs-comment"># ifconfig </span><br><span class="hljs-comment">#docker0网桥</span><br>docker0: <span class="hljs-keyword">flags</span>=<span class="hljs-number">4163</span><span class="hljs-variable">&lt;UP,BROADCAST,RUNNING,MULTICAST&gt;</span>  mtu <span class="hljs-number">1500</span><br>        <span class="hljs-keyword">inet</span> <span class="hljs-number">172.17</span>.<span class="hljs-number">0.1</span>  netmask <span class="hljs-number">255.255</span>.<span class="hljs-number">0.0</span>  broadcast <span class="hljs-number">172.17</span>.<span class="hljs-number">255.255</span><br>        <span class="hljs-keyword">inet6</span> fe80::<span class="hljs-number">42</span>:c7ff:fe37:<span class="hljs-number">8</span>e8  prefixlen <span class="hljs-number">64</span>  scopeid <span class="hljs-number">0</span>x20<span class="hljs-variable">&lt;link&gt;</span><br>        ether <span class="hljs-number">02</span>:<span class="hljs-number">42</span>:c7:<span class="hljs-number">37</span>:<span class="hljs-number">08</span>:e8  txqueuelen <span class="hljs-number">0</span>  (Ethernet)<br>        RX packets <span class="hljs-number">6618</span>  bytes <span class="hljs-number">277975</span> (<span class="hljs-number">271.4</span> KiB)<br>        RX errors <span class="hljs-number">0</span>  dropped <span class="hljs-number">0</span>  overruns <span class="hljs-number">0</span>  frame <span class="hljs-number">0</span><br>        TX packets <span class="hljs-number">8152</span>  bytes <span class="hljs-number">24675021</span> (<span class="hljs-number">23.5</span> MiB)<br>        TX errors <span class="hljs-number">0</span>  dropped <span class="hljs-number">0</span> overruns <span class="hljs-number">0</span>  carrier <span class="hljs-number">0</span>  collisions <span class="hljs-number">0</span><br><br>.....省略了本机的网卡信息<br><span class="hljs-comment">#容器网卡，每创建一个桥接网络的容器就会生成一个对应的网卡</span><br>vethf75a942: <span class="hljs-keyword">flags</span>=<span class="hljs-number">4163</span><span class="hljs-variable">&lt;UP,BROADCAST,RUNNING,MULTICAST&gt;</span>  mtu <span class="hljs-number">1500</span><br>        <span class="hljs-keyword">inet6</span> fe80::<span class="hljs-number">9085</span>:f5ff:fe34:<span class="hljs-number">77</span>b5  prefixlen <span class="hljs-number">64</span>  scopeid <span class="hljs-number">0</span>x20<span class="hljs-variable">&lt;link&gt;</span><br>        ether <span class="hljs-number">92</span>:<span class="hljs-number">85</span>:f5:<span class="hljs-number">34</span>:<span class="hljs-number">77</span>:b5  txqueuelen <span class="hljs-number">0</span>  (Ethernet)<br>        RX packets <span class="hljs-number">2850</span>  bytes <span class="hljs-number">158484</span> (<span class="hljs-number">154.7</span> KiB)<br>        RX errors <span class="hljs-number">0</span>  dropped <span class="hljs-number">0</span>  overruns <span class="hljs-number">0</span>  frame <span class="hljs-number">0</span><br>        TX packets <span class="hljs-number">3397</span>  bytes <span class="hljs-number">11613136</span> (<span class="hljs-number">11.0</span> MiB)<br>        TX errors <span class="hljs-number">0</span>  dropped <span class="hljs-number">0</span> overruns <span class="hljs-number">0</span>  carrier <span class="hljs-number">0</span>  collisions <span class="hljs-number">0</span><br>        <br>        <br>        <br>如果想看更清楚一下  可以使用  ip  add  show命令<br>[root@docker ~]<span class="hljs-comment"># ip add show</span><br><br><span class="hljs-number">4</span>: docker0: <span class="hljs-variable">&lt;BROADCAST,MULTICAST,UP,LOWER_UP&gt;</span> mtu <span class="hljs-number">1500</span> qdisc noqueue <span class="hljs-keyword">state</span> UP <span class="hljs-keyword">group</span> <span class="hljs-keyword">default</span> <br>    link/ether <span class="hljs-number">02</span>:<span class="hljs-number">42</span>:c7:<span class="hljs-number">37</span>:<span class="hljs-number">08</span>:e8 brd ff:ff:ff:ff:ff:ff<br>    <span class="hljs-keyword">inet</span> <span class="hljs-number">172.17</span>.<span class="hljs-number">0.1</span>/<span class="hljs-number">16</span> brd <span class="hljs-number">172.17</span>.<span class="hljs-number">255.255</span> scope <span class="hljs-keyword">global</span> docker0<br>       valid_lft forever preferred_lft forever<br>    <span class="hljs-keyword">inet6</span> fe80::<span class="hljs-number">42</span>:c7ff:fe37:<span class="hljs-number">8</span>e8/<span class="hljs-number">64</span> scope link <br>       valid_lft forever preferred_lft forever<br><br>容器网卡<br><span class="hljs-number">14</span>: vethf75a942@if13: <span class="hljs-variable">&lt;BROADCAST,MULTICAST,UP,LOWER_UP&gt;</span> mtu <span class="hljs-number">1500</span> qdisc noqueue master docker0 <span class="hljs-keyword">state</span> UP <span class="hljs-keyword">group</span> <span class="hljs-keyword">default</span> <br>    link/ether <span class="hljs-number">92</span>:<span class="hljs-number">85</span>:f5:<span class="hljs-number">34</span>:<span class="hljs-number">77</span>:b5 brd ff:ff:ff:ff:ff:ff link-netnsid <span class="hljs-number">1</span><br>    <span class="hljs-keyword">inet6</span> fe80::<span class="hljs-number">9085</span>:f5ff:fe34:<span class="hljs-number">77</span>b5/<span class="hljs-number">64</span> scope link <br>       valid_lft forever preferred_lft forever<br><br><br>注意：<br>这里的vethf75a942@if13指的就是容器网卡，V代表虚拟网卡的意思，eth 以太网卡，f75a942网卡编号，if13指的是宿主机网桥(docekr0)的一个端口，对应容器的网卡编号加一。<br>所以容器内的网卡编号应该是 eth0@if14<br><br>通过在容器中执行命令  ip add show 也可以看到<br>[root@docker ~]<span class="hljs-comment"># docker exec a5f ip add show</span><br><span class="hljs-number">1</span>: lo: <span class="hljs-variable">&lt;LOOPBACK,UP,LOWER_UP&gt;</span> mtu <span class="hljs-number">65536</span> qdisc noqueue <span class="hljs-keyword">state</span> UNKNOWN <span class="hljs-keyword">group</span> <span class="hljs-keyword">default</span> qlen <span class="hljs-number">1000</span><br>    link/loopback <span class="hljs-number">00</span>:<span class="hljs-number">00</span>:<span class="hljs-number">00</span>:<span class="hljs-number">00</span>:<span class="hljs-number">00</span>:<span class="hljs-number">00</span> brd <span class="hljs-number">00</span>:<span class="hljs-number">00</span>:<span class="hljs-number">00</span>:<span class="hljs-number">00</span>:<span class="hljs-number">00</span>:<span class="hljs-number">00</span><br>    <span class="hljs-keyword">inet</span> <span class="hljs-number">127.0</span>.<span class="hljs-number">0.1</span>/<span class="hljs-number">8</span> scope host lo<br>       valid_lft forever preferred_lft forever<br><span class="hljs-number">13</span>: eth0@if14: <span class="hljs-variable">&lt;BROADCAST,MULTICAST,UP,LOWER_UP&gt;</span> mtu <span class="hljs-number">1500</span> qdisc noqueue <span class="hljs-keyword">state</span> UP <span class="hljs-keyword">group</span> <span class="hljs-keyword">default</span> <br>    link/ether <span class="hljs-number">02</span>:<span class="hljs-number">42</span>:ac:<span class="hljs-number">11</span>:<span class="hljs-number">00</span>:<span class="hljs-number">03</span> brd ff:ff:ff:ff:ff:ff link-netnsid <span class="hljs-number">0</span><br>    <span class="hljs-keyword">inet</span> <span class="hljs-number">172.17</span>.<span class="hljs-number">0.3</span>/<span class="hljs-number">16</span> brd <span class="hljs-number">172.17</span>.<span class="hljs-number">255.255</span> scope <span class="hljs-keyword">global</span> eth0<br>       valid_lft forever preferred_lft forever<br></code></pre></td></tr></table></figure><h4 id="防火墙的NAT表内容"><a href="#防火墙的NAT表内容" class="headerlink" title="防火墙的NAT表内容"></a>防火墙的NAT表内容</h4><figure class="highlight vim"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><code class="hljs vim">[root@docker ~]# iptables -t nat -L<br>Chain PREROUTING (policy ACCEPT)<br>target     prot <span class="hljs-keyword">opt</span> <span class="hljs-keyword">source</span>               destination         <br>DOCKER     <span class="hljs-keyword">all</span>  --  anywhere             anywhere             ADDRTYPE <span class="hljs-keyword">match</span> dst-<span class="hljs-built_in">type</span> LOCAL<br><br>Chain INPUT (policy ACCEPT)<br>target     prot <span class="hljs-keyword">opt</span> <span class="hljs-keyword">source</span>               destination         <br><br>Chain OUTPUT (policy ACCEPT)<br>target     prot <span class="hljs-keyword">opt</span> <span class="hljs-keyword">source</span>               destination         <br>DOCKER     <span class="hljs-keyword">all</span>  --  anywhere            !loopback/<span class="hljs-number">8</span>           ADDRTYPE <span class="hljs-keyword">match</span> dst-<span class="hljs-built_in">type</span> LOCAL<br><br>Chain POSTROUTING (policy ACCEPT)<br>target     prot <span class="hljs-keyword">opt</span> <span class="hljs-keyword">source</span>               destination         <br>MASQUERADE  <span class="hljs-keyword">all</span>  --  <span class="hljs-number">172.17</span>.<span class="hljs-number">0.0</span>/<span class="hljs-number">16</span>        anywhere            <br><br>Chain DOCKER (<span class="hljs-number">2</span> references)<br>target     prot <span class="hljs-keyword">opt</span> <span class="hljs-keyword">source</span>               destination         <br>RETURN     <span class="hljs-keyword">all</span>  --  anywhere             anywhere        <br></code></pre></td></tr></table></figure><h4 id="docker0-与容器网卡桥接"><a href="#docker0-与容器网卡桥接" class="headerlink" title="docker0 与容器网卡桥接"></a>docker0 与容器网卡桥接</h4><figure class="highlight mipsasm"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs mipsasm">通过<span class="hljs-keyword">brctl </span><span class="hljs-keyword">show命令可以看到容器网卡和docker0网卡的桥接信息</span><br><span class="hljs-keyword"></span>[root@docker ~]<span class="hljs-comment"># brctl show</span><br><span class="hljs-keyword">bridge </span>name<span class="hljs-keyword">bridge </span>idSTP enabledinterfaces<br>docker0<span class="hljs-number">8000</span>.<span class="hljs-number">0242</span>c73708e8novethf75a942<br></code></pre></td></tr></table></figure><p><strong>创建一个网络为bridge类型的容器，不指定默认也是这个类型</strong></p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs css"><span class="hljs-selector-attr">[root@docker ~]</span># docker run -d <span class="hljs-attr">--network</span> bridge <span class="hljs-attr">--name</span> centos1 baishuming2020/centos_nginx<br></code></pre></td></tr></table></figure><h3 id="host"><a href="#host" class="headerlink" title="host"></a>host</h3><p><strong>容器和真机共用网卡及对应的端口，缺点就是同一个端口只能宿主机或者某个容器使用，其他容器不能用。</strong></p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs css">创建一个网络类型host的容器<br><span class="hljs-selector-attr">[root@docker ~]</span># docker run -d <span class="hljs-attr">--network</span> host <span class="hljs-attr">--name</span> centos2 baishuming2020/centos_nginx<br></code></pre></td></tr></table></figure><h3 id="none"><a href="#none" class="headerlink" title="none"></a>none</h3><p><strong>容器仅有lo网卡，是一个不能联网的本地容器</strong></p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs css">创建一个网络类型为lo的容器<br><span class="hljs-selector-attr">[root@docker ~]</span># docker run -d <span class="hljs-attr">--network</span> <span class="hljs-attribute">none</span> <span class="hljs-attr">--name</span> centos3 baishuming2020/centos_nginx<br></code></pre></td></tr></table></figure><h3 id="实现网桥网络"><a href="#实现网桥网络" class="headerlink" title="实现网桥网络"></a>实现网桥网络</h3><p>目的：不同的服务容器组应用不同的网桥，避免同一网络内容器太多，保持容器网络独立性。</p><p>关于新网桥联网问题：创建网桥后，宿主机会自动帮你做NAT，所以不用担心联网问题</p><h4 id="查看网络-ls"><a href="#查看网络-ls" class="headerlink" title="查看网络-ls"></a>查看网络-ls</h4><figure class="highlight sqf"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><code class="hljs sqf">[root@docker ~]<span class="hljs-meta"># docker network ls</span><br>NETWORK ID          <span class="hljs-built_in">NAME</span>                <span class="hljs-built_in">DRIVER</span>              SCOPE<br><span class="hljs-number">80982</span>d2613cd        bridge              bridge              <span class="hljs-built_in">local</span><br><span class="hljs-number">40</span>c179ab420a        docker1             bridge              <span class="hljs-built_in">local</span><br><span class="hljs-number">04</span>aadb7475c0        docker100           bridge              <span class="hljs-built_in">local</span><br>ce79e9d7525a        host                host                <span class="hljs-built_in">local</span><br><span class="hljs-number">8</span>f0358469e57        none                null                <span class="hljs-built_in">local</span><br><br>NETWORK ID     网桥ID   <br><span class="hljs-built_in">NAME</span>           名称<br><span class="hljs-built_in">DRIVER</span>         网络类型  <br>SCOPE      作用范围<br></code></pre></td></tr></table></figure><h4 id="创建网桥-create"><a href="#创建网桥-create" class="headerlink" title="创建网桥-create"></a>创建网桥-create</h4><figure class="highlight golo"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><code class="hljs golo">[root<span class="hljs-meta">@docker</span> ~]<span class="hljs-comment"># docker network create -d bridge --subnet 192.168.148.0/24 --gateway 192.168.148.2 a1</span><br><span class="hljs-number">6</span>a410e27b66ea587142d967f7dff6f36c04ced3c27116a79831412f3743aba56<br><br>[root<span class="hljs-meta">@docker</span> ~]<span class="hljs-comment"># docker network ls</span><br>NETWORK ID          NAME                DRIVER              SCOPE<br><span class="hljs-number">6</span>ee1e928b710        bridge              bridge              <span class="hljs-keyword">local</span><br>ce79e9d7525a        host                host                <span class="hljs-keyword">local</span><br><span class="hljs-number">6</span>a410e27b66e        mydocker0           bridge              <span class="hljs-keyword">local</span><br><span class="hljs-number">8</span>f0358469e57        none                <span class="hljs-literal">null</span>                <span class="hljs-keyword">local</span><br><br><br>修改docker网桥名字<br><span class="hljs-number">1</span>、修改名字<br>[root<span class="hljs-meta">@docker</span> ~]<span class="hljs-comment"># docker network rename old_name new_name</span><br><span class="hljs-number">2</span>、重启docker服务<br>[root<span class="hljs-meta">@docker</span> ~]<span class="hljs-comment"># systemctl restart docker</span><br></code></pre></td></tr></table></figure><h4 id="删除未使用的网桥-prune"><a href="#删除未使用的网桥-prune" class="headerlink" title="删除未使用的网桥-prune"></a>删除未使用的网桥-prune</h4><figure class="highlight applescript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs applescript">[root@docker ~]<span class="hljs-comment"># docker network prune </span><br>WARNING! This will remove all networks <span class="hljs-keyword">not</span> used <span class="hljs-keyword">by</span> <span class="hljs-keyword">at</span> least one container.<br>Are you sure you want <span class="hljs-keyword">to</span> <span class="hljs-keyword">continue</span>? [y/N] y<br>Deleted Networks:<br>docker1<br></code></pre></td></tr></table></figure><h4 id="删除某个网桥-rm"><a href="#删除某个网桥-rm" class="headerlink" title="删除某个网桥-rm"></a>删除某个网桥-rm</h4><figure class="highlight autoit"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs autoit">[root<span class="hljs-symbol">@docker</span> ~]<span class="hljs-meta"># docker network rm docker100</span><br>docker100<br><br>注意：<br>不能被活动容器占用<br></code></pre></td></tr></table></figure><h4 id="容器连接到网桥"><a href="#容器连接到网桥" class="headerlink" title="容器连接到网桥"></a>容器连接到网桥</h4><p>前提是该容器是桥接网络</p><figure class="highlight tap"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><code class="hljs tap">docker network connect 网卡 容器<br>[root@docker ~]<span class="hljs-comment"># docker network connect docker1 centos1</span><br>[root@docker ~]<span class="hljs-comment"># docker exec centos1 ifconfig</span><br>eth0: flags=4163&lt;UP,BROADCAST,RUNNING,MULTICAST&gt;  mtu 1500<br>        inet 172.17.0.2  netmask 255.255.0.0  broadcast 172.17.255.255<br>        ether 02:42:ac:11:00:02  txqueuelen<span class="hljs-number"> 0 </span> (Ethernet)<br>        RX packets<span class="hljs-number"> 8 </span> bytes<span class="hljs-number"> 656 </span>(656.0 B)<br>        RX errors<span class="hljs-number"> 0 </span> dropped<span class="hljs-number"> 0 </span> overruns<span class="hljs-number"> 0 </span> frame 0<br>        TX packets<span class="hljs-number"> 0 </span> bytes<span class="hljs-number"> 0 </span>(0.0 B)<br>        TX errors<span class="hljs-number"> 0 </span> dropped<span class="hljs-number"> 0 </span>overruns<span class="hljs-number"> 0 </span> carrier<span class="hljs-number"> 0 </span> collisions 0<br>发现centos1容器多了一块网卡，使用的正是docker1的网段<br>eth1: flags=4163&lt;UP,BROADCAST,RUNNING,MULTICAST&gt;  mtu 1500<br>        inet 192.168.1.2  netmask 255.255.255.0  broadcast 192.168.1.255<br>        ether 02:42:c0:a8:01:02  txqueuelen<span class="hljs-number"> 0 </span> (Ethernet)<br>        RX packets<span class="hljs-number"> 16 </span> bytes<span class="hljs-number"> 1312 </span>(1.2 KiB)<br>        RX errors<span class="hljs-number"> 0 </span> dropped<span class="hljs-number"> 0 </span> overruns<span class="hljs-number"> 0 </span> frame 0<br>        TX packets<span class="hljs-number"> 0 </span> bytes<span class="hljs-number"> 0 </span>(0.0 B)<br>        TX errors<span class="hljs-number"> 0 </span> dropped<span class="hljs-number"> 0 </span>overruns<span class="hljs-number"> 0 </span> carrier<span class="hljs-number"> 0 </span> collisions 0<br><br>lo: flags=73&lt;UP,LOOPBACK,RUNNING&gt;  mtu 65536<br>        inet 127.0.0.1  netmask 255.0.0.0<br>        loop  txqueuelen<span class="hljs-number"> 1000 </span> (Local Loopback)<br>        RX packets<span class="hljs-number"> 0 </span> bytes<span class="hljs-number"> 0 </span>(0.0 B)<br>        RX errors<span class="hljs-number"> 0 </span> dropped<span class="hljs-number"> 0 </span> overruns<span class="hljs-number"> 0 </span> frame 0<br>        TX packets<span class="hljs-number"> 0 </span> bytes<span class="hljs-number"> 0 </span>(0.0 B)<br>        TX errors<span class="hljs-number"> 0 </span> dropped<span class="hljs-number"> 0 </span>overruns<span class="hljs-number"> 0 </span> carrier<span class="hljs-number"> 0 </span> collisions 0<br></code></pre></td></tr></table></figure><h4 id="容器断开网桥"><a href="#容器断开网桥" class="headerlink" title="容器断开网桥"></a>容器断开网桥</h4><figure class="highlight coffeescript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs coffeescript">将centos1容器的网络从docker1网桥断开<br>[root@docker ~]<span class="hljs-comment"># docker network disconnect docker1 centos1</span><br></code></pre></td></tr></table></figure><h3 id="常见故障"><a href="#常见故障" class="headerlink" title="常见故障"></a>常见故障</h3><h4 id="FAQ1：使用改名后的新网桥的容器可能无法解析域名"><a href="#FAQ1：使用改名后的新网桥的容器可能无法解析域名" class="headerlink" title="FAQ1：使用改名后的新网桥的容器可能无法解析域名"></a>FAQ1：使用改名后的新网桥的容器可能无法解析域名</h4><p>原因：没有配置新网桥的DNS</p><p>解决方法：为容器手动配置一个DNS地址即可</p><h4 id="FAQ2：Networking-will-not-work"><a href="#FAQ2：Networking-will-not-work" class="headerlink" title="FAQ2：Networking will not work"></a>FAQ2：Networking will not work</h4><figure class="highlight asciidoc"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><code class="hljs asciidoc">[root@docker ~]# docker run -d --network docker100 --name centos4 baishuming2020/centos_nginx<br><span class="hljs-symbol">WARNING: </span>IPv4 forwarding is disabled. Networking will not work.<br>67f2c276123c993cd66b9d7a99ba22402331a13f9ea8817e57324a934896b805<br><br>解决方案<br>1、打开转发<br>[root@docker ~]# echo &quot;net.ipv4.ip_forward=1&quot; &gt;&gt;  /usr/lib/sysctl.d/00-system.conf<br><br>2、重启网络<br>[root@docker ~]# systemctl restart network<br></code></pre></td></tr></table></figure><h3 id="不同主机间的容器通信"><a href="#不同主机间的容器通信" class="headerlink" title="不同主机间的容器通信"></a>不同主机间的容器通信</h3><h4 id="macvlan"><a href="#macvlan" class="headerlink" title="macvlan"></a>macvlan</h4><p>在 Docker 中，macvlan 是众多 Docker 网络模型中的一种，并且是一种跨主机的网络模型，作为一种驱动启用，Docker macvlan 只支持 bridge 模式</p><figure class="highlight routeros"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><code class="hljs routeros"><span class="hljs-comment">#macvlan 需要一块独立的网卡来进行使用，所以我们需要新添加一块网卡</span><br><br>docker<span class="hljs-built_in"> network </span>create -d macvlan <span class="hljs-attribute">--subnet</span>=172.16.10.0/24 <span class="hljs-attribute">--gateway</span>=172.16.10.1  -o <span class="hljs-attribute">parent</span>=ens224  mtacvlan-1<br><br>-o <span class="hljs-attribute">parent</span>=网卡名称  指定用来给 macvlan 网络使用的物理网卡<br><br>注意，要在所有需要运行 macvlan 的主机上执行这条命令，但是要记得更改网关的地址，避免造成IP冲突<br><br>docker <span class="hljs-built_in">run</span> -itd --network macvlan-1 centos /bin/bash<br></code></pre></td></tr></table></figure><h4 id="overlay"><a href="#overlay" class="headerlink" title="overlay"></a>overlay</h4><p>在 Docker 中，overlay 是众多 Docker 网络模型中的一种，并且是一种跨主机的全局网络模型，有一个数据库专门的来存储网络分配信息，避免 IP 冲突，同时内部还有一个小型的 DNS 我们可以直接通过主机名进行访问</p><figure class="highlight pgsql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br></pre></td><td class="code"><pre><code class="hljs pgsql">consul 服务端：<br>docker run -itd -h consul <span class="hljs-comment">--name consul --restart=always -p 8500:8500 progrium/consul -server -bootstrap</span><br><br>-h 主机名<br>–<span class="hljs-type">name</span> 容器名<br>–<span class="hljs-keyword">restart</span>=<span class="hljs-keyword">always</span> 重启策略<br>progrium/consul 镜像名称<br>-<span class="hljs-keyword">server</span> 以服务节点启动<br>-bootstrap预期的启动节点数：自举<br><br>在浏览器内输入 IP地址+端口号 可以看到 web 页面<br><br>在所有主机上编辑 daemon.json 文件：<br>&#123;<br>&quot;hosts&quot;: [&quot;tcp://0.0.0.0:2375&quot;,&quot;unix:///var/run/docker.sock&quot;]， 监听相关端口<br>&quot;cluster-store&quot;:&quot;consul://192.168.1.150:8500&quot;,   集群的主机地址<br>&quot;cluster-advertise&quot;:&quot;192.168.1.150:2375”宣告自己的地址 <br>&#125;<br><br>重启 docker 服务<br><br>创建 overlay 网络（全局网络）：一台主机上创建自动同步<br><br>docker network create -d overlay overlay-1<br><br>启动容器测试：<br><br>docker run -it --name docker-1 --network=overlay-1 centos /bin/bash<br><br>docker run -it --name docker-2 --network=overlay-1 centos /bin/bash<br><br>验证：ping docker-1<br></code></pre></td></tr></table></figure><h3 id="常见故障-1"><a href="#常见故障-1" class="headerlink" title="常见故障"></a>常见故障</h3><p>如发现各容器内分配的ip之间相互ping不通</p><figure class="highlight graphql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><code class="hljs graphql">原因：可能由于防火墙问题引起的,默认forward链是drop状态，需要打开才可以<br><br><br>解决方案<span class="hljs-punctuation">:</span><br>执行下面操作，保证<span class="hljs-keyword">INPUT</span>  FORWARD链都是ACCEPT状态<br>清除其他规则<br><span class="hljs-punctuation">[</span>root<span class="hljs-meta">@docker_node1</span> ~<span class="hljs-punctuation">]</span><span class="hljs-comment"># iptables -P INPUT ACCEPT</span><br><span class="hljs-punctuation">[</span>root<span class="hljs-meta">@docker_node1</span> ~<span class="hljs-punctuation">]</span><span class="hljs-comment"># iptables -P FORWARD ACCEPT</span><br><span class="hljs-punctuation">[</span>root<span class="hljs-meta">@docker_node1</span> ~<span class="hljs-punctuation">]</span><span class="hljs-comment"># iptables -F</span><br><span class="hljs-punctuation">[</span>root<span class="hljs-meta">@docker_node1</span> ~<span class="hljs-punctuation">]</span><span class="hljs-comment"># iptables -L -n</span><br><br><br><span class="hljs-punctuation">[</span>root<span class="hljs-meta">@docker_node2</span> ~<span class="hljs-punctuation">]</span><span class="hljs-comment"># iptables -P INPUT ACCEPT</span><br><span class="hljs-punctuation">[</span>root<span class="hljs-meta">@docker_node2</span> ~<span class="hljs-punctuation">]</span><span class="hljs-comment"># iptables -P FORWARD ACCEPT</span><br><span class="hljs-punctuation">[</span>root<span class="hljs-meta">@docker_node2</span> ~<span class="hljs-punctuation">]</span><span class="hljs-comment"># iptables -F</span><br><span class="hljs-punctuation">[</span>root<span class="hljs-meta">@docker_node2</span> ~<span class="hljs-punctuation">]</span><span class="hljs-comment"># iptables -L -n</span><br></code></pre></td></tr></table></figure><h2 id="Docker私有仓库"><a href="#Docker私有仓库" class="headerlink" title="Docker私有仓库"></a>Docker私有仓库</h2><p>在Docker中，当我们执行 docker pull xxx 的时候 ，它实际上是从 hub.docker.com 这个地址去查找，这就是 Docker 公司为我们提供的公共仓库。在工作中，我们不可能把企业项目 push 到公有仓库进行管理。所以为了更好的管理镜像，Docker 不仅提供了一个中央仓库，同时也允许我们搭建本地私有仓库。</p><p>docker容器镜像仓库分类：</p><ul><li>公网仓库：docker hub</li><li>私网仓库: registry、harbor</li></ul><h3 id="部署步骤"><a href="#部署步骤" class="headerlink" title="部署步骤"></a>部署步骤</h3><p>拉取registry镜像</p><figure class="highlight ebnf"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs ebnf"><span class="hljs-attribute">docker pull registry</span> <br></code></pre></td></tr></table></figure><p>创建registry仓库容器</p><figure class="highlight awk"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><code class="hljs awk"><span class="hljs-number">1</span>、创建持久化存储，将容器镜像存储目录<span class="hljs-regexp">/var/</span>lib/registry<br>挂载到本地<span class="hljs-regexp">/opt/</span>qyck下：<br><br>mkdir <span class="hljs-regexp">/opt/</span>qyck<br><br><span class="hljs-number">2</span>、创建 registry 容器：<br><br>docker run -itd -p <span class="hljs-number">5000</span>:<span class="hljs-number">5000</span> \<br>-v <span class="hljs-regexp">/opt/</span>qyck:<span class="hljs-regexp">/var/</span>lib/registry  \<br>--restart=always registry:latest<br><br><span class="hljs-number">3</span>、查看容器是否运行<br>[root@qyck ~]<span class="hljs-comment"># docker ps</span><br>CONTAINER ID   IMAGE             COMMAND                  CREATED          STATUS         PORTS                                       NAMES<br>d1ea79cc023f   registry:latest   <span class="hljs-string">&quot;/entrypoint.sh /etc…&quot;</span>   <span class="hljs-number">10</span> seconds ago   Up <span class="hljs-number">9</span> seconds   <span class="hljs-number">0.0</span>.<span class="hljs-number">0.0</span>:<span class="hljs-number">5000</span>-&gt;<span class="hljs-number">5000</span><span class="hljs-regexp">/tcp, :::5000-&gt;5000/</span>tcp   trusting_gates<br><br></code></pre></td></tr></table></figure><p>测试容器应用</p><figure class="highlight elixir"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs elixir">[root<span class="hljs-variable">@zutuanxue_manage01</span> ~]<span class="hljs-comment"># curl 192.168.48.128:5000/v2/_catalog</span><br>&#123;<span class="hljs-string">&quot;repositories&quot;</span><span class="hljs-symbol">:[]</span>&#125;<br><br>显示仓库中没有任何镜像<br></code></pre></td></tr></table></figure><h3 id="上传镜像"><a href="#上传镜像" class="headerlink" title="上传镜像"></a>上传镜像</h3><p>测试：拉取nginx镜像</p><figure class="highlight crmsh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><code class="hljs crmsh">docker pull nginx<br>[root@qyck ~]<span class="hljs-comment"># docker images</span><br>REPOSITORY   <span class="hljs-keyword">TAG</span>       <span class="hljs-title">IMAGE</span> ID       CREATED       SIZE<br>registry     latest    <span class="hljs-number">65</span>f3b3441f04   <span class="hljs-number">9</span> days ago    <span class="hljs-number">24M</span>B<br>nginx        latest    <span class="hljs-number">448</span>a08f1d2f9   <span class="hljs-number">2</span> weeks ago   <span class="hljs-number">142M</span>B<br><br></code></pre></td></tr></table></figure><p>设置docker仓库为registry本地仓库</p><figure class="highlight gradle"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><code class="hljs gradle">#<span class="hljs-number">1</span>、修改docker进程启动文件，修改其启动方式，目的是为了让通过docker配置文件启动<br>[root@qyck ~]# sed -i.bak <span class="hljs-string">&#x27;/^ExecStart=/c\ExecStart=\/usr\/bin\/dockerd&#x27;</span> <span class="hljs-regexp">/usr/</span>lib<span class="hljs-regexp">/systemd/</span>system/docker.service<br><br>#<span class="hljs-number">2</span>、设置docker 守护进程的配置文件 <span class="hljs-regexp">/etc/</span>docker/daemon.json,默认没有该文件<br>[root@qyck ~]# cat <span class="hljs-regexp">/etc/</span>docker/daemon.json <br>&#123;<br> <span class="hljs-string">&quot;insecure-registries&quot;</span>: [<span class="hljs-string">&quot;http://192.168.48.128:5000&quot;</span>]<br>&#125;<br><br>insecure-registries 指定非安全的仓库地址，多个用逗号隔开<br><br>#<span class="hljs-number">3</span>、重启docker生效配置文件<br>systemctl daemon-reload<br>systemctl restart docker<br></code></pre></td></tr></table></figure><p>将镜像打tag</p><figure class="highlight accesslog"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs accesslog"><span class="hljs-string">[root@qyck ~]</span># docker tag nginx:latest <span class="hljs-number">192</span>.<span class="hljs-number">168</span>.<span class="hljs-number">48</span>.<span class="hljs-number">128</span>:<span class="hljs-number">5000</span>/nginx:v1<br><span class="hljs-string">[root@qyck ~]</span># docker images<br>REPOSITORY                  TAG       IMAGE ID       CREATED       SIZE<br><span class="hljs-number">192.168.48.128:5000</span>/nginx   v1        448a08f1d2f9   <span class="hljs-number">2</span> weeks ago   142MB<br></code></pre></td></tr></table></figure><p>推送镜像到仓库</p><figure class="highlight gradle"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><code class="hljs gradle">[root@qyck ~]# docker <span class="hljs-keyword">push</span> <span class="hljs-number">192.168</span>.<span class="hljs-number">48.128</span>:<span class="hljs-number">5000</span>/nginx:v1<br>The <span class="hljs-keyword">push</span> refers to repository [<span class="hljs-number">192.168</span>.<span class="hljs-number">48.128</span>:<span class="hljs-number">5000</span>/nginx]<br><span class="hljs-number">1040838</span>fe30e: Pushed<br><span class="hljs-number">93</span>ee76f39c97: Pushed<br><span class="hljs-number">5684</span>be535bf1: Pushed<br><span class="hljs-number">6</span>bc8ae8fb3cf: Pushed<br>a29cc9587af6: Pushed<br><span class="hljs-number">8553</span>b91047da: Pushed<br>v1: digest: sha256:<span class="hljs-number">3</span>f01b0094e21f7d55b9eb7179d01c49fdf9c3e1e3419d315b81a9e0bae1b6a90 <span class="hljs-keyword">size</span>: <span class="hljs-number">1570</span><br><br><br>#<span class="hljs-number">2</span>、查看上传<br>[root@qyck ~]# curl http:<span class="hljs-comment">//192.168.48.128:5000/v2/_catalog</span><br>&#123;<span class="hljs-string">&quot;repositories&quot;</span>:[<span class="hljs-string">&quot;nginx&quot;</span>]&#125;<br><br>#查看存储文件夹<br>[root@qyck ~]# ls <span class="hljs-regexp">/opt/</span>qyck<span class="hljs-regexp">/docker/</span>registry<span class="hljs-regexp">/v2/</span><span class="hljs-keyword">repositories</span>/<br>nginx<br><br></code></pre></td></tr></table></figure><h3 id="拉取镜像-1"><a href="#拉取镜像-1" class="headerlink" title="拉取镜像"></a>拉取镜像</h3><p>在另外一台机拉取nginx镜像</p><figure class="highlight autoit"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><code class="hljs autoit"><span class="hljs-meta">#1、设置docker启动文件</span><br>[root<span class="hljs-symbol">@zutuanxue_node1</span> ~]<span class="hljs-meta"># sed -i.bak <span class="hljs-string">&#x27;/^ExecStart=/c\ExecStart=\/usr\/bin\/dockerd&#x27;</span> /usr/lib/systemd/system/docker.service</span><br><br><span class="hljs-meta">#2、设置docker配置文件</span><br>[root<span class="hljs-symbol">@zutuanxue_node1</span> ~]<span class="hljs-meta"># cat  /etc/docker/daemon.json </span><br>&#123;<br> <span class="hljs-string">&quot;insecure-registries&quot;</span>: [<span class="hljs-string">&quot;http://192.168.48.128:5000&quot;</span>]<br>&#125;<br><br>systemctl daemon-reload<br>systemctl restart docker<br></code></pre></td></tr></table></figure><p>拉取镜像</p><figure class="highlight makefile"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><code class="hljs makefile">[root@qyck ~]<span class="hljs-comment"># docker pull 192.168.48.128:5000/nginx:v1</span><br><span class="hljs-section">v1: Pulling from nginx</span><br><span class="hljs-section">9e3ea8720c6d: Pull complete</span><br><span class="hljs-section">bf36b6466679: Pull complete</span><br><span class="hljs-section">15a97cf85bb8: Pull complete</span><br><span class="hljs-section">9c2d6be5a61d: Pull complete</span><br><span class="hljs-section">6b7e4a5c7c7a: Pull complete</span><br><span class="hljs-section">8db4caa19df8: Pull complete</span><br><span class="hljs-section">Digest: sha256:3f01b0094e21f7d55b9eb7179d01c49fdf9c3e1e3419d315b81a9e0bae1b6a90</span><br><span class="hljs-section">Status: Downloaded newer image for 192.168.48.128:5000/nginx:v1</span><br><span class="hljs-section">192.168.48.128:5000/nginx:v1</span><br>[root@qyck ~]<span class="hljs-comment"># docker images</span><br>REPOSITORY                  TAG       IMAGE ID       CREATED       SIZE<br>registry                    latest    65f3b3441f04   9 days ago    24MB<br><span class="hljs-section">192.168.48.128:5000/nginx   v1        448a08f1d2f9   2 weeks ago   142MB</span><br><br><br></code></pre></td></tr></table></figure><h2 id="Docker学习总结"><a href="#Docker学习总结" class="headerlink" title="Docker学习总结"></a>Docker学习总结</h2><p><img src="https://article.biliimg.com/bfs/article/1e9ecbdb4231d5f90dba2727716e69cf697559838.png" alt="1"></p><h2 id="docker-run-参数解析"><a href="#docker-run-参数解析" class="headerlink" title="docker run 参数解析"></a>docker run 参数解析</h2><figure class="highlight stylus"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br></pre></td><td class="code"><pre><code class="hljs stylus">-d: 后台运行容器，并返回容器ID；<br><br>-<span class="hljs-selector-tag">i</span>: 以交互模式运行容器，通常与 -t 同时使用；<br><br>-P: 随机端口映射，容器内部端口随机映射到主机的端口<br><br>-<span class="hljs-selector-tag">p</span>: 指定端口映射，格式为：主机(宿主)端口:容器端口<br><br>-t: 为容器重新分配一个伪输入终端，通常与 -<span class="hljs-selector-tag">i</span> 同时使用；<br><br><span class="hljs-attr">--name</span>=<span class="hljs-string">&quot;nginx-lb&quot;</span>: 为容器指定一个名称；<br><br><span class="hljs-attr">--dns</span> <span class="hljs-number">8.8</span>.<span class="hljs-number">8.8</span>: 指定容器使用的DNS服务器，默认和宿主一致；<br><br><span class="hljs-attr">--dns-search</span> example<span class="hljs-selector-class">.com</span>: 指定容器DNS搜索域名，默认和宿主一致；<br><br>-h <span class="hljs-string">&quot;mars&quot;</span>: 指定容器的hostname；<br><br>-e username=<span class="hljs-string">&quot;ritchie&quot;</span>: 设置环境变量；<br><br><span class="hljs-attr">--env-file</span>=<span class="hljs-selector-attr">[]</span>: 从指定文件读入环境变量；<br><br><span class="hljs-attr">--cpuset</span>=<span class="hljs-string">&quot;0-2&quot;</span> or <span class="hljs-attr">--cpuset</span>=<span class="hljs-string">&quot;0,1,2&quot;</span>: 绑定容器到指定CPU运行；<br><br>-m :设置容器使用内存最大值；<br><br><span class="hljs-attr">--net</span>=<span class="hljs-string">&quot;bridge&quot;</span>: 指定容器的网络连接类型，支持 bridge/host/<span class="hljs-attribute">none</span>/container: 四种类型；<br><br><span class="hljs-attr">--link</span>=<span class="hljs-selector-attr">[]</span>: 添加链接到另一个容器；<br><br><span class="hljs-attr">--expose</span>=<span class="hljs-selector-attr">[]</span>: 开放一个端口或一组端口；<br><br><span class="hljs-attr">--volume</span> , -v: 绑定一个卷<br></code></pre></td></tr></table></figure><p>此笔记参考 <a href="https://blog.kbai.cc/">开摆工作室</a>&#x2F;<a href="https://blog.kbai.cc/2022/04/25/Docker%20%E5%9F%BA%E7%A1%80/#%F0%9F%9A%80Docker%E5%AD%A6%E4%B9%A0%E5%9F%BA%E7%A1%80%E6%80%BB%E7%BB%93">Docker基础</a>精心整理</p><div class="tbsm" style="margin-top:54px;"><div class="tbsm-top"><span><svg t="1674654360507" class="icon" viewBox="0 0 1024 1024" version="1.1" xmlns="http://www.w3.org/2000/svg" p-id="987" data-spm-anchor-id="a313x.7781069.0.i0" width="35" height="35"><path d="M410.49 97.74H155.08a56.74 56.74 0 0 0-56.84 56.73V410a56.84 56.84 0 0 0 56.84 56.84h255.41A56.83 56.83 0 0 0 467.32 410V154.58a56.83 56.83 0 0 0-56.83-56.84zM410.49 558.74H155.08a56.74 56.74 0 0 0-56.84 56.73V871a56.84 56.84 0 0 0 56.84 56.84h255.41A56.83 56.83 0 0 0 467.32 871V615.58a56.83 56.83 0 0 0-56.83-56.84zM871.49 558.74H616.08a56.74 56.74 0 0 0-56.84 56.73V871a56.84 56.84 0 0 0 56.84 56.84h255.41A56.83 56.83 0 0 0 928.32 871V615.58a56.83 56.83 0 0 0-56.83-56.84z" fill="#66EEFF" p-id="988"></path><path d="M410.49 558.74h-4.14A475 475 0 0 0 299.52 859.6a481.16 481.16 0 0 0 4.84 68.22h106.13A56.83 56.83 0 0 0 467.32 871V615.58a56.83 56.83 0 0 0-56.83-56.84zM871.49 558.74H616.08a56.74 56.74 0 0 0-56.84 56.73V871a56.84 56.84 0 0 0 56.84 56.84h255.41A56.83 56.83 0 0 0 928.32 871V615.58a56.83 56.83 0 0 0-56.83-56.84z" fill="#C2F8FF" p-id="989"></path></svg></span><span style="font-size:30px;"> 特别声明</span></div><div class="tbsm-wz">千屹博客旗下的所有文章，是通过本人课堂学习和课外自学所精心整理的知识巨著<br/>难免会有出错的地方<br/>如果细心的你发现了小失误，可以在下方评论区告诉我，或者私信我！<br />非常感谢大家的热烈支持！</div></div>]]></content>
    
    
    
    <tags>
      
      <tag>Docker</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>Hadoop部署</title>
    <link href="/2023/03/24/Hadoop/"/>
    <url>/2023/03/24/Hadoop/</url>
    
    <content type="html"><![CDATA[<meta name="referrer" content="no-referrer"/><h1 id="Hadoop部署"><a href="#Hadoop部署" class="headerlink" title="Hadoop部署"></a>Hadoop部署</h1><p>本笔记分伪分布和分布式两大块，但建议从头开始观看</p><p>文章所需资源可<a href="https://pan.quark.cn/s/a2886f170a7f">点击这里</a>下载</p><h2 id="伪分布"><a href="#伪分布" class="headerlink" title="伪分布"></a>伪分布</h2><p>单节点 masteryjx48 （Centos 7.9）</p><table><thead><tr><th>名称</th><th>ip1（NAT）</th><th>内存</th><th>硬盘</th></tr></thead><tbody><tr><td>masteryjx48</td><td>192.168.48.11</td><td>5G</td><td>100G</td></tr></tbody></table><h3 id="基本配置"><a href="#基本配置" class="headerlink" title="基本配置"></a>基本配置</h3><p>本地yum配置，自行挂载本地Centos7.9镜像</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><code class="hljs bash"><span class="hljs-built_in">mkdir</span> repo.bak<br><span class="hljs-built_in">mv</span> /etc/yum.repos.d/* repo.bak/<br>mount /dev/cdrom /mnt<br><span class="hljs-built_in">cat</span> &gt;&gt;/etc/yum.repos.d/local.repo&lt;&lt;<span class="hljs-string">EOF</span><br><span class="hljs-string">[local]</span><br><span class="hljs-string">name=local</span><br><span class="hljs-string">baseurl=file:///mnt</span><br><span class="hljs-string">gpgcheck=0</span><br><span class="hljs-string">enabled=1</span><br><span class="hljs-string">EOF</span><br>yum clean all &amp;&amp; yum makecache<br>systemctl <span class="hljs-built_in">disable</span> firewalld --now<br>sed -i <span class="hljs-string">&#x27;s/SELINUX=enforcing/SELINUX=disabled/g&#x27;</span> /etc/sysconfig/selinux<br></code></pre></td></tr></table></figure><h3 id="更改hosts"><a href="#更改hosts" class="headerlink" title="更改hosts"></a>更改hosts</h3><figure class="highlight arcade"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs arcade">echo <span class="hljs-string">&quot;192.168.48.11 masteryjx48&quot;</span> &gt;&gt; <span class="hljs-regexp">/etc/</span>hosts<br></code></pre></td></tr></table></figure><h3 id="配置主机名"><a href="#配置主机名" class="headerlink" title="配置主机名"></a>配置主机名</h3><figure class="highlight dsconfig"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs dsconfig"><span class="hljs-string">hostnamectl</span> <span class="hljs-built_in">set-hostname</span> <span class="hljs-string">masteryjx48</span> &amp;&amp; <span class="hljs-string">bash</span><br></code></pre></td></tr></table></figure><h3 id="配置ssh免密登入"><a href="#配置ssh免密登入" class="headerlink" title="配置ssh免密登入"></a>配置ssh免密登入</h3><figure class="highlight awk"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs awk">ssh-keygen -t rsa<br>cat ~<span class="hljs-regexp">/.ssh/i</span>d_rsa.pub &gt;&gt; ~<span class="hljs-regexp">/.ssh/</span>authorized_keys<br>ssh-copy-id masteryjx48<br>ssh masteryjx48<br><span class="hljs-keyword">exit</span><br></code></pre></td></tr></table></figure><h3 id="安装JAVA环境"><a href="#安装JAVA环境" class="headerlink" title="安装JAVA环境"></a>安装JAVA环境</h3><figure class="highlight gradle"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><code class="hljs gradle">mkdir <span class="hljs-regexp">/usr/</span>lib/jvm<br>tar -xf <span class="hljs-regexp">/root/</span>jdk-<span class="hljs-number">8</span>u162-linux-x64.tar.gz -C <span class="hljs-regexp">/usr/</span>lib/jvm<br>echo <span class="hljs-string">&quot;export JAVA_HOME=/usr/lib/jvm/jdk1.8.0_162&quot;</span> &gt;&gt; <span class="hljs-regexp">/etc/</span>profile<br>echo <span class="hljs-string">&quot;export PATH=\$JAVA_HOME/bin:\$PATH&quot;</span> &gt;&gt; <span class="hljs-regexp">/etc/</span>profile<br><span class="hljs-keyword">source</span> <span class="hljs-regexp">/etc/</span>profile<br>java -version<br></code></pre></td></tr></table></figure><h3 id="安装Hadoop"><a href="#安装Hadoop" class="headerlink" title="安装Hadoop"></a>安装Hadoop</h3><figure class="highlight gradle"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><code class="hljs gradle">tar -zxf hadoop-<span class="hljs-number">3.1</span>.<span class="hljs-number">3</span>.tar.gz -C <span class="hljs-regexp">/usr/</span>local<br>mv <span class="hljs-regexp">/usr/</span>local<span class="hljs-regexp">/hadoop-3.1.3/</span> <span class="hljs-regexp">/usr/</span>local/hadoop<br>echo <span class="hljs-string">&quot;export HADOOP_HOME=/usr/local/hadoop&quot;</span> &gt;&gt; <span class="hljs-regexp">/etc/</span>profile<br>echo <span class="hljs-string">&quot;export PATH=\$HADOOP_HOME/bin/:\$HADOOP_HOME/sbin/:\$PATH&quot;</span> &gt;&gt; <span class="hljs-regexp">/etc/</span>profile<br><span class="hljs-keyword">source</span> <span class="hljs-regexp">/etc/</span>profile<br>hadoop version<br></code></pre></td></tr></table></figure><p>打个快照，方便做分布式部署,做分布式的直接跳到2.分布式</p><h3 id="编写配置文件"><a href="#编写配置文件" class="headerlink" title="编写配置文件"></a>编写配置文件</h3><h4 id="编写cort-site-yaml文件"><a href="#编写cort-site-yaml文件" class="headerlink" title="编写cort-site.yaml文件"></a>编写cort-site.yaml文件</h4><figure class="highlight gherkin"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><code class="hljs gherkin">[root<span class="hljs-meta">@masteryjx48</span> ~]<span class="hljs-comment"># cat /usr/local/hadoop/etc/hadoop/core-site.xml</span><br><span class="hljs-variable">&lt;configuration&gt;</span><br>    <span class="hljs-variable">&lt;property&gt;</span><br>        <span class="hljs-variable">&lt;name&gt;</span>hadoop.tmp.dir<span class="hljs-variable">&lt;/name&gt;</span><br>        <span class="hljs-variable">&lt;value&gt;</span>file:/usr/local/hadoop/tmp<span class="hljs-variable">&lt;/value&gt;</span><br>        <span class="hljs-variable">&lt;description&gt;</span>Abase for other temporary directories.<span class="hljs-variable">&lt;/description&gt;</span><br>    <span class="hljs-variable">&lt;/property&gt;</span><br>    <span class="hljs-variable">&lt;property&gt;</span><br>        <span class="hljs-variable">&lt;name&gt;</span>fs.defaultFS<span class="hljs-variable">&lt;/name&gt;</span><br>        <span class="hljs-variable">&lt;value&gt;</span>hdfs://masteryjx48:9000<span class="hljs-variable">&lt;/value&gt;</span><br>    <span class="hljs-variable">&lt;/property&gt;</span><br><span class="hljs-variable">&lt;/configuration&gt;</span><br></code></pre></td></tr></table></figure><h4 id="编写hdfs-site-xml"><a href="#编写hdfs-site-xml" class="headerlink" title="编写hdfs-site.xml"></a>编写hdfs-site.xml</h4><figure class="highlight gherkin"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><code class="hljs gherkin">[root<span class="hljs-meta">@masteryjx48</span> ~]<span class="hljs-comment"># cat /usr/local/hadoop/etc/hadoop/hdfs-site.xml</span><br><span class="hljs-variable">&lt;configuration&gt;</span><br>    <span class="hljs-variable">&lt;property&gt;</span><br>        <span class="hljs-variable">&lt;name&gt;</span>dfs.replication<span class="hljs-variable">&lt;/name&gt;</span><br>        <span class="hljs-variable">&lt;value&gt;</span>1<span class="hljs-variable">&lt;/value&gt;</span><br>    <span class="hljs-variable">&lt;/property&gt;</span><br>    <span class="hljs-variable">&lt;property&gt;</span><br>        <span class="hljs-variable">&lt;name&gt;</span>dfs.namenode.name.dir<span class="hljs-variable">&lt;/name&gt;</span><br>        <span class="hljs-variable">&lt;value&gt;</span>file:/usr/local/hadoop/tmp/dfs/name<span class="hljs-variable">&lt;/value&gt;</span><br>    <span class="hljs-variable">&lt;/property&gt;</span><br>    <span class="hljs-variable">&lt;property&gt;</span><br>        <span class="hljs-variable">&lt;name&gt;</span>dfs.datanode.data.dir<span class="hljs-variable">&lt;/name&gt;</span><br>        <span class="hljs-variable">&lt;value&gt;</span>file:/usr/local/hadoop/tmp/dfs/data<span class="hljs-variable">&lt;/value&gt;</span><br>    <span class="hljs-variable">&lt;/property&gt;</span><br><span class="hljs-variable">&lt;/configuration&gt;</span><br></code></pre></td></tr></table></figure><h3 id="启动hdfs服务"><a href="#启动hdfs服务" class="headerlink" title="启动hdfs服务"></a>启动hdfs服务</h3><figure class="highlight dos"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs dos">hdfs namenode -<span class="hljs-built_in">format</span><br></code></pre></td></tr></table></figure><h3 id="添加环境变量"><a href="#添加环境变量" class="headerlink" title="添加环境变量"></a>添加环境变量</h3><figure class="highlight gradle"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><code class="hljs gradle">echo <span class="hljs-string">&quot;export HDFS_NAMENODE_USER=root&quot;</span> &gt;&gt; <span class="hljs-regexp">/etc/</span>profile<br>echo <span class="hljs-string">&quot;export HDFS_DATANODE_USER=root&quot;</span> &gt;&gt; <span class="hljs-regexp">/etc/</span>profile<br>echo <span class="hljs-string">&quot;export HDFS_SECONDARYNAMENODE_USER=root&quot;</span> &gt;&gt; <span class="hljs-regexp">/etc/</span>profile<br>echo <span class="hljs-string">&quot;export YARN_RESOURCEMANAGER_USER=root&quot;</span> &gt;&gt; <span class="hljs-regexp">/etc/</span>profile<br>echo <span class="hljs-string">&quot;export YARN_NODEMANAGER_USER=root&quot;</span> &gt;&gt; <span class="hljs-regexp">/etc/</span>profile<br><span class="hljs-keyword">source</span> <span class="hljs-regexp">/etc/</span>profile<br></code></pre></td></tr></table></figure><h3 id="修改hadoop配置文件"><a href="#修改hadoop配置文件" class="headerlink" title="修改hadoop配置文件"></a>修改hadoop配置文件</h3><figure class="highlight awk"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs awk">echo <span class="hljs-string">&quot;export JAVA_HOME=/usr/lib/jvm/jdk1.8.0_162&quot;</span> &gt;&gt; <span class="hljs-regexp">/usr/</span>local<span class="hljs-regexp">/hadoop/</span>etc<span class="hljs-regexp">/hadoop/</span>hadoop-env.sh<br></code></pre></td></tr></table></figure><h3 id="启动hadoop服务"><a href="#启动hadoop服务" class="headerlink" title="启动hadoop服务"></a>启动hadoop服务</h3><figure class="highlight pgsql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><code class="hljs pgsql">[root@masteryjx48 ~]# <span class="hljs-keyword">start</span>-<span class="hljs-keyword">all</span>.sh<br>Starting namenodes <span class="hljs-keyword">on</span> [masteryjx48]<br>Last <span class="hljs-keyword">login</span>: Thu Mar  <span class="hljs-number">9</span> <span class="hljs-number">07</span>:<span class="hljs-number">12</span>:<span class="hljs-number">02</span> CST <span class="hljs-number">2023</span> <span class="hljs-keyword">on</span> pts/<span class="hljs-number">0</span><br>Starting datanodes<br>Last <span class="hljs-keyword">login</span>: Thu Mar  <span class="hljs-number">9</span> <span class="hljs-number">07</span>:<span class="hljs-number">14</span>:<span class="hljs-number">08</span> CST <span class="hljs-number">2023</span> <span class="hljs-keyword">on</span> pts/<span class="hljs-number">0</span><br>Starting secondary namenodes [masteryjx48]<br>Last <span class="hljs-keyword">login</span>: Thu Mar  <span class="hljs-number">9</span> <span class="hljs-number">07</span>:<span class="hljs-number">14</span>:<span class="hljs-number">11</span> CST <span class="hljs-number">2023</span> <span class="hljs-keyword">on</span> pts/<span class="hljs-number">0</span><br>Starting resourcemanager<br>Last <span class="hljs-keyword">login</span>: Thu Mar  <span class="hljs-number">9</span> <span class="hljs-number">07</span>:<span class="hljs-number">14</span>:<span class="hljs-number">15</span> CST <span class="hljs-number">2023</span> <span class="hljs-keyword">on</span> pts/<span class="hljs-number">0</span><br>Starting nodemanagers<br>Last <span class="hljs-keyword">login</span>: Thu Mar  <span class="hljs-number">9</span> <span class="hljs-number">07</span>:<span class="hljs-number">14</span>:<span class="hljs-number">20</span> CST <span class="hljs-number">2023</span> <span class="hljs-keyword">on</span> pts/<span class="hljs-number">0</span><br><br></code></pre></td></tr></table></figure><p>关闭hadoop服务  stop-dfs.sh </p><h3 id="启动historyserver服务"><a href="#启动historyserver服务" class="headerlink" title="启动historyserver服务"></a>启动historyserver服务</h3><figure class="highlight crmsh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs crmsh">mr-jobhistory-daemon.sh <span class="hljs-literal">start</span> historyserver<br></code></pre></td></tr></table></figure><h3 id="查看java进程"><a href="#查看java进程" class="headerlink" title="查看java进程"></a>查看java进程</h3><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><code class="hljs yaml">[<span class="hljs-string">root@masteryjx48</span> <span class="hljs-string">~</span>]<span class="hljs-comment"># jps</span><br><span class="hljs-number">9280 </span><span class="hljs-string">ResourceManager</span><br><span class="hljs-number">8785 </span><span class="hljs-string">DataNode</span><br><span class="hljs-number">9443 </span><span class="hljs-string">NodeManager</span><br><span class="hljs-number">9014 </span><span class="hljs-string">SecondaryNameNode</span><br><span class="hljs-number">8599 </span><span class="hljs-string">NameNode</span><br><span class="hljs-number">11127</span> <span class="hljs-string">Jps</span><br><span class="hljs-number">11034</span> <span class="hljs-string">JobHistoryServer</span><br></code></pre></td></tr></table></figure><h3 id="访问网页ip-9870查看hdfs"><a href="#访问网页ip-9870查看hdfs" class="headerlink" title="访问网页ip:9870查看hdfs"></a>访问网页ip:9870查看hdfs</h3><p><img src="https://article.biliimg.com/bfs/article/c480b17285037f63bab88e7728ea6f1d697559838.png" alt="image-20230308231858685"></p><h3 id="访问网页ip-8088查看hadoop"><a href="#访问网页ip-8088查看hadoop" class="headerlink" title="访问网页ip:8088查看hadoop"></a>访问网页ip:8088查看hadoop</h3><p><img src="https://article.biliimg.com/bfs/article/56b444455191defeb4c783b5fefa8433697559838.png" alt="image-20230308232003637"></p><h2 id="分布式"><a href="#分布式" class="headerlink" title="分布式"></a>分布式</h2><p>❗❗❗❗这里就克隆前面创建好的快照（1.6步骤），修改好ip</p><table><thead><tr><th>主机</th><th>ip</th><th>系统和软件</th><th>内存</th></tr></thead><tbody><tr><td>master</td><td>192.168.48.11</td><td>Centos7.9、Hadoop</td><td>5G</td></tr><tr><td>slave1</td><td>192.168.48.12</td><td>Centos7.9、Hadoop</td><td>5G</td></tr></tbody></table><h3 id="环境配置"><a href="#环境配置" class="headerlink" title="环境配置"></a>环境配置</h3><p>修改hosts 把之前添加的删掉</p><p>master</p><figure class="highlight dsconfig"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs dsconfig"><span class="hljs-string">hostnamectl</span> <span class="hljs-built_in">set-hostname</span> <span class="hljs-string">master</span><br><span class="hljs-string">bash</span><br></code></pre></td></tr></table></figure><p>slave1</p><figure class="highlight dsconfig"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs dsconfig"><span class="hljs-string">hostnamectl</span> <span class="hljs-built_in">set-hostname</span> <span class="hljs-string">slave1</span><br><span class="hljs-string">bash</span><br><span class="hljs-string">echo</span> <span class="hljs-string">&quot;192.168.48.11 master&quot;</span> &gt;&gt; /<span class="hljs-string">etc</span>/<span class="hljs-string">hosts</span><br><span class="hljs-string">echo</span> <span class="hljs-string">&quot;192.168.48.12 slave1&quot;</span> &gt;&gt; /<span class="hljs-string">etc</span>/<span class="hljs-string">hosts</span><br><span class="hljs-string">scp</span> /<span class="hljs-string">etc</span>/<span class="hljs-string">hosts</span> <span class="hljs-string">root</span>@<span class="hljs-string">master</span>:/<span class="hljs-string">etc</span>/<span class="hljs-string">hosts</span><br></code></pre></td></tr></table></figure><h3 id="SSH免密登入设置"><a href="#SSH免密登入设置" class="headerlink" title="SSH免密登入设置"></a>SSH免密登入设置</h3><p>master</p><figure class="highlight awk"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><code class="hljs awk">ssh-keygen -t rsa<br>cat ~<span class="hljs-regexp">/.ssh/i</span>d_rsa.pub &gt;&gt; ~<span class="hljs-regexp">/.ssh/</span>authorized_keys<br>ssh master<br><span class="hljs-keyword">exit</span><br>ssh-copy-id -i root@slave1<br>ssh slave1<br>ll<br><span class="hljs-keyword">exit</span><br></code></pre></td></tr></table></figure><p>slave1</p><figure class="highlight awk"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><code class="hljs awk">ssh-keygen -t rsa<br>cat ~<span class="hljs-regexp">/.ssh/i</span>d_rsa.pub &gt;&gt; ~<span class="hljs-regexp">/.ssh/</span>authorized_keys<br>ssh slave1<br><span class="hljs-keyword">exit</span><br>ssh-copy-id -i root@master<br>ssh master<br>ll<br><span class="hljs-keyword">exit</span><br></code></pre></td></tr></table></figure><h3 id="检查java和hadoop环境"><a href="#检查java和hadoop环境" class="headerlink" title="检查java和hadoop环境"></a>检查java和hadoop环境</h3><figure class="highlight pgsql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><code class="hljs pgsql">master<br>[root@master ~]# java -<span class="hljs-keyword">version</span><br>java <span class="hljs-keyword">version</span> &quot;1.8.0_162&quot;<br>Java(TM) SE Runtime Environment (build <span class="hljs-number">1.8</span><span class="hljs-number">.0</span>_162-b12)<br>Java HotSpot(TM) <span class="hljs-number">64</span>-<span class="hljs-type">Bit</span> <span class="hljs-keyword">Server</span> VM (build <span class="hljs-number">25.162</span>-b12, mixed mode)<br>[root@master ~]# hadoop <span class="hljs-keyword">version</span><br>Hadoop <span class="hljs-number">3.1</span><span class="hljs-number">.3</span><br>Source code repository https://gitbox.apache.org/repos/asf/hadoop.git -r ba631c436b806728f8ec2f54ab1e289526c90579<br>Compiled <span class="hljs-keyword">by</span> ztang <span class="hljs-keyword">on</span> <span class="hljs-number">2019</span><span class="hljs-number">-09</span><span class="hljs-number">-12</span>T02:<span class="hljs-number">47</span>Z<br>Compiled <span class="hljs-keyword">with</span> protoc <span class="hljs-number">2.5</span><span class="hljs-number">.0</span><br><span class="hljs-keyword">From</span> source <span class="hljs-keyword">with</span> checksum ec785077c385118ac91aadde5ec9799<br>This command was run <span class="hljs-keyword">using</span> /usr/<span class="hljs-keyword">local</span>/hadoop/<span class="hljs-keyword">share</span>/hadoop/common/hadoop-common<span class="hljs-number">-3.1</span><span class="hljs-number">.3</span>.jar<br><br>slave1<br><br>[root@slave1 ~]# java -<span class="hljs-keyword">version</span><br>java <span class="hljs-keyword">version</span> &quot;1.8.0_162&quot;<br>Java(TM) SE Runtime Environment (build <span class="hljs-number">1.8</span><span class="hljs-number">.0</span>_162-b12)<br>Java HotSpot(TM) <span class="hljs-number">64</span>-<span class="hljs-type">Bit</span> <span class="hljs-keyword">Server</span> VM (build <span class="hljs-number">25.162</span>-b12, mixed mode)<br><br>[root@slave1 ~]# hadoop <span class="hljs-keyword">version</span><br>Hadoop <span class="hljs-number">3.1</span><span class="hljs-number">.3</span><br>Source code repository https://gitbox.apache.org/repos/asf/hadoop.git -r ba631c436b806728f8ec2f54ab1e289526c90579<br>Compiled <span class="hljs-keyword">by</span> ztang <span class="hljs-keyword">on</span> <span class="hljs-number">2019</span><span class="hljs-number">-09</span><span class="hljs-number">-12</span>T02:<span class="hljs-number">47</span>Z<br>Compiled <span class="hljs-keyword">with</span> protoc <span class="hljs-number">2.5</span><span class="hljs-number">.0</span><br><span class="hljs-keyword">From</span> source <span class="hljs-keyword">with</span> checksum ec785077c385118ac91aadde5ec9799<br>This command was run <span class="hljs-keyword">using</span> /usr/<span class="hljs-keyword">local</span>/hadoop/<span class="hljs-keyword">share</span>/hadoop/common/hadoop-common<span class="hljs-number">-3.1</span><span class="hljs-number">.3</span>.jar<br></code></pre></td></tr></table></figure><h3 id="修改配置文件"><a href="#修改配置文件" class="headerlink" title="修改配置文件"></a>修改配置文件</h3><p>修改workers配置文件</p><figure class="highlight crmsh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs crmsh">[root@<span class="hljs-keyword">master</span> <span class="hljs-title">hadoop</span>]<span class="hljs-comment"># cd /usr/local/hadoop/etc/hadoop</span><br>[root@<span class="hljs-keyword">master</span> <span class="hljs-title">hadoop</span>]<span class="hljs-comment"># cat workers</span><br>slave1<br></code></pre></td></tr></table></figure><p>修改core-site.xml</p><figure class="highlight gherkin"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><code class="hljs gherkin">[root<span class="hljs-meta">@master</span> hadoop]<span class="hljs-comment"># cat core-site.xml</span><br><span class="hljs-variable">&lt;configuration&gt;</span><br>        <span class="hljs-variable">&lt;property&gt;</span><br>                <span class="hljs-variable">&lt;name&gt;</span>fs.defaultFS<span class="hljs-variable">&lt;/name&gt;</span><br>                <span class="hljs-variable">&lt;value&gt;</span>hdfs://master:9000<span class="hljs-variable">&lt;/value&gt;</span><br>        <span class="hljs-variable">&lt;/property&gt;</span><br>        <span class="hljs-variable">&lt;property&gt;</span><br>                <span class="hljs-variable">&lt;name&gt;</span>hadoop.tmp.dir<span class="hljs-variable">&lt;/name&gt;</span><br>                <span class="hljs-variable">&lt;value&gt;</span>file:/usr/local/hadoop/tmp<span class="hljs-variable">&lt;/value&gt;</span><br>                <span class="hljs-variable">&lt;description&gt;</span>Abase for other temporary directories.<span class="hljs-variable">&lt;/description&gt;</span><br>        <span class="hljs-variable">&lt;/property&gt;</span><br><span class="hljs-variable">&lt;/configuration&gt;</span><br></code></pre></td></tr></table></figure><p>修改hdfs-site.xml</p><figure class="highlight gherkin"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><code class="hljs gherkin">[root<span class="hljs-meta">@master</span> hadoop]<span class="hljs-comment"># cat hdfs-site.xml</span><br><span class="hljs-variable">&lt;configuration&gt;</span><br>        <span class="hljs-variable">&lt;property&gt;</span><br>                <span class="hljs-variable">&lt;name&gt;</span>dfs.namenode.secondary.http-address<span class="hljs-variable">&lt;/name&gt;</span><br>                <span class="hljs-variable">&lt;value&gt;</span>master:50090<span class="hljs-variable">&lt;/value&gt;</span><br>        <span class="hljs-variable">&lt;/property&gt;</span><br>        <span class="hljs-variable">&lt;property&gt;</span><br>                <span class="hljs-variable">&lt;name&gt;</span>dfs.replication<span class="hljs-variable">&lt;/name&gt;</span><br>                <span class="hljs-variable">&lt;value&gt;</span>1<span class="hljs-variable">&lt;/value&gt;</span><br>        <span class="hljs-variable">&lt;/property&gt;</span><br>        <span class="hljs-variable">&lt;property&gt;</span><br>                <span class="hljs-variable">&lt;name&gt;</span>dfs.namenode.name.dir<span class="hljs-variable">&lt;/name&gt;</span><br>                <span class="hljs-variable">&lt;value&gt;</span>file:/usr/local/hadoop/tmp/dfs/name<span class="hljs-variable">&lt;/value&gt;</span><br>        <span class="hljs-variable">&lt;/property&gt;</span><br>        <span class="hljs-variable">&lt;property&gt;</span><br>                <span class="hljs-variable">&lt;name&gt;</span>dfs.datanode.data.dir<span class="hljs-variable">&lt;/name&gt;</span><br>                <span class="hljs-variable">&lt;value&gt;</span>file:/usr/local/hadoop/tmp/dfs/data<span class="hljs-variable">&lt;/value&gt;</span><br>        <span class="hljs-variable">&lt;/property&gt;</span><br><span class="hljs-variable">&lt;/configuration&gt;</span><br></code></pre></td></tr></table></figure><p>修改mapred-site.xml配置文件</p><figure class="highlight gherkin"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><code class="hljs gherkin">[root<span class="hljs-meta">@master</span> hadoop]<span class="hljs-comment"># cat mapred-site.xml</span><br><span class="hljs-variable">&lt;configuration&gt;</span><br>        <span class="hljs-variable">&lt;property&gt;</span><br>                <span class="hljs-variable">&lt;name&gt;</span>mapreduce.framework.name<span class="hljs-variable">&lt;/name&gt;</span><br>                <span class="hljs-variable">&lt;value&gt;</span>yarn<span class="hljs-variable">&lt;/value&gt;</span><br>        <span class="hljs-variable">&lt;/property&gt;</span><br>        <span class="hljs-variable">&lt;property&gt;</span><br>                <span class="hljs-variable">&lt;name&gt;</span>mapreduce.jobhistory.address<span class="hljs-variable">&lt;/name&gt;</span><br>                <span class="hljs-variable">&lt;value&gt;</span>master:10020<span class="hljs-variable">&lt;/value&gt;</span><br>        <span class="hljs-variable">&lt;/property&gt;</span><br>        <span class="hljs-variable">&lt;property&gt;</span><br>                <span class="hljs-variable">&lt;name&gt;</span>mapreduce.jobhistory.webapp.address<span class="hljs-variable">&lt;/name&gt;</span><br>                <span class="hljs-variable">&lt;value&gt;</span>master:19888<span class="hljs-variable">&lt;/value&gt;</span><br>        <span class="hljs-variable">&lt;/property&gt;</span><br>        <span class="hljs-variable">&lt;property&gt;</span><br><span class="hljs-variable">&lt;name&gt;</span>yarn.app.mapreduce.am.env<span class="hljs-variable">&lt;/name&gt;</span><br><span class="hljs-variable">&lt;value&gt;</span>HADOOP_MAPRED_HOME=/usr/local/hadoop<span class="hljs-variable">&lt;/value&gt;</span><br><span class="hljs-variable">&lt;/property&gt;</span><br><span class="hljs-variable">&lt;property&gt;</span><br><span class="hljs-variable">&lt;name&gt;</span>mapreduce.map.env<span class="hljs-variable">&lt;/name&gt;</span><br><span class="hljs-variable">&lt;value&gt;</span>HADOOP_MAPRED_HOME=/usr/local/hadoop<span class="hljs-variable">&lt;/value&gt;</span><br><span class="hljs-variable">&lt;/property&gt;</span><br><span class="hljs-variable">&lt;property&gt;</span><br><span class="hljs-variable">&lt;name&gt;</span>mapreduce.reduce.env<span class="hljs-variable">&lt;/name&gt;</span><br><span class="hljs-variable">&lt;value&gt;</span>HADOOP_MAPRED_HOME=/usr/local/hadoop<span class="hljs-variable">&lt;/value&gt;</span><br><span class="hljs-variable">&lt;/property&gt;</span><br><span class="hljs-variable">&lt;/configuration&gt;</span><br></code></pre></td></tr></table></figure><p>修改yarn-site.xml文件</p><figure class="highlight gherkin"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><code class="hljs gherkin">[root<span class="hljs-meta">@master</span> hadoop]<span class="hljs-comment"># cat yarn-site.xml</span><br><span class="hljs-variable">&lt;configuration&gt;</span><br>        <span class="hljs-variable">&lt;property&gt;</span><br>                <span class="hljs-variable">&lt;name&gt;</span>yarn.resourcemanager.hostname<span class="hljs-variable">&lt;/name&gt;</span><br>                <span class="hljs-variable">&lt;value&gt;</span>master<span class="hljs-variable">&lt;/value&gt;</span><br>        <span class="hljs-variable">&lt;/property&gt;</span><br>        <span class="hljs-variable">&lt;property&gt;</span><br>                <span class="hljs-variable">&lt;name&gt;</span>yarn.nodemanager.aux-services<span class="hljs-variable">&lt;/name&gt;</span><br>                <span class="hljs-variable">&lt;value&gt;</span>mapreduce_shuffle<span class="hljs-variable">&lt;/value&gt;</span><br>        <span class="hljs-variable">&lt;/property&gt;</span><br><span class="hljs-variable">&lt;/configuration&gt;</span><br></code></pre></td></tr></table></figure><h3 id="将上述配置拷贝到slave1上"><a href="#将上述配置拷贝到slave1上" class="headerlink" title="将上述配置拷贝到slave1上"></a>将上述配置拷贝到slave1上</h3><p>master</p><figure class="highlight awk"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><code class="hljs awk">cd <span class="hljs-regexp">/usr/</span>local<span class="hljs-regexp">/hadoop/</span>etc<span class="hljs-regexp">/hadoop/</span><br>scp core-site.xml slave1:<span class="hljs-regexp">/usr/</span>local<span class="hljs-regexp">/hadoop/</span>etc<span class="hljs-regexp">/hadoop/</span><br>scp hdfs-site.xml slave1:<span class="hljs-regexp">/usr/</span>local<span class="hljs-regexp">/hadoop/</span>etc<span class="hljs-regexp">/hadoop/</span><br>scp mapred-site.xml slave1:<span class="hljs-regexp">/usr/</span>local<span class="hljs-regexp">/hadoop/</span>etc<span class="hljs-regexp">/hadoop/</span><br>scp workers slave1:<span class="hljs-regexp">/usr/</span>local<span class="hljs-regexp">/hadoop/</span>etc<span class="hljs-regexp">/hadoop/</span><br>scp yarn-site.xml slave1:<span class="hljs-regexp">/usr/</span>local<span class="hljs-regexp">/hadoop/</span>etc<span class="hljs-regexp">/hadoop/</span><br></code></pre></td></tr></table></figure><h3 id="修改环境变量拷贝到slave1"><a href="#修改环境变量拷贝到slave1" class="headerlink" title="修改环境变量拷贝到slave1"></a>修改环境变量拷贝到slave1</h3><p>master</p><figure class="highlight gradle"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><code class="hljs gradle">echo <span class="hljs-string">&quot;export HDFS_NAMENODE_USER=root&quot;</span> &gt;&gt; <span class="hljs-regexp">/etc/</span>profile<br>echo <span class="hljs-string">&quot;export HDFS_DATANODE_USER=root&quot;</span> &gt;&gt; <span class="hljs-regexp">/etc/</span>profile<br>echo <span class="hljs-string">&quot;export HDFS_SECONDARYNAMENODE_USER=root&quot;</span> &gt;&gt; <span class="hljs-regexp">/etc/</span>profile<br>echo <span class="hljs-string">&quot;export YARN_RESOURCEMANAGER_USER=root&quot;</span> &gt;&gt; <span class="hljs-regexp">/etc/</span>profile<br>echo <span class="hljs-string">&quot;export YARN_NODEMANAGER_USER=root&quot;</span> &gt;&gt; <span class="hljs-regexp">/etc/</span>profile<br><span class="hljs-keyword">source</span> <span class="hljs-regexp">/etc/</span>profile<br>scp <span class="hljs-regexp">/etc/</span>profile slave1:<span class="hljs-regexp">/etc/</span>profile<br><span class="hljs-keyword">source</span> <span class="hljs-regexp">/etc/</span>profile<br></code></pre></td></tr></table></figure><h3 id="修改hadoop环境配置文件并将配置文件拷贝到slave1"><a href="#修改hadoop环境配置文件并将配置文件拷贝到slave1" class="headerlink" title="修改hadoop环境配置文件并将配置文件拷贝到slave1"></a>修改<strong>hadoop</strong>环境配置文件并将配置文件拷贝到slave1</h3><figure class="highlight awk"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs awk">echo <span class="hljs-string">&quot;export JAVA_HOME=/usr/lib/jvm/jdk1.8.0_162&quot;</span> &gt;&gt; <span class="hljs-regexp">/usr/</span>local<span class="hljs-regexp">/hadoop/</span>etc<span class="hljs-regexp">/hadoop/</span>hadoop-env.sh<br><br>scp <span class="hljs-regexp">/usr/</span>local<span class="hljs-regexp">/hadoop/</span>etc<span class="hljs-regexp">/hadoop/</span>hadoop-env.sh slave1:<span class="hljs-regexp">/usr/</span>local<span class="hljs-regexp">/hadoop/</span>etc<span class="hljs-regexp">/hadoop/</span>hadoop-env.sh<br></code></pre></td></tr></table></figure><h3 id="集群配置启动"><a href="#集群配置启动" class="headerlink" title="集群配置启动"></a>集群配置启动</h3><p>master初始化</p><figure class="highlight dos"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs dos">hdfs namenode -<span class="hljs-built_in">format</span><br></code></pre></td></tr></table></figure><h3 id="启动hadoop"><a href="#启动hadoop" class="headerlink" title="启动hadoop"></a>启动hadoop</h3><figure class="highlight pgsql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs pgsql"><span class="hljs-keyword">start</span>-<span class="hljs-keyword">all</span>.sh<br></code></pre></td></tr></table></figure><h3 id="启动historyserver"><a href="#启动historyserver" class="headerlink" title="启动historyserver"></a>启动historyserver</h3><figure class="highlight crmsh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs crmsh">mr-jobhistory-daemon.sh <span class="hljs-literal">start</span> historyserver<br></code></pre></td></tr></table></figure><h3 id="查看java进程-1"><a href="#查看java进程-1" class="headerlink" title="查看java进程"></a>查看java进程</h3><figure class="highlight crmsh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><code class="hljs crmsh">[root@<span class="hljs-keyword">master</span> <span class="hljs-title">hadoop</span>]<span class="hljs-comment"># jps</span><br><span class="hljs-number">35863</span> ResourceManager<br><span class="hljs-number">2841</span> JobHistoryServer<br><span class="hljs-number">39065</span> NameNode<br><span class="hljs-number">39771</span> Jps<br><span class="hljs-number">35597</span> SecondaryNameNode<br></code></pre></td></tr></table></figure><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs yaml">[<span class="hljs-string">root@slave1</span> <span class="hljs-string">~</span>]<span class="hljs-comment"># jps</span><br><span class="hljs-number">5587 </span><span class="hljs-string">NodeManager</span><br><span class="hljs-number">5492 </span><span class="hljs-string">DataNode</span><br><span class="hljs-number">6215 </span><span class="hljs-string">Jps</span><br></code></pre></td></tr></table></figure><p><img src="https://article.biliimg.com/bfs/article/2a7a1c878cc155e4b23d3f0a89da09f2697559838.png" alt="image-20230309000335285"></p><p><img src="https://article.biliimg.com/bfs/article/42030cae178ffd52681cd6e30f2cc179697559838.png" alt="image-20230309002207394"></p><div class="tbsm" style="margin-top:54px;"><div class="tbsm-top"><span><svg t="1674654360507" class="icon" viewBox="0 0 1024 1024" version="1.1" xmlns="http://www.w3.org/2000/svg" p-id="987" data-spm-anchor-id="a313x.7781069.0.i0" width="35" height="35"><path d="M410.49 97.74H155.08a56.74 56.74 0 0 0-56.84 56.73V410a56.84 56.84 0 0 0 56.84 56.84h255.41A56.83 56.83 0 0 0 467.32 410V154.58a56.83 56.83 0 0 0-56.83-56.84zM410.49 558.74H155.08a56.74 56.74 0 0 0-56.84 56.73V871a56.84 56.84 0 0 0 56.84 56.84h255.41A56.83 56.83 0 0 0 467.32 871V615.58a56.83 56.83 0 0 0-56.83-56.84zM871.49 558.74H616.08a56.74 56.74 0 0 0-56.84 56.73V871a56.84 56.84 0 0 0 56.84 56.84h255.41A56.83 56.83 0 0 0 928.32 871V615.58a56.83 56.83 0 0 0-56.83-56.84z" fill="#66EEFF" p-id="988"></path><path d="M410.49 558.74h-4.14A475 475 0 0 0 299.52 859.6a481.16 481.16 0 0 0 4.84 68.22h106.13A56.83 56.83 0 0 0 467.32 871V615.58a56.83 56.83 0 0 0-56.83-56.84zM871.49 558.74H616.08a56.74 56.74 0 0 0-56.84 56.73V871a56.84 56.84 0 0 0 56.84 56.84h255.41A56.83 56.83 0 0 0 928.32 871V615.58a56.83 56.83 0 0 0-56.83-56.84z" fill="#C2F8FF" p-id="989"></path></svg></span><span style="font-size:30px;"> 特别声明</span></div><div class="tbsm-wz">千屹博客旗下的所有文章，是通过本人课堂学习和课外自学所精心整理的知识巨著<br/>难免会有出错的地方<br/>如果细心的你发现了小失误，可以在下方评论区告诉我，或者私信我！<br />非常感谢大家的热烈支持！</div></div>]]></content>
    
    
    
    <tags>
      
      <tag>Centos 7</tag>
      
      <tag>Hadoop</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>Shell</title>
    <link href="/2023/02/26/Shell/"/>
    <url>/2023/02/26/Shell/</url>
    
    <content type="html"><![CDATA[<meta name="referrer" content="no-referrer"/><h1 id="Shell"><a href="#Shell" class="headerlink" title="Shell"></a>Shell</h1><h2 id="概述"><a href="#概述" class="headerlink" title="概述"></a>概述</h2><p>Shell是一个<span style="color:red;">命令行解释器</span>，他接收应用程序&#x2F;用户命令，然后调用操作系统内核</p><p><img src="https://article.biliimg.com/bfs/article/44de1b42896623b570d0cc3280e63dba697559838.png" alt="image-20230125165047995"></p><p>Shell还是一个功能相当强大的编辑语言，易编写，易调试，灵活性强。</p><h2 id="Shell解析器"><a href="#Shell解析器" class="headerlink" title="Shell解析器"></a>Shell解析器</h2><h3 id="Linux提供的Shell解析器有6种："><a href="#Linux提供的Shell解析器有6种：" class="headerlink" title="Linux提供的Shell解析器有6种："></a>Linux提供的Shell解析器有6种：</h3><figure class="highlight gradle"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><code class="hljs gradle">[root@Shell ~]# cat <span class="hljs-regexp">/etc/</span>Shells<br><span class="hljs-regexp">/bin/</span>sh<br><span class="hljs-regexp">/bin/</span>bash<br><span class="hljs-regexp">/usr/</span>bin/sh<br><span class="hljs-regexp">/usr/</span>bin/bash<br><span class="hljs-regexp">/bin/</span>tcsh<br><span class="hljs-regexp">/bin/</span>csh<br></code></pre></td></tr></table></figure><h3 id="bash和sh的关系是"><a href="#bash和sh的关系是" class="headerlink" title="bash和sh的关系是"></a>bash和sh的关系是</h3><figure class="highlight tap"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs tap">[root@Shell ~]<span class="hljs-comment"># ll /bin/ | grep bash</span><br>-rwxr-xr-x.<span class="hljs-number"> 1 </span>root root    <span class="hljs-number"> 964536 </span>4月  <span class="hljs-number"> 1 </span>2020 bash<br>lrwxrwxrwx.<span class="hljs-number"> 1 </span>root root         <span class="hljs-number"> 4 </span>9月 <span class="hljs-number"> 28 </span>07:56 sh -&gt; bash<br>软连接<br></code></pre></td></tr></table></figure><h3 id="Centos默认的解析器是bash"><a href="#Centos默认的解析器是bash" class="headerlink" title="Centos默认的解析器是bash"></a>Centos默认的解析器是bash</h3><figure class="highlight awk"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs awk">[root@Shell ~]<span class="hljs-comment"># echo $Shell</span><br><span class="hljs-regexp">/bin/</span>bash<br></code></pre></td></tr></table></figure><h2 id="Shell脚本入门"><a href="#Shell脚本入门" class="headerlink" title="Shell脚本入门"></a>Shell脚本入门</h2><h3 id="脚本格式"><a href="#脚本格式" class="headerlink" title="脚本格式"></a>脚本格式</h3><p>脚本以<span style="color:red;">#!&#x2F;bin&#x2F;bash</span>开头（指向解析器）</p><h3 id="第一个Shell脚本：helloworld"><a href="#第一个Shell脚本：helloworld" class="headerlink" title="第一个Shell脚本：helloworld"></a>第一个Shell脚本：helloworld</h3><p>需求：创建一个Shell脚本，输出helloworld</p><p>实例操作：</p><figure class="highlight autoit"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><code class="hljs autoit">[root<span class="hljs-symbol">@Shell</span> ~]<span class="hljs-meta"># mkdir datas          ---创建一个脚本文件夹</span><br>[root<span class="hljs-symbol">@Shell</span> ~]<span class="hljs-meta"># cd datas/            ---以后所有脚本放在这</span><br>[root<span class="hljs-symbol">@Shell</span> datas]<span class="hljs-meta"># touch helloworld.sh</span><br>[root<span class="hljs-symbol">@Shell</span> datas]<span class="hljs-meta"># vi helloworld.sh</span><br><span class="hljs-meta">#!/bin/bash</span><br>echo <span class="hljs-string">&quot;helloworld  严千屹&quot;</span><br>~<br>[root<span class="hljs-symbol">@Shell</span> datas]<span class="hljs-meta"># sh helloworld.sh        ---相对路径</span><br>helloworld  严千屹<br>[root<span class="hljs-symbol">@Shell</span> ~]<span class="hljs-meta"># bash datas/helloworld.sh    ---绝对路径</span><br>helloworld  严千屹<br><span class="hljs-meta">#上面都是bash和sh帮你执行脚本，脚本本身不需要执行权限。</span><br><span class="hljs-meta">#下面本质是脚本需要自己执行，所以需要执行权限</span><br>[root<span class="hljs-symbol">@Shell</span> datas]<span class="hljs-meta"># ./helloworld.sh</span><br>-bash: ./helloworld.sh: 权限不够<br>[root<span class="hljs-symbol">@shell</span> datas]<span class="hljs-meta"># chmod 777 helloworld.sh   ---给予权限</span><br>[root<span class="hljs-symbol">@shell</span> datas]<span class="hljs-meta"># ./helloworld.sh</span><br>helloworld  严千屹<br></code></pre></td></tr></table></figure><h3 id="第二个Shell脚本：多命令处理"><a href="#第二个Shell脚本：多命令处理" class="headerlink" title="第二个Shell脚本：多命令处理"></a>第二个Shell脚本：多命令处理</h3><p>需求：</p><p>在&#x2F;root&#x2F;datas&#x2F;目录下创建一个qianyi.txt,在 qianyi.txt 文件中增加“qianyios”</p><figure class="highlight tap"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><code class="hljs tap">[root@shell datas]<span class="hljs-comment"># touch qy.sh</span><br>[root@shell datas]<span class="hljs-comment"># vi qy.sh</span><br><span class="hljs-comment">#!/bin/bash</span><br>cd /root/datas/<br>touch qianyi.txt<br>echo &quot;qianyios&quot; &gt;&gt; qianyi.txt<br>[root@shell datas]<span class="hljs-comment"># bash qy.sh</span><br><span class="hljs-comment">#执行完成后会出现qianyi.txt</span><br>[root@shell datas]<span class="hljs-comment"># ll</span><br>总用量 12<br>-rwxrwxrwx<span class="hljs-number"> 1 </span>root root<span class="hljs-number"> 43 </span>1月 <span class="hljs-number"> 25 </span>17:06 helloworld.sh<br>-rw-r--r--<span class="hljs-number"> 1 </span>root root <span class="hljs-number"> 9 </span>1月 <span class="hljs-number"> 25 </span>17:22 qianyi.txt<br>-rw-r--r--<span class="hljs-number"> 1 </span>root root<span class="hljs-number"> 76 </span>1月 <span class="hljs-number"> 25 </span>17:22 qy.sh<br>[root@shell datas]<span class="hljs-comment"># cat qianyi.txt</span><br>qianyios<br></code></pre></td></tr></table></figure><h2 id="Shell中的变量"><a href="#Shell中的变量" class="headerlink" title="Shell中的变量"></a>Shell中的变量</h2><h3 id="常用的系统变量"><a href="#常用的系统变量" class="headerlink" title="常用的系统变量"></a>常用的系统变量</h3><p>​$HOME   $PWD   $SHELL  $USER等</p><h3 id="实例操作"><a href="#实例操作" class="headerlink" title="实例操作"></a>实例操作</h3><p>查看系统变量的值</p><figure class="highlight autoit"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs autoit">[root<span class="hljs-symbol">@shell</span> datas]<span class="hljs-meta"># echo $HOME</span><br>/root<br>显示家目录<br></code></pre></td></tr></table></figure><p>显示当前Shell中所有的变量：set</p><figure class="highlight makefile"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><code class="hljs makefile">[root@shell datas]<span class="hljs-comment"># set</span><br>ABRT_DEBUG_LOG=/dev/null<br>BASH=/usr/bin/bash<br>BASH_ALIASES=()<br>BASH_ARGC=()<br>BASH_ARGV=()<br>BASH_CMDS=()<br>......<br></code></pre></td></tr></table></figure><h3 id="自定义变量"><a href="#自定义变量" class="headerlink" title="自定义变量"></a>自定义变量</h3><h4 id="基本语法"><a href="#基本语法" class="headerlink" title="基本语法"></a>基本语法</h4><ol><li>定义变量：变量&#x3D;值</li><li>撤销变量：unset 变量</li><li>声明静态变量：readonly 变量   注意不能unset</li></ol><h4 id="变量定义规则"><a href="#变量定义规则" class="headerlink" title="变量定义规则"></a>变量定义规则</h4><ol><li>变量名称可以有字母，数字和下划线组成，但是不能以数字开头，<span style="color:red;">环境变量名建议全部大写</span></li><li><span style="color:red;">等号两侧不能有空格</span></li><li>在bash中，变量默认类型都是字符串类型，无法直接进行数值运算</li><li>变量的值如果有<span style="color:red;">空格</span>，需要使用双引号或单引号括起来</li></ol><h4 id="实例操作-1"><a href="#实例操作-1" class="headerlink" title="实例操作"></a>实例操作</h4><figure class="highlight mipsasm"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><code class="hljs mipsasm"><span class="hljs-comment">#自定义变量</span><br>[root@<span class="hljs-keyword">shell </span>~]<span class="hljs-comment"># QY=qianyi</span><br>[root@<span class="hljs-keyword">shell </span>~]<span class="hljs-comment"># echo $QY</span><br>qianyi<br>[root@<span class="hljs-keyword">shell </span>~]<span class="hljs-comment"># QY=&quot;qian yi&quot;</span><br>[root@<span class="hljs-keyword">shell </span>~]<span class="hljs-comment"># echo $QY</span><br>qian yi<br><br>变量为空和未定义变量是两个不同的概念<br>[root@<span class="hljs-keyword">shell </span>~]<span class="hljs-comment"># echo $age      ---未定义</span><br><br>[root@<span class="hljs-keyword">shell </span>~]<span class="hljs-comment"># age=&quot;&quot;</span><br>[root@<span class="hljs-keyword">shell </span>~]<span class="hljs-comment"># echo $age      ---已定义</span><br><br><span class="hljs-comment">#两个没办法辨认</span><br>[root@<span class="hljs-keyword">shell </span>~]<span class="hljs-comment"># set -u        ---调用为声明变量会报错</span><br>[root@<span class="hljs-keyword">shell </span>~]<span class="hljs-comment"># echo $add</span><br>-<span class="hljs-keyword">bash: </span><span class="hljs-keyword">add: </span>unbound variable<br>[root@<span class="hljs-keyword">shell </span>~]<span class="hljs-comment"># add=123</span><br>[root@<span class="hljs-keyword">shell </span>~]<span class="hljs-comment"># echo $add</span><br><span class="hljs-number">123</span><br><span class="hljs-comment">#删除变量  不需要加$add</span><br>[root@<span class="hljs-keyword">shell </span>~]<span class="hljs-comment"># echo $add</span><br><span class="hljs-number">123</span><br>[root@<span class="hljs-keyword">shell </span>~]<span class="hljs-comment"># unset add</span><br>[root@<span class="hljs-keyword">shell </span>~]<span class="hljs-comment"># echo $add</span><br>-<span class="hljs-keyword">bash: </span><span class="hljs-keyword">add: </span>unbound variable<br></code></pre></td></tr></table></figure><h3 id="环境变量"><a href="#环境变量" class="headerlink" title="环境变量"></a>环境变量</h3><ol><li>环境变量设置</li></ol><figure class="highlight clean"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs clean">[root@shell ~]# <span class="hljs-keyword">export</span> qyage=<span class="hljs-string">&quot;18&quot;</span><br>#使用<span class="hljs-keyword">export</span>声明的变量即是环境变量<br></code></pre></td></tr></table></figure><ol start="2"><li>环境变量查询  set可以查看所有变量，env只能查看环境变量</li></ol><figure class="highlight ini"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs ini"><span class="hljs-section">[root@shell ~]</span><span class="hljs-comment"># env | grep qyage</span><br><span class="hljs-attr">qyage</span>=<span class="hljs-number">18</span><br></code></pre></td></tr></table></figure><ol start="3"><li>系统默认环境变量</li></ol><figure class="highlight ini"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><code class="hljs ini"><span class="hljs-section">[root@shell ~]</span><span class="hljs-comment"># env</span><br><span class="hljs-attr">XDG_SESSION_ID</span>=<span class="hljs-number">10</span><br><span class="hljs-attr">HOSTNAME</span>=shell<br><span class="hljs-attr">TERM</span>=xterm<br><span class="hljs-attr">SHELL</span>=/bin/bash<br><span class="hljs-attr">HISTSIZE</span>=<span class="hljs-number">1000</span><br><span class="hljs-attr">qyage</span>=<span class="hljs-number">18</span><br></code></pre></td></tr></table></figure><ol start="4"><li>PATH变量：系统查找命令的路径</li></ol><p>先查询下PATH环境变量的值：</p><figure class="highlight awk"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs awk">[root@shell ~]<span class="hljs-comment"># echo $PATH</span><br><span class="hljs-regexp">/usr/</span>local<span class="hljs-regexp">/sbin:/u</span>sr<span class="hljs-regexp">/local/</span>bin:<span class="hljs-regexp">/usr/</span>sbin:<span class="hljs-regexp">/usr/</span>bin:<span class="hljs-regexp">/root/</span>bin<br><br></code></pre></td></tr></table></figure><p>  PATH 变量的值是用“:”分割的路径，这些路径就是系统查找命令的路径。也就是说当我们输入了一个程序名，如果没有写入路径，系统就会到 PATH 变量定义的路径中去寻找，是否有可以执行的程序。如果找到则执行，否则会报“命令没有发现”的错误。</p><p>  那么是不是我们把自己的脚本拷贝到 PATH 变量定义的路径中，我们自己写的脚本也可以不输入路径而直接运行呢?</p><figure class="highlight stata"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><code class="hljs stata">[root@<span class="hljs-keyword">shell</span> ~]# cp datas/helloworld.<span class="hljs-keyword">sh</span> /usr/bin/<br>[root@<span class="hljs-keyword">shell</span> ~]# helloworld.<span class="hljs-keyword">sh</span><br>helloworld  严千屹<br>[root@<span class="hljs-keyword">shell</span> ~]# <span class="hljs-keyword">rm</span> -rf /usr/bin/helloworld.<span class="hljs-keyword">sh</span><br>[root@<span class="hljs-keyword">shell</span> ~]# helloworld.<span class="hljs-keyword">sh</span><br>-bash: /usr/bin/helloworld.<span class="hljs-keyword">sh</span>: 没有那个文件或目录<br></code></pre></td></tr></table></figure><p>那么我们是不是可以修改 PATH变量的值，而不是把程序脚本复制到&#x2F;bin&#x2F;目录中。当然是可以的,我们通过变量的叠加就可以实现了:</p><figure class="highlight awk"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs awk">[root@shell ~]<span class="hljs-comment"># PATH=&quot;$PATH&quot;:/root/datas</span><br>[root@shell ~]<span class="hljs-comment"># echo $PATH</span><br><span class="hljs-regexp">/usr/</span>local<span class="hljs-regexp">/sbin:/u</span>sr<span class="hljs-regexp">/local/</span>bin:<span class="hljs-regexp">/usr/</span>sbin:<span class="hljs-regexp">/usr/</span>bin:<span class="hljs-regexp">/root/</span>bin:<span class="hljs-regexp">/root/</span>datas<br>[root@shell ~]<span class="hljs-comment"># helloworld.sh</span><br>helloworld  严千屹<br></code></pre></td></tr></table></figure><h3 id="PS1变量：命令提示符设置"><a href="#PS1变量：命令提示符设置" class="headerlink" title="PS1变量：命令提示符设置"></a>PS1变量：命令提示符设置</h3><p>PS1是一个很有意思的变量，是用来定义命令行的提示符，可以安装我们自己的需求来定义自己喜欢的提示符。PS1可以支持以下这些选项：</p><figure class="highlight livescript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><code class="hljs livescript"><span class="hljs-string">\d</span> ：<span class="hljs-comment">#代表日期，格式为weekday month date，例如：&quot;Mon Aug 1&quot;   </span><br><span class="hljs-string">\H</span> ：<span class="hljs-comment">#完整的主机名称。   </span><br><span class="hljs-string">\h</span> ：<span class="hljs-comment">#仅取主机的第一个名字。 </span><br><span class="hljs-string">\t</span> ：<span class="hljs-comment">#显示时间为24小时格式，如：HH：MM：SS   </span><br><span class="hljs-string">\T</span> ：<span class="hljs-comment">#显示时间为12小时格式   </span><br><span class="hljs-string">\A</span> ：<span class="hljs-comment">#显示时间为24小时格式：HH：MM   </span><br><span class="hljs-string">\u</span> ：<span class="hljs-comment">#当前用户的账号名称   </span><br><span class="hljs-string">\v</span> ：<span class="hljs-comment">#BASH的版本信息   </span><br><span class="hljs-string">\w</span> ：<span class="hljs-comment">#完整的工作目录名称。家目录会以 ~代替   </span><br><span class="hljs-string">\W</span> ：<span class="hljs-comment">#利用basename取得工作目录名称，所以只会列出最后一个目录 </span><br><span class="hljs-string">\#</span> ：<span class="hljs-comment">#下达的第几个命令   </span><br><span class="hljs-string">\$</span> ：<span class="hljs-comment">#提示字符，如果是root时，提示符为：# ，普通用户则为：$  </span><br></code></pre></td></tr></table></figure><figure class="highlight elixir"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs elixir">格式 <span class="hljs-title class_">PS1</span>=<span class="hljs-string">&#x27;[ ]\$ &#x27;</span>     \<span class="hljs-variable">$空</span>格<span class="hljs-string">&#x27;  有个空格  一定要单引号</span><br></code></pre></td></tr></table></figure><figure class="highlight autoit"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs autoit">[root<span class="hljs-symbol">@shell</span> ~]<span class="hljs-meta"># echo $PS1</span><br>[\u<span class="hljs-symbol">@\h</span> \W]\$<br>[root<span class="hljs-symbol">@shell</span> ~]<span class="hljs-meta"># PS1=<span class="hljs-string">&#x27;[\u@\t \w]\$ &#x27;</span></span><br>[root<span class="hljs-symbol">@20</span>:<span class="hljs-number">14</span>:<span class="hljs-number">51</span> ~]<span class="hljs-meta"># cd datas/</span><br>[root<span class="hljs-symbol">@20</span>:<span class="hljs-number">14</span>:<span class="hljs-number">54</span> ~/datas]<span class="hljs-meta">#</span><br></code></pre></td></tr></table></figure><h3 id="位置参数变量"><a href="#位置参数变量" class="headerlink" title="位置参数变量"></a>位置参数变量</h3><table><thead><tr><th>位置参数变量</th><th>作用</th></tr></thead><tbody><tr><td>$n</td><td>表示第n个参数，$1则表示第一个参数，$2表示第二个参数……如果有10以上的参数用${10}</td></tr><tr><td>$0</td><td>当前程序的名称，也就是命令本身。</td></tr><tr><td>$*</td><td>传递给程序的所有参数组成的字符串（参数）。</td></tr><tr><td>$@</td><td>以“参数1”、“参数2”……保存所有的参数。</td></tr><tr><td>$#</td><td>代表命令行中所有参数个数</td></tr><tr><td>$?</td><td>上一个代码或者Shell程序在Shell中退出的情况，如果正常退出则返回0，否则返回非0值。</td></tr><tr><td>$$</td><td>本程序的（进程ID）PID。</td></tr><tr><td>$!</td><td>上一个命令的PID。</td></tr></tbody></table><h4 id="实例操作-2"><a href="#实例操作-2" class="headerlink" title="实例操作"></a>实例操作</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><code class="hljs bash">[root@shell datas]<span class="hljs-comment"># vi count.sh</span><br><span class="hljs-comment">#!/bin/bash</span><br>a=<span class="hljs-variable">$1</span><br>b=<span class="hljs-variable">$2</span><br><span class="hljs-built_in">sum</span>=$((<span class="hljs-variable">$a</span>+<span class="hljs-variable">$b</span>))<br><span class="hljs-comment">#$((  ))双小括号才能进行数字运算，$( )运行命令</span><br><span class="hljs-built_in">echo</span> <span class="hljs-variable">$sum</span><br><span class="hljs-built_in">echo</span> <span class="hljs-variable">$0</span><br>[root@shell datas]<span class="hljs-comment"># chmod 755 count.sh</span><br>[root@shell datas]<span class="hljs-comment"># ./count.sh 22 33</span><br>55<br>./count.sh       <span class="hljs-comment">#$0输出命令本身</span><br></code></pre></td></tr></table></figure><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br></pre></td><td class="code"><pre><code class="hljs bash">[root@shell datas]<span class="hljs-comment"># vi para.sh</span><br><span class="hljs-comment">#!/bin/bash</span><br><span class="hljs-built_in">echo</span> <span class="hljs-string">&quot;\$* is $*&quot;</span><br><span class="hljs-built_in">echo</span> <span class="hljs-string">&quot;\$@ is <span class="hljs-variable">$@</span>&quot;</span><br><span class="hljs-built_in">echo</span> <span class="hljs-string">&quot;\$# is <span class="hljs-variable">$#</span>&quot;</span><br>[root@shell datas]<span class="hljs-comment"># chmod 777 para.sh</span><br>[root@shell datas]<span class="hljs-comment"># ./para.sh 11 22 33 44</span><br>$* is 11 22 33 44   <span class="hljs-comment">#&#123;11 22 33 44&#125;看成一个整体 </span><br><span class="hljs-variable">$@</span> is 11 22 33 44   <span class="hljs-comment">#&#123;11&#125;,&#123;22&#125;,&#123;33&#125;,&#123;44&#125;</span><br><span class="hljs-variable">$#</span> is 4             <span class="hljs-comment">#个数</span><br>验证过程<br>[root@shell datas]<span class="hljs-comment"># vi para2.sh</span><br><span class="hljs-comment">#!/bin/bash</span><br><span class="hljs-comment">#for循环，有多少次出现多少次</span><br><span class="hljs-keyword">for</span> i <span class="hljs-keyword">in</span>  <span class="hljs-string">&quot;$*&quot;</span><br>      <span class="hljs-keyword">do</span><br>        <span class="hljs-built_in">echo</span> <span class="hljs-variable">$i</span><br>      <span class="hljs-keyword">done</span><br><span class="hljs-built_in">echo</span> <span class="hljs-string">&quot;------------------&quot;</span><br><span class="hljs-keyword">for</span> y <span class="hljs-keyword">in</span>  <span class="hljs-string">&quot;<span class="hljs-variable">$@</span>&quot;</span><br>        <span class="hljs-keyword">do</span><br>         <span class="hljs-built_in">echo</span> <span class="hljs-variable">$y</span><br>      <span class="hljs-keyword">done</span><br>[root@shell datas]<span class="hljs-comment"># ./para2.sh 11 22 33 44</span><br>11 22 33 44             <span class="hljs-comment">#整体，循环1次</span><br>------------------<br>11                      <span class="hljs-comment">#4个，循环4次</span><br>22<br>33<br>44<br></code></pre></td></tr></table></figure><h3 id="预定义变量"><a href="#预定义变量" class="headerlink" title="预定义变量"></a>预定义变量</h3><table><thead><tr><th>$?</th><th>最后一次执行的命令的返回状态。如果这个变量的值为 0，证明上一个命令正确执行:如果这个变量的值为非 0(具体是哪个数，由命令自己来决定)，则证明上一个命令执行不正确了。</th></tr></thead><tbody><tr><td>$$</td><td>当前进程的进程号(PID)</td></tr><tr><td>$!</td><td>后台运行的最后一个进程的进程号(PID)</td></tr></tbody></table><figure class="highlight mipsasm"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><code class="hljs mipsasm">[root@<span class="hljs-keyword">shell </span>~]<span class="hljs-comment"># ls</span><br>anaconda-ks.cfg  <span class="hljs-keyword">bin </span> datas  repo.<span class="hljs-keyword">bak</span><br><span class="hljs-keyword"></span>[root@<span class="hljs-keyword">shell </span>~]<span class="hljs-comment"># echo $?</span><br><span class="hljs-number">0</span><br>[root@<span class="hljs-keyword">shell </span>~]<span class="hljs-comment"># sjkdhasjkd</span><br>-<span class="hljs-keyword">bash: </span>sjkdhasjkd: 未找到命令<br>[root@<span class="hljs-keyword">shell </span>~]<span class="hljs-comment"># echo $?</span><br><span class="hljs-number">127</span><br></code></pre></td></tr></table></figure><h2 id="read键盘接收"><a href="#read键盘接收" class="headerlink" title="read键盘接收"></a>read键盘接收</h2><h3 id="定义"><a href="#定义" class="headerlink" title="定义"></a>定义</h3><p>[root@shell datas]# read –help<br>-bash: read: –: 无效选项<br>read: 用法:   read [选项] [变量名]</p><p>read [-ers]</p><p>[-a 数组] </p><p>[-d 分隔符] </p><p>[-i 缓冲区文字] </p><p>[-n 读取字符数] </p><p>[-N 读取字符数] </p><p>[-p 提示符] </p><p>[-t 超时] </p><p>[-u 文件描述符] </p><p>[名称 …]名称指的是变量名</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><code class="hljs bash">[root@shell datas]<span class="hljs-comment"># vi count2.sh</span><br><span class="hljs-comment">#!/bin/bash</span><br><span class="hljs-built_in">read</span> -t 30 -p <span class="hljs-string">&quot;请输入第一个数字：&quot;</span> num1<br><span class="hljs-built_in">read</span> -t 30 -p <span class="hljs-string">&quot;请输入第二个数字：&quot;</span> num2<br><span class="hljs-built_in">sum</span>=$((<span class="hljs-variable">$num1</span>+<span class="hljs-variable">$num2</span>))<br><span class="hljs-built_in">echo</span> <span class="hljs-variable">$sum</span><br>[root@shell datas]<span class="hljs-comment"># chmod 777 count2.sh</span><br>[root@shell datas]<span class="hljs-comment"># ./count2.sh</span><br>请输入第一个数字：1<br>请输入第二个数字：1<br>2<br><br><br><span class="hljs-comment">#########前者需要回车，下面的不需要回车</span><br>[root@shell datas]<span class="hljs-comment"># vi count2.sh</span><br><span class="hljs-comment">#!/bin/bash</span><br><span class="hljs-built_in">read</span> -n 1 -t 30 -p <span class="hljs-string">&quot;请输入第一个数字：&quot;</span> num1   <span class="hljs-comment">#-n 1 限制输入1个字符数</span><br><span class="hljs-built_in">echo</span> -e <span class="hljs-string">&quot;\n&quot;</span><br><span class="hljs-built_in">read</span> -s -t 30 -p <span class="hljs-string">&quot;请输入第二个数字：&quot;</span> num2     <span class="hljs-comment">#-s 是隐藏</span><br><span class="hljs-built_in">echo</span> -e <span class="hljs-string">&quot;\n&quot;</span><br><span class="hljs-built_in">sum</span>=$((<span class="hljs-variable">$num1</span>+<span class="hljs-variable">$num2</span>))<br><span class="hljs-built_in">echo</span> <span class="hljs-variable">$sum</span><br>[root@shell datas]<span class="hljs-comment"># ./count2.sh</span><br>请输入第一个数字：1<br><br>请输入第二个数字：         <span class="hljs-comment">#我这里输入的是12</span><br><br>13<br></code></pre></td></tr></table></figure><h2 id="declare声明变量类型"><a href="#declare声明变量类型" class="headerlink" title="declare声明变量类型"></a>declare声明变量类型</h2><h3 id="定义-1"><a href="#定义-1" class="headerlink" title="定义"></a>定义</h3><p>既然所有变量的默认类型是字符串型，那么只要我们把变量声明为整数型不就可以运算了吗？</p><blockquote><p>-:给变量设定类型属性</p><p>+:取消变量的类型属性</p><p>-a:将变量声明为数组型</p><p>-i:将变量声明为整数型(integer)</p><p>-x:将变量声明为环境变量</p><p>-r:将变量声明为只读变量，注意，一旦设置为只读变量，既不能修改变量的值，也不能删除变量，甚至不能通过+r取消只读属性</p><p>-p:显示指定变量的被声明的类型、</p></blockquote><h3 id="声明数值进行运算"><a href="#声明数值进行运算" class="headerlink" title="声明数值进行运算"></a>声明数值进行运算</h3><figure class="highlight autoit"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><code class="hljs autoit">[root<span class="hljs-symbol">@shell</span> datas]<span class="hljs-meta"># a=1</span><br>[root<span class="hljs-symbol">@shell</span> datas]<span class="hljs-meta"># b=2</span><br>[root<span class="hljs-symbol">@shell</span> datas]<span class="hljs-meta"># c=$a+$b</span><br>[root<span class="hljs-symbol">@shell</span> datas]<span class="hljs-meta"># echo $c</span><br><span class="hljs-number">1</span>+<span class="hljs-number">2</span><br>[root<span class="hljs-symbol">@shell</span> datas]<span class="hljs-meta"># declare -i c=$a+$b      #声明整数类型才可以进行数值运行</span><br>[root<span class="hljs-symbol">@shell</span> datas]<span class="hljs-meta"># echo $c</span><br><span class="hljs-number">3</span><br></code></pre></td></tr></table></figure><h3 id="数组"><a href="#数组" class="headerlink" title="数组"></a>数组</h3><figure class="highlight autoit"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs autoit">[root<span class="hljs-symbol">@shell</span> datas]<span class="hljs-meta"># declare -a name[0]=<span class="hljs-string">&quot;qy&quot;</span>  #声明数组</span><br>[root<span class="hljs-symbol">@shell</span> datas]<span class="hljs-meta"># name[1]=<span class="hljs-string">&quot;qy1&quot;</span>   #也可以不用declare，就知道你在声明数组</span><br>[root<span class="hljs-symbol">@shell</span> datas]<span class="hljs-meta"># name[2]=<span class="hljs-string">&quot;qy2&quot;</span></span><br>[root<span class="hljs-symbol">@shell</span> datas]<span class="hljs-meta"># echo $&#123;name[*]&#125;</span><br>qy qy1 qy2<br></code></pre></td></tr></table></figure><h3 id="环境变量-1"><a href="#环境变量-1" class="headerlink" title="环境变量"></a>环境变量</h3><figure class="highlight autoit"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs autoit">两个声明变量作用一样<br>[root<span class="hljs-symbol">@shell</span> datas]<span class="hljs-meta"># export test</span><br>[root<span class="hljs-symbol">@shell</span> datas]<span class="hljs-meta"># declare -x test=<span class="hljs-string">&quot;123&quot;</span></span><br></code></pre></td></tr></table></figure><h3 id="只读属性"><a href="#只读属性" class="headerlink" title="只读属性"></a>只读属性</h3><p>注意，一旦设置为只读变量，既不能修改变量的值，也不能删除变量，甚至不能通过+r取消只读属性</p><figure class="highlight mipsasm"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><code class="hljs mipsasm">[root@<span class="hljs-keyword">shell </span>datas]<span class="hljs-comment"># declare -r test        #添加只读属性</span><br>[root@<span class="hljs-keyword">shell </span>datas]<span class="hljs-comment"># declare -p</span><br>......<br>declare -rx test=<span class="hljs-string">&quot;123&quot;</span><br>[root@<span class="hljs-keyword">shell </span>datas]<span class="hljs-comment"># echo $test</span><br><span class="hljs-number">123</span><br>[root@<span class="hljs-keyword">shell </span>datas]<span class="hljs-comment"># test=1           #无法改值</span><br>-<span class="hljs-keyword">bash: </span>test: 只读变量<br>[root@<span class="hljs-keyword">shell </span>datas]<span class="hljs-comment"># unset test        #无法删除变量</span><br>-<span class="hljs-keyword">bash: </span>unset: test: 无法反设定: 只读 variable<br>[root@<span class="hljs-keyword">shell </span>datas]<span class="hljs-comment"># declare +r test      #无法删除属性</span><br>-<span class="hljs-keyword">bash: </span>declare: test: 只读变量<br></code></pre></td></tr></table></figure><p>不过好在这个变量是命令行声明的，所以重启或重新登入，这个变量就会消失</p><h2 id="数值运算"><a href="#数值运算" class="headerlink" title="数值运算"></a>数值运算</h2><h3 id="使用expr或let数值运算工具"><a href="#使用expr或let数值运算工具" class="headerlink" title="使用expr或let数值运算工具"></a>使用expr或let数值运算工具</h3><figure class="highlight routeros"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><code class="hljs routeros">[root@shell ~]# <span class="hljs-attribute">aa</span>=11<br>[root@shell ~]# <span class="hljs-attribute">bb</span>=22<br>[root@shell ~]# <span class="hljs-attribute">dd</span>=$(expr <span class="hljs-variable">$aa</span> + <span class="hljs-variable">$bb</span>)<br>[root@shell ~]# echo <span class="hljs-variable">$dd</span><br>33<br><span class="hljs-comment">#dd的值是aa和bb的和。注意“+”号两侧比有空格</span><br><span class="hljs-comment">#如果是let呢</span><br>[root@shell ~]# let <span class="hljs-attribute">e</span>=<span class="hljs-variable">$aa</span>+$bb<br>[root@shell ~]# echo <span class="hljs-variable">$e</span><br>33<br></code></pre></td></tr></table></figure><h3 id="使用双小括号-运算式子-或-运算式子-的方式运算-（看个人习惯，看你喜欢用哪种）"><a href="#使用双小括号-运算式子-或-运算式子-的方式运算-（看个人习惯，看你喜欢用哪种）" class="headerlink" title="使用双小括号 $((运算式子))  或$[运算式子] 的方式运算 （看个人习惯，看你喜欢用哪种）"></a>使用双小括号 $((运算式子))  或$[运算式子] 的方式运算 （看个人习惯，看你喜欢用哪种）</h3><blockquote><p>区分单小括号$(  )调用的是系统命令  双小括号是计算数学运算的</p></blockquote><figure class="highlight mel"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><code class="hljs mel">[root@shell ~]# aa=<span class="hljs-number">11</span><br>[root@shell ~]# bb=<span class="hljs-number">22</span><br>[root@shell ~]# ff=$(($aa+$bb))<br>[root@shell ~]# echo $ff<br><span class="hljs-number">33</span><br>[root@shell ~]# gg=$[$aa+$bb]<br>[root@shell ~]# echo $gg<br><span class="hljs-number">33</span><br></code></pre></td></tr></table></figure><h3 id="Shell常用运算符"><a href="#Shell常用运算符" class="headerlink" title="Shell常用运算符"></a>Shell常用运算符</h3><table><thead><tr><th>优先级</th><th>运算符</th><th>说明</th></tr></thead><tbody><tr><td>13</td><td>-，+</td><td>单目负，单目正</td></tr><tr><td>12</td><td>!,~</td><td>逻辑非，按位取反或补码</td></tr><tr><td>11</td><td>*,&#x2F;,%</td><td>乘、除、取模</td></tr><tr><td>10</td><td>+,-</td><td>加、减</td></tr><tr><td>9</td><td>&lt;&lt;,&gt;&gt;</td><td>按位左移，按位右移</td></tr><tr><td>8</td><td>&lt; &#x3D; ,&gt; &#x3D; ,&lt; , &gt;</td><td>小于或等于、大于或等于、小于、大于</td></tr><tr><td>7</td><td>&#x3D;&#x3D;, !&#x3D;</td><td>等于</td></tr><tr><td>6</td><td>&amp;</td><td>按位与</td></tr><tr><td>5</td><td>^</td><td>按位异或</td></tr><tr><td>4</td><td>|</td><td>按位或</td></tr><tr><td>3</td><td>&amp;&amp;</td><td>逻辑与</td></tr><tr><td>2</td><td>||</td><td>逻辑或</td></tr><tr><td>1</td><td>&#x3D;,<em>&#x3D;,-&#x3D;,</em>&#x3D;,&#x2F;&#x3D;,%&#x3D;,&amp;&#x3D;,^&#x3D;,|&#x3D;,&lt;&lt;&#x3D;,&gt;&gt;&#x3D;</td><td>赋值，运算且赋值</td></tr></tbody></table><h3 id="取模运算"><a href="#取模运算" class="headerlink" title="取模运算"></a>取模运算</h3><figure class="highlight autoit"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs autoit">[root<span class="hljs-symbol">@shell</span> ~]<span class="hljs-meta"># bb=$((14%5))</span><br>[root<span class="hljs-symbol">@shell</span> ~]<span class="hljs-meta"># echo $bb</span><br><span class="hljs-number">4</span><br><span class="hljs-meta">#14不能被5整除，余数是4</span><br></code></pre></td></tr></table></figure><h3 id="逻辑与"><a href="#逻辑与" class="headerlink" title="逻辑与"></a>逻辑与</h3><figure class="highlight autoit"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs autoit">[root<span class="hljs-symbol">@shell</span> ~]<span class="hljs-meta"># cc=$((1&amp;&amp;0))</span><br>[root<span class="hljs-symbol">@shell</span> ~]<span class="hljs-meta"># echo $cc</span><br><span class="hljs-number">0</span><br>逻辑与运算只有想与的两边都是<span class="hljs-number">1</span>，与的结果才是<span class="hljs-number">1</span>，否则与的结果是<span class="hljs-number">0</span><br></code></pre></td></tr></table></figure><h3 id="四则运算练习"><a href="#四则运算练习" class="headerlink" title="四则运算练习"></a>四则运算练习</h3><figure class="highlight crystal"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><code class="hljs crystal">[root<span class="hljs-variable">@shell</span> ~]<span class="hljs-comment"># vi count3.sh</span><br><span class="hljs-comment">#!/bin/bash</span><br>vaule=<span class="hljs-variable">$(</span>(<span class="hljs-variable">$1</span> <span class="hljs-variable">$2</span> <span class="hljs-variable">$3</span>))<br>echo <span class="hljs-variable">$vaule</span><br>[root<span class="hljs-variable">@shell</span> ~]<span class="hljs-comment"># ./count3.sh 11 + 11</span><br><span class="hljs-number">22</span><br>[root<span class="hljs-variable">@shell</span> ~]<span class="hljs-comment"># ./count3.sh 11 / 11</span><br><span class="hljs-number">1</span><br></code></pre></td></tr></table></figure><p>但是上面会有bug不能用</p><figure class="highlight awk"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><code class="hljs awk">[root@shell datas]<span class="hljs-comment"># vi count4.sh</span><br><span class="hljs-comment">#!/bin/bash</span><br>read -t <span class="hljs-number">30</span> -p <span class="hljs-string">&quot;please input num1:&quot;</span> num1<br>read -t <span class="hljs-number">30</span> -p <span class="hljs-string">&quot;please input num2:&quot;</span> num2<br>read -n <span class="hljs-number">1</span> -t <span class="hljs-number">30</span> -p <span class="hljs-string">&quot;please inpute operato[+-*/]:&quot;</span> oper<br>echo -e “\n”<br>[ <span class="hljs-string">&quot;$oper&quot;</span> == <span class="hljs-string">&quot;+&quot;</span> ] &amp;&amp; echo <span class="hljs-string">&quot;$(($num1 + $num2))&quot;</span> &amp;&amp; <span class="hljs-keyword">exit</span><br>[ <span class="hljs-string">&quot;$oper&quot;</span> == <span class="hljs-string">&quot;-&quot;</span> ] &amp;&amp; echo <span class="hljs-string">&quot;$(($num1 - $num2))&quot;</span> &amp;&amp; <span class="hljs-keyword">exit</span><br>[ <span class="hljs-string">&quot;$oper&quot;</span> == <span class="hljs-string">&quot;*&quot;</span> ] &amp;&amp; echo <span class="hljs-string">&quot;$(($num1 * $num2))&quot;</span> &amp;&amp; <span class="hljs-keyword">exit</span><br>[ <span class="hljs-string">&quot;$oper&quot;</span> == <span class="hljs-string">&quot;/&quot;</span> ] &amp;&amp; echo <span class="hljs-string">&quot;$(($num1 / $num2))&quot;</span> &amp;&amp; <span class="hljs-keyword">exit</span><br><br>echo <span class="hljs-string">&quot;please input right oper&quot;</span><br>[空格<span class="hljs-string">&quot;$oper&quot;</span>空格==空格<span class="hljs-string">&quot;+&quot;</span>空格]<br></code></pre></td></tr></table></figure><h2 id="变量的测试与内容置换"><a href="#变量的测试与内容置换" class="headerlink" title="变量的测试与内容置换"></a>变量的测试与内容置换</h2><table><thead><tr><th>变量置换方式</th><th>变量y没有设置</th><th>变量y为空值</th><th>变量y设置值</th></tr></thead><tbody><tr><td>x&#x3D;${y-新值}</td><td>x&#x3D; 新值</td><td>x 为空</td><td>x&#x3D;$y</td></tr><tr><td>x&#x3D;${y:-新值}</td><td>x&#x3D; 新值</td><td>x&#x3D; 新值</td><td>x&#x3D;$y</td></tr><tr><td>x&#x3D;${y+新值}</td><td>x 为空</td><td>x&#x3D; 新值</td><td>x&#x3D;新值</td></tr><tr><td>x&#x3D;${y:+新值}</td><td>x 为空</td><td>x 为空</td><td>x&#x3D;新值</td></tr><tr><td>x&#x3D;${y&#x3D;新值}</td><td>x&#x3D; 新值</td><td>x 为空</td><td>x&#x3D;$y</td></tr><tr><td>同上</td><td>y&#x3D; 新值</td><td>y 值不变</td><td>y值不变</td></tr><tr><td>x&#x3D;${y:&#x3D;新值}</td><td>x&#x3D; 新值</td><td>X&#x3D; 新值</td><td>x&#x3D;$y</td></tr><tr><td>同上</td><td>y&#x3D; 新值</td><td>y&#x3D; 新值</td><td>y值不变</td></tr><tr><td>x&#x3D;${y?新值}</td><td>新值输出到标准错误输出（屏幕）</td><td>x 为空</td><td>x&#x3D;$y</td></tr><tr><td>x&#x3D;${y:?新值}</td><td>新值输出到标准错误输出</td><td>新值输出到标准错误输出</td><td>x&#x3D;$y</td></tr></tbody></table><p>假设我们要测b变量，现在b变量我们从来没有设置过</p><figure class="highlight autoit"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><code class="hljs autoit">以下可以判断变b不存在<br>[root<span class="hljs-symbol">@shell</span> ~]<span class="hljs-meta"># x=$&#123;b-new&#125;</span><br>[root<span class="hljs-symbol">@shell</span> ~]<span class="hljs-meta"># echo $x</span><br>new<br>以下可以判断是否为空<br>[root<span class="hljs-symbol">@shell</span> ~]<span class="hljs-meta"># b=<span class="hljs-string">&quot;&quot;</span></span><br>[root<span class="hljs-symbol">@shell</span> ~]<span class="hljs-meta"># x=$&#123;b-new&#125;</span><br>[root<span class="hljs-symbol">@shell</span> ~]<span class="hljs-meta"># echo $x</span><br>以下可以判断是否有值<br>[root<span class="hljs-symbol">@shell</span> ~]<span class="hljs-meta"># b=123</span><br>[root<span class="hljs-symbol">@shell</span> ~]<span class="hljs-meta"># x=$&#123;b-new&#125;</span><br>[root<span class="hljs-symbol">@shell</span> ~]<span class="hljs-meta"># echo $x</span><br><span class="hljs-number">123</span><br></code></pre></td></tr></table></figure><h2 id="环境变量配置文件"><a href="#环境变量配置文件" class="headerlink" title="环境变量配置文件"></a>环境变量配置文件</h2><p>1、让环境变量生效的命令  source 配置文件  或  . 配置文件</p><p>2、环境变量配置文件</p><p>登录时生效的环境变量配置文件</p><p>在 Linux 系统登录时主要生效的环境变量配置文件有以下五个:</p><p>&#x2F;etc&#x2F;profile</p><p>&#x2F;etc&#x2F;profile.d&#x2F;*.sh</p><p>&#x2F;etc&#x2F;bashrc</p><p>~&#x2F;.bash_profile</p><p>~&#x2F;.bashrc</p><p>写在前三个的配置文件对所有用户生效，写在最后两个对当前用户生效</p><h2 id="基础正则"><a href="#基础正则" class="headerlink" title="基础正则"></a>基础正则</h2><p>基础正则表达式</p><table><thead><tr><th>元字符</th><th align="left">作用</th></tr></thead><tbody><tr><td>*</td><td align="left">前一个字符匹配 0 次或任意多次。</td></tr><tr><td>.</td><td align="left">匹配除了换行符外任意一个字符。</td></tr><tr><td>^</td><td align="left">匹配行首。例如：^hello 会匹配以 hello 开头的行。</td></tr><tr><td>$</td><td align="left">匹配行尾。例如：hello&amp;会匹配以 hello 结尾的行。</td></tr><tr><td>[]</td><td align="left">匹配中括号中指定的任意一个字符，只匹配一个字符。例如：[aoeiu] 匹配任意一个元音字母，[0-9] 匹配任意一位数字，[a-z][0-9]匹配小写字和一位数字构成的两位字符。</td></tr><tr><td>[^]</td><td align="left">匹配除中括号的字符以外的任意一个字符。例如：[^0-9] 匹配任意一位非数字字符，[^a-z] 表示任意一位非小写字母。</td></tr><tr><td>\</td><td align="left">转义符。用于取消讲特殊符号的含义取消。</td></tr><tr><td>{n}</td><td align="left">表示其前面的字符恰好出现 n 次。例如：[0-9]{4} 匹配 4 位数字，[1][3-8][0-9]{9} 匹配手机号码。</td></tr><tr><td>{n,}</td><td align="left">表示其前面的字符出现不小于 n 次。例如： [0-9]{2,} 表示两位及以上的数字。</td></tr><tr><td>{n,m}</td><td align="left">表示其前面的字符至少出现n 次，最多出现m 次。例如：[a-z]{6,8}匹配 6 到 8 位的小写字母。</td></tr></tbody></table><h3 id="x2F-bashrc-文件中建立这个别名："><a href="#x2F-bashrc-文件中建立这个别名：" class="headerlink" title="~&#x2F;.bashrc 文件中建立这个别名："></a>~&#x2F;.bashrc 文件中建立这个别名：</h3><p>实现grep能显示颜色</p><figure class="highlight arcade"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs arcade">echo <span class="hljs-string">&quot;alias grep=\&#x27;grep --color=auto\&#x27;&quot;</span> &gt;&gt; <span class="hljs-regexp">/root/</span>.bashrc <br></code></pre></td></tr></table></figure><p>建立练习文档</p><figure class="highlight stata"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><code class="hljs stata">[root@<span class="hljs-keyword">shell</span> datas]# vi <span class="hljs-keyword">test</span>.txt<br>Mr. <span class="hljs-keyword">Li</span> Ming said:<br><span class="hljs-keyword">he</span> was the most honest <span class="hljs-keyword">man</span>.<br>123despise him.<br>google<br>gooooogle<br>ggle<br>gogle<br>soooooid<br>But since Mr. shen Chao came, <span class="hljs-keyword">he</span> never saaaid those words. 5555nice!<br>because,actuaaaally,<br>Mr. Shen Chao is the most honest <span class="hljs-keyword">man</span><br>Later,Mr. <span class="hljs-keyword">Li</span> ming soid his hot body.<br>hello is<br>hello was<br></code></pre></td></tr></table></figure><p>练习*号</p><figure class="highlight mipsasm"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><code class="hljs mipsasm"><span class="hljs-comment"># a*意思是最少包含0个a或无数个a</span><br>[root@<span class="hljs-keyword">shell </span>datas]<span class="hljs-comment"># grep &quot;a*&quot; test.txt</span><br>Mr. Li Ming said:<br>he was the most honest man.<br><span class="hljs-number">123</span>despise him.<br><span class="hljs-keyword">But </span>since Mr. <span class="hljs-keyword">shen </span>Chao came, he never saaaid those words. <span class="hljs-number">5555</span>nice!<br><span class="hljs-keyword">because,actuaaaally,</span><br><span class="hljs-keyword"></span>Mr. <span class="hljs-keyword">Shen </span>Chao is the most honest man<br>Later,Mr. Li ming soid his hot <span class="hljs-keyword">body.</span><br><span class="hljs-keyword"></span><br><span class="hljs-comment"># aa*意思是最少包含1个a或无数个a</span><br>[root@<span class="hljs-keyword">shell </span>datas]<span class="hljs-comment"># grep &quot;aa*&quot; test.txt</span><br>Mr. Li Ming said:<br>he was the most honest man.<br><span class="hljs-keyword">But </span>since Mr. <span class="hljs-keyword">shen </span>Chao came, he never saaaid those words. <span class="hljs-number">5555</span>nice!<br><span class="hljs-keyword">because,actuaaaally,</span><br><span class="hljs-keyword"></span>Mr. <span class="hljs-keyword">Shen </span>Chao is the most honest man<br>Later,Mr. Li ming soid his hot <span class="hljs-keyword">body.</span><br><span class="hljs-keyword"></span><br><span class="hljs-comment"># aaa*意思是最少包含2个a或无数个a</span><br>[root@<span class="hljs-keyword">shell </span>datas]<span class="hljs-comment"># grep &quot;aaa*&quot; test.txt</span><br><span class="hljs-keyword">But </span>since Mr. <span class="hljs-keyword">shen </span>Chao came, he never saaaid those words. <span class="hljs-number">5555</span>nice!<br><span class="hljs-keyword">because,actuaaaally,</span><br><span class="hljs-keyword"></span><br>grep <span class="hljs-string">&quot;a&quot;</span> count4.<span class="hljs-keyword">sh </span>  也行<br><br></code></pre></td></tr></table></figure><p>练习 . 号   正则表达式“.”只能匹配一个字符，这个字符可以是任意字符</p><figure class="highlight stata"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs stata">[root@<span class="hljs-keyword">shell</span> datas]# grep <span class="hljs-string">&quot;s..d&quot;</span> <span class="hljs-keyword">test</span>.txt<br>Mr. <span class="hljs-keyword">Li</span> Ming said:<br>Later,Mr. <span class="hljs-keyword">Li</span> ming soid his hot body.<br></code></pre></td></tr></table></figure><p>[root@shell datas]# grep “s.*d” test.txt<br>Mr. Li Ming <strong>said</strong>:<br>But <strong>since Mr. shen Chao came, he never saaaid those word</strong>s. 5555nice!<br>Later,Mr. Li ming <strong>soid his hot bod</strong>y.</p><p>“[]”会匹配中括号中指定任意一个字符，注意只能匹配一个字符。比如[ao]要不会匹配一个 a</p><p>字符，要不会匹配一个 o 字符：</p><figure class="highlight stata"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><code class="hljs stata">[root@<span class="hljs-keyword">shell</span> datas]# grep <span class="hljs-string">&quot;s[ao]id&quot;</span> <span class="hljs-keyword">test</span>.txt<br>Mr. <span class="hljs-keyword">Li</span> Ming said:<br>Later,Mr. <span class="hljs-keyword">Li</span> ming soid his hot body.<br>[root@<span class="hljs-keyword">shell</span> datas]# grep <span class="hljs-string">&quot;[0-9]&quot;</span> <span class="hljs-keyword">test</span>.txt<br>123despise him.<br>But since Mr. shen Chao came, <span class="hljs-keyword">he</span> never saaaid those words. 5555nice!<br></code></pre></td></tr></table></figure><h2 id="扩展正则"><a href="#扩展正则" class="headerlink" title="扩展正则"></a>扩展正则</h2><table><thead><tr><th>扩展元字符</th><th>作用</th></tr></thead><tbody><tr><td>+</td><td>前一个字符匹配 1 次或任意多次。如“go+gle”会匹配“gogle”、“google”或“gooogle”，当然如果“o”有更多个，也能匹配。</td></tr><tr><td>？</td><td>前一个字符匹配 0 次或 1 次。如“colou?r”可以匹配“colour”或“color”。</td></tr><tr><td>|</td><td>匹配两个或多个分支选择。如“was|his”会匹配既包含“was”的行，也匹配包含“his”的行。</td></tr><tr><td>（）</td><td>匹配其整体为一个字符，即模式单元。可以理解为由多个单个字符组成的大字符。<br />如“(dog)+”会匹配“dog”、“dogdog”、“dogdogdog”等，因为被（）包含的字符会当成一个整体。但“hello （world|earth）”会匹配“hello world”及“hello earth”。</td></tr></tbody></table><h2 id="grep-参数列表"><a href="#grep-参数列表" class="headerlink" title="grep 参数列表"></a>grep 参数列表</h2><ol><li><code>-i</code> : 忽略大小写</li><li><code>-v</code> : 查找不包含指定字符串的所有行（取反）</li><li><code>-r</code> : 递归查找文件夹下的文件</li><li><code>-n</code> : 显示匹配行所在位置（行号）</li><li><code>-l</code> : 只显示包含搜索字符串的文件名，而非每个匹配行</li><li><code>-c</code> : 统计符合条件的行数</li><li><code>-e pattern</code> : 指定要查找的正则表达式模式</li><li><code>-w</code> : 匹配整个单词，即只匹配独立的单词而非单词内的字符</li><li><code>-A num</code> : 输出匹配行后 N 行内容</li><li><code>-B num</code> : 输出匹配行前 N 行内容</li><li><code>-C[num]</code> 或者 <code>--context[=num]</code>: 输出匹配行前后总共 N 行内容。</li><li><code>--exclude</code> : 排除指定文件类型，多个文件类型用 “,” 隔开</li></ol><figure class="highlight vim"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><code class="hljs vim">[root@localhost <span class="hljs-keyword">sh</span>]# <span class="hljs-keyword">grep</span> -E <span class="hljs-string">&quot;go*gle&quot;</span> test.txt<br>google<br>gooooogle<br>ggle<br>gogle<br>[root@localhost <span class="hljs-keyword">sh</span>]# <span class="hljs-keyword">grep</span> -E <span class="hljs-string">&quot;go+gle&quot;</span> test.txt<br>google<br>gooooogle<br>gogle<br>[root@localhost <span class="hljs-keyword">sh</span>]# <span class="hljs-keyword">grep</span> -E <span class="hljs-string">&quot;go?gle&quot;</span> test.txt<br>ggle<br>gogle<br>[root@localhost <span class="hljs-keyword">sh</span>]# <span class="hljs-keyword">grep</span> -E <span class="hljs-string">&quot;go+&quot;</span> test.txt<br>google<br>gooooogle<br>gogle<br>[root@localhost <span class="hljs-keyword">sh</span>]# <span class="hljs-keyword">grep</span> -E <span class="hljs-string">&quot;g(oo)+&quot;</span> test.txt<br>google<br>gooooogle<br>[root@localhost <span class="hljs-keyword">sh</span>]# <span class="hljs-keyword">grep</span> -E <span class="hljs-string">&quot;g(ooo)+&quot;</span> test.txt<br>gooooogle<br>[root@localhost <span class="hljs-keyword">sh</span>]# <span class="hljs-keyword">grep</span> -E <span class="hljs-string">&quot;hello (was|is)&quot;</span> test.txt<br>hello <span class="hljs-keyword">is</span><br>hello was<br><br></code></pre></td></tr></table></figure><p>匹配邮箱</p><figure class="highlight inform7"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs inform7">grep -E <span class="hljs-string">&quot;<span class="hljs-subst">[0-9a-zA-Z_]</span>+@<span class="hljs-subst">[0-9a-zA-Z_]</span>+(\.<span class="hljs-subst">[0-9a-zA-Z_]</span>+)&#123;1,3&#125;&quot;</span> test.txt<br></code></pre></td></tr></table></figure><h2 id="字符截取和替换命令"><a href="#字符截取和替换命令" class="headerlink" title="字符截取和替换命令"></a>字符截取和替换命令</h2><figure class="highlight excel"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs excel">[root@localhost ~]# cut [选项] 文件名选项：<br>-f 列号：          提取第几列<br>-d 分隔符：     按照指定分隔符分割列<br>-c 字符范围：    不依赖分隔符来区分列，而是通过字符范围（行首为 <span class="hljs-number">0</span>）来进行字段提取。“<span class="hljs-built_in">n</span>-”表示从第 <span class="hljs-built_in">n</span> 个字符到行尾；“<span class="hljs-built_in">n</span>-m”从第 <span class="hljs-built_in">n</span> 个字符到第 m个字符；“-m”表示从第 <span class="hljs-number">1</span> 个字符到第 m 个字符。<br></code></pre></td></tr></table></figure><p>测试文件</p><figure class="highlight stata"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><code class="hljs stata">[root@localhost ~]# <span class="hljs-keyword">cat</span> student.txt<br>ID      Name    gender  <span class="hljs-keyword">Mark</span><br>1       Liming  <span class="hljs-keyword">M</span>       86<br>2       <span class="hljs-keyword">Sc</span>      <span class="hljs-keyword">M</span>       90<br>3       Tg      <span class="hljs-keyword">M</span>       83<br>用<span class="hljs-keyword">tab</span>键隔开所有列，不要空格<br></code></pre></td></tr></table></figure><p>测试</p><figure class="highlight autoit"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><code class="hljs autoit">[root<span class="hljs-symbol">@localhost</span> ~]<span class="hljs-meta"># cut -f 2 student.txt</span><br>Name<br>Liming<br>Sc<br>Tg<br><span class="hljs-meta">#提取多列</span><br>[root<span class="hljs-symbol">@localhost</span> ~]<span class="hljs-meta"># cut -f 2,3 student.txt</span><br>Name    gender<br>Liming  M<br>Sc        M<br>Tg       M<br><span class="hljs-meta">##cut 可以按照字符进行提取，需要注意“8-”代表的是提取所有行的第八个字符开始到行尾，而 “10-20”代表提取所有行的第十个字符到第二十个字符，而“-8”代表提取所有行从行首到第八个</span><br>字符：<br>[root<span class="hljs-symbol">@localhost</span> ~]<span class="hljs-meta"># cut -c 9- student.txt</span><br>gender Mark<br> M <span class="hljs-number">86</span><br><span class="hljs-number">0</span><br><span class="hljs-number">3</span><br>[root<span class="hljs-symbol">@localhost</span> ~]<span class="hljs-meta"># cut -c -9 student.txt</span><br>ID Name g<br><span class="hljs-number">1</span> Liming<br><span class="hljs-number">2</span> Sc M <span class="hljs-number">90</span><br><span class="hljs-number">3</span> Tg M <span class="hljs-number">83</span><br><br></code></pre></td></tr></table></figure><h2 id="awk编程"><a href="#awk编程" class="headerlink" title="awk编程"></a>awk编程</h2><h3 id="printf-格式化输出"><a href="#printf-格式化输出" class="headerlink" title="printf 格式化输出"></a>printf 格式化输出</h3><figure class="highlight livescript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><code class="hljs livescript">[root@localhost ~]<span class="hljs-comment"># printf ‘输出类型输出格式’ 输出内容输出类型：</span><br>%ns：输出字符串。n 是数字指代输出几个字符<br>%ni：输出整数。n 是数字指代输出几个数字<br>%m.nf：输出浮点数。m 和 n 是数字，指代输出的整数位数和小数位数。如%<span class="hljs-number">8.2f</span>代表  共输出 <span class="hljs-number">8</span> 位数，其中 <span class="hljs-number">2</span> 位是小数，<span class="hljs-number">6</span> 位是整数。<br>输出格式：<br><span class="hljs-string">\a:</span>输出警告声音<br><span class="hljs-string">\b:</span>输出退格键，也就是 Backspace 键<br><span class="hljs-string">\f:</span>清除屏幕<br><span class="hljs-string">\n:</span>换行<br><span class="hljs-string">\r:</span>回车，也就是 Enter 键<br><span class="hljs-string">\t:</span>水平输出退格键，也就是 Tab 键<br><span class="hljs-string">\v:</span>垂直输出退格键，也就是 Tab 键<br></code></pre></td></tr></table></figure><p>建立测试文件</p><figure class="highlight apache"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs apache"><span class="hljs-attribute">vi</span> student.txt<br><span class="hljs-attribute">ID</span>       Name    PHP     Linux   MySQL   Average<br><span class="hljs-attribute">1</span>        Liming   <span class="hljs-number">82</span>      <span class="hljs-number">95</span>      <span class="hljs-number">86</span>      <span class="hljs-number">87</span>.<span class="hljs-number">66</span><br><span class="hljs-attribute">2</span>        Sc        <span class="hljs-number">74</span>      <span class="hljs-number">96</span>      <span class="hljs-number">87</span>      <span class="hljs-number">85</span>.<span class="hljs-number">66</span><br><span class="hljs-attribute">3</span>        Tg        <span class="hljs-number">99</span>      <span class="hljs-number">83</span>      <span class="hljs-number">93</span>      <span class="hljs-number">91</span>.<span class="hljs-number">66</span><br></code></pre></td></tr></table></figure><p>不指定格式输出</p><figure class="highlight autoit"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs autoit">[root<span class="hljs-symbol">@localhost</span> ~]<span class="hljs-meta"># printf <span class="hljs-string">&#x27;%s&#x27;</span> $(cat student.txt)</span><br>IDNamePHPLinuxMySQLAverage1Liming82958687<span class="hljs-number">.662</span>Sc74968785<span class="hljs-number">.663</span>Tg99839391<span class="hljs-number">.66</span><br><span class="hljs-meta">#乱作一锅粥</span><br></code></pre></td></tr></table></figure><p>指定格式输出</p><figure class="highlight tap"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><code class="hljs tap">[root@localhost ~]<span class="hljs-comment"># printf &#x27;%s\t %s\t %s\t %s\t %s\t %s\t \n&#x27; $(cat student.txt)</span><br>ID       Name    PHP     Linux   MySQL   Average<br>1        Liming <span class="hljs-number"> 82 </span>    <span class="hljs-number"> 95 </span>    <span class="hljs-number"> 86 </span>     87.66<br>2        Sc     <span class="hljs-number"> 74 </span>    <span class="hljs-number"> 96 </span>    <span class="hljs-number"> 87 </span>     85.66<br>3        Tg     <span class="hljs-number"> 99 </span>    <span class="hljs-number"> 83 </span>    <span class="hljs-number"> 93 </span>     91.66<br><br></code></pre></td></tr></table></figure><h3 id="awk条件"><a href="#awk条件" class="headerlink" title="awk条件"></a>awk条件</h3><figure class="highlight autoit"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs autoit">[root<span class="hljs-symbol">@localhost</span> ~]<span class="hljs-meta"># awk <span class="hljs-string">&#x27;条件 1&#123;动作 1&#125; 条件 2&#123;动作 2&#125;…&#x27;</span> 文件名</span><br></code></pre></td></tr></table></figure><p>awk条件（Pattern）</p><p>一般使用关系表达式作为条件。这些关系表达式非常多，具体参考表 12-3 所示，例如：</p><p>x &gt; 10 判断变量 x 是否大于 10</p><p>x &#x3D;&#x3D; y 判断变量 x 是否等于变量 y</p><p>A ~ B判断字符串 A 中是否包含能匹配 B 表达式的子字符串</p><p>A !~ B 判断字符串 A 中是否不包含能匹配 B 表达式的子字符串</p><p>动作（Action）：</p><p>格式化输出 流程控制语句</p><p><img src="https://article.biliimg.com/bfs/article/57f292fedf7e7b7ceb599cccdb255538697559838.png" alt="image-20230421143849290"></p><p>awk内置变量</p><p><img src="https://article.biliimg.com/bfs/article/410b4572908efc8661fd16142121fa95697559838.png" alt="image-20230421190306772"></p><p>例子：</p><figure class="highlight swift"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs swift">[root<span class="hljs-meta">@localhost</span> <span class="hljs-operator">~</span>]# awk &#x27;&#123;printf <span class="hljs-variable">$2</span> <span class="hljs-string">&quot;<span class="hljs-subst">\t</span>&quot;</span> <span class="hljs-variable">$6</span> <span class="hljs-string">&quot;<span class="hljs-subst">\n</span>&quot;</span>&#125;&#x27; student.txt<br>#输出第二列和第六列<br></code></pre></td></tr></table></figure><figure class="highlight gradle"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><code class="hljs gradle">假设我要提取根分区<span class="hljs-regexp">/dev/</span>sda1 第五列的使用率<br>[root@localhost ~]# df -h<br>Filesystem               <span class="hljs-keyword">Size</span>  Used Avail Use% Mounted on<br>devtmpfs                 <span class="hljs-number">475</span>M     <span class="hljs-number">0</span>  <span class="hljs-number">475</span>M   <span class="hljs-number">0</span>% /dev<br>tmpfs                    <span class="hljs-number">487</span>M     <span class="hljs-number">0</span>  <span class="hljs-number">487</span>M   <span class="hljs-number">0</span>% <span class="hljs-regexp">/dev/</span>shm<br>tmpfs                    <span class="hljs-number">487</span>M  <span class="hljs-number">7.7</span>M  <span class="hljs-number">479</span>M   <span class="hljs-number">2</span>% /run<br>tmpfs                    <span class="hljs-number">487</span>M     <span class="hljs-number">0</span>  <span class="hljs-number">487</span>M   <span class="hljs-number">0</span>% <span class="hljs-regexp">/sys/</span>fs/cgroup<br><span class="hljs-regexp">/dev/m</span>apper<span class="hljs-regexp">/centos-root   50G  1.5G   49G   3% /</span><br><span class="hljs-regexp">/dev/m</span>apper<span class="hljs-regexp">/centos-home   47G   33M   47G   1% /</span>home<br><span class="hljs-regexp">/dev/</span>sda1               <span class="hljs-number">1014</span>M  <span class="hljs-number">141</span>M  <span class="hljs-number">874</span>M  <span class="hljs-number">14</span>% /boot<br>tmpfs                     <span class="hljs-number">98</span>M     <span class="hljs-number">0</span>   <span class="hljs-number">98</span>M   <span class="hljs-number">0</span>% <span class="hljs-regexp">/run/u</span>ser/<span class="hljs-number">0</span><br>[root@localhost ~]# df -h | <span class="hljs-keyword">grep</span> <span class="hljs-string">&quot;/dev/sda1&quot;</span>| awk <span class="hljs-string">&#x27;&#123;print $5&#125;&#x27;</span>| cut -d <span class="hljs-string">&quot;%&quot;</span> -f <span class="hljs-number">1</span><br><span class="hljs-number">14</span><br></code></pre></td></tr></table></figure><p>Begin</p><figure class="highlight swift"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><code class="hljs swift">[root<span class="hljs-meta">@localhost</span> <span class="hljs-operator">~</span>]# awk &#x27;<span class="hljs-type">BEGIN</span>&#123;printf <span class="hljs-string">&quot;11111111<span class="hljs-subst">\n</span>&quot;</span> &#125; &#123;printf <span class="hljs-variable">$2</span> <span class="hljs-string">&quot;<span class="hljs-subst">\t</span>&quot;</span> <span class="hljs-variable">$6</span> <span class="hljs-string">&quot;<span class="hljs-subst">\n</span>&quot;</span>&#125;&#x27; student.txt<br><span class="hljs-number">11111111</span><br><span class="hljs-type">Name</span>    <span class="hljs-type">Average</span><br><span class="hljs-type">Liming</span>  <span class="hljs-number">87.66</span><br><span class="hljs-type">Sc</span>      <span class="hljs-number">85.66</span><br><span class="hljs-type">Tg</span>      <span class="hljs-number">91.66</span><br></code></pre></td></tr></table></figure><p>End</p><figure class="highlight swift"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><code class="hljs swift">[root<span class="hljs-meta">@localhost</span> <span class="hljs-operator">~</span>]# awk &#x27;<span class="hljs-type">END</span>&#123;printf <span class="hljs-string">&quot;111111111<span class="hljs-subst">\n</span>&quot;</span> &#125; &#123;printf <span class="hljs-variable">$2</span> <span class="hljs-string">&quot;<span class="hljs-subst">\t</span>&quot;</span> <span class="hljs-variable">$6</span> <span class="hljs-string">&quot;<span class="hljs-subst">\n</span>&quot;</span>&#125;&#x27; student.txt<br><span class="hljs-type">Name</span>    <span class="hljs-type">Average</span><br><span class="hljs-type">Liming</span>  <span class="hljs-number">87.66</span><br><span class="hljs-type">Sc</span>      <span class="hljs-number">85.66</span><br><span class="hljs-type">Tg</span>      <span class="hljs-number">91.66</span><br><span class="hljs-number">111111111</span><br></code></pre></td></tr></table></figure><p>假设我想看看平均成绩大于等于 87 分的学员是谁</p><figure class="highlight tap"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><code class="hljs tap">[root@localhost ~]<span class="hljs-comment"># cat student.txt</span><br>ID      Name    PHP     Linux   MySQL   Average<br>1       Liming <span class="hljs-number"> 82 </span>    <span class="hljs-number"> 95 </span>    <span class="hljs-number"> 86 </span>     87.66<br>2       Sc     <span class="hljs-number"> 74 </span>    <span class="hljs-number"> 96 </span>    <span class="hljs-number"> 87 </span>     85.66<br>3       Tg     <span class="hljs-number"> 99 </span>    <span class="hljs-number"> 83 </span>    <span class="hljs-number"> 93 </span>     91.66<br>[root@localhost ~]<span class="hljs-comment"># cat student.txt | grep -v &quot;Name&quot; | awk &#x27;$6 &gt;= 87&#123;print $2&#125;&#x27;</span><br>Liming<br>Tg<br><br></code></pre></td></tr></table></figure><blockquote><p>加入了条件之后，只有条件成立动作才会执行，如果条件不满足，则动作则不运行。通过这个实验，大家可以发现，虽然 awk 是列提取命令，但是也要按行来读入的。这个命令的执行过程是这样的：</p><p>1） 如果有 BEGIN 条件，则先执行 BEGIN 定义的动作</p><p>2） 如果没有 BEGIN 条件，则读入第一行，把第一行的数据依次赋予$0、$1、$2 等变量。其中$0代表此行的整体数据，$1 代表第一字段，$2 代表第二字段。</p><p>3） 依据条件类型判断动作是否执行。如果条件符合，则执行动作，否则读入下一行数据。如果没有条件，则每行都执行动作。</p><p>4） 读入下一行数据，重复执行以上步骤。</p></blockquote><figure class="highlight swift"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs swift">例子 <span class="hljs-number">2</span>：<br>[root<span class="hljs-meta">@localhost</span> <span class="hljs-operator">~</span>]# awk &#x27;<span class="hljs-variable">$2</span> <span class="hljs-operator">~</span> <span class="hljs-operator">/</span><span class="hljs-type">Sc</span><span class="hljs-operator">/</span> &#123;printf <span class="hljs-variable">$6</span> <span class="hljs-string">&quot;<span class="hljs-subst">\n</span>&quot;</span>&#125;&#x27; student.txt<br>#如果第二字段中输入包含有“<span class="hljs-type">Sc</span>”字符，则打印第六字段数据<br><span class="hljs-number">85.66</span><br></code></pre></td></tr></table></figure><p>这里要注意在 awk 中，使用“&#x2F;&#x2F;”包含的字符串，awk 命令才会查找。也就是说字符串必须用“&#x2F;&#x2F;”包含，awk 命令才能正确识别。<br>如果要想让 awk 识别字符串，必须使用“&#x2F;&#x2F;”包含，例如：</p><figure class="highlight tap"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs tap">[root@localhost ~]<span class="hljs-comment"># awk &#x27;/Liming/ &#123;print&#125;&#x27; student.txt</span><br>1       Liming <span class="hljs-number"> 82 </span>    <span class="hljs-number"> 95 </span>    <span class="hljs-number"> 86 </span>     87.66<br><span class="hljs-comment">#打印 Liming 的成绩</span><br></code></pre></td></tr></table></figure><p>当使用 df 命令查看分区使用情况是，如果我只想查看真正的系统分区的使用状况，而不想查看光盘和临时分区的使用状况，则可以：</p><figure class="highlight swift"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs swift">[root<span class="hljs-meta">@localhost</span> <span class="hljs-operator">~</span>]# df <span class="hljs-operator">-</span>h <span class="hljs-operator">|</span> awk &#x27;<span class="hljs-operator">/</span>sda[<span class="hljs-number">0</span><span class="hljs-operator">-</span><span class="hljs-number">9</span>]<span class="hljs-operator">/</span> &#123;printf <span class="hljs-variable">$1</span> <span class="hljs-string">&quot;<span class="hljs-subst">\t</span>&quot;</span> <span class="hljs-variable">$5</span> <span class="hljs-string">&quot;<span class="hljs-subst">\n</span>&quot;</span>&#125; &#x27;<br><span class="hljs-operator">/</span>dev<span class="hljs-operator">/</span>sda1       <span class="hljs-number">14</span><span class="hljs-operator">%</span><br>#查询包含有 sda 数字的行，并打印第一字段和第五字段<br></code></pre></td></tr></table></figure><p>查看&#x2F;etc&#x2F;passwd文件</p><figure class="highlight ruby"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><code class="hljs ruby">[root<span class="hljs-variable">@localhost</span> ~]<span class="hljs-comment"># useradd user1</span><br>[root<span class="hljs-variable">@localhost</span> ~]<span class="hljs-comment"># useradd user2</span><br>[root<span class="hljs-variable">@localhost</span> ~]<span class="hljs-comment"># cat /etc/passwd | grep &quot;/bin/bash&quot;</span><br><span class="hljs-symbol">root:</span><span class="hljs-symbol">x:</span><span class="hljs-number">0</span><span class="hljs-symbol">:</span><span class="hljs-number">0</span><span class="hljs-symbol">:root</span><span class="hljs-symbol">:/root</span><span class="hljs-symbol">:/bin/bash</span><br><span class="hljs-symbol">user1:</span><span class="hljs-symbol">x:</span><span class="hljs-number">1000</span><span class="hljs-symbol">:</span><span class="hljs-number">1000</span><span class="hljs-symbol">:</span><span class="hljs-symbol">:/home/user1</span><span class="hljs-symbol">:/bin/bash</span><br><span class="hljs-symbol">user2:</span><span class="hljs-symbol">x:</span><span class="hljs-number">1001</span><span class="hljs-symbol">:</span><span class="hljs-number">1001</span><span class="hljs-symbol">:</span><span class="hljs-symbol">:/home/user2</span><span class="hljs-symbol">:/bin/bash</span><br>[root<span class="hljs-variable">@localhost</span> ~]<span class="hljs-comment"># cat /etc/passwd | grep &quot;/bin/bash&quot; |  awk &#x27;&#123;FS=&quot;:&quot;&#125; &#123;print $1&#125;&#x27;</span><br><span class="hljs-symbol">root:</span><span class="hljs-symbol">x:</span><span class="hljs-number">0</span><span class="hljs-symbol">:</span><span class="hljs-number">0</span><span class="hljs-symbol">:root</span><span class="hljs-symbol">:/root</span><span class="hljs-symbol">:/bin/bash</span><br>user1<br>user2<br><span class="hljs-comment">#第一行root好像没有以冒号为分割读取第一列</span><br>是因为awk 先把第一行数据读取了<br>才进行&#123;<span class="hljs-variable constant_">FS</span>=<span class="hljs-string">&quot;:&quot;</span>&#125;<br>直到上一步之后，才发现要以冒号作为分隔符<br>后面的user1 user2 才正常<br><span class="hljs-comment">###所以正确写法是BEGIN &#123;FS=&quot;:&quot;&#125;  在读取数据之前，先执行&#123;FS=&quot;:&quot;&#125;</span><br>[root<span class="hljs-variable">@localhost</span> ~]<span class="hljs-comment"># cat /etc/passwd | grep &quot;/bin/bash&quot; |  awk &#x27;BEGIN &#123;FS=&quot;:&quot;&#125; &#123;print $1&#125;&#x27;</span><br>root<br>user1<br>user2<br></code></pre></td></tr></table></figure><figure class="highlight swift"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs swift">[root<span class="hljs-meta">@localhost</span> <span class="hljs-operator">~</span>]# cat <span class="hljs-operator">/</span>etc<span class="hljs-operator">/</span>passwd <span class="hljs-operator">|</span> grep <span class="hljs-string">&quot;/bin/bash&quot;</span> <span class="hljs-operator">|</span> awk &#x27;<span class="hljs-type">BEGIN</span>&#123;<span class="hljs-type">FS</span><span class="hljs-operator">=</span><span class="hljs-string">&quot;:&quot;</span>&#125; <span class="hljs-variable">$3</span><span class="hljs-operator">==</span><span class="hljs-string">&quot;1000&quot;</span> &#123;print <span class="hljs-variable">$1</span>&#125;&#x27;<br>user1<br>判断是否相等 要用双＝号<br></code></pre></td></tr></table></figure><figure class="highlight swift"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><code class="hljs swift">[root<span class="hljs-meta">@localhost</span> <span class="hljs-operator">~</span>]# cat <span class="hljs-operator">/</span>etc<span class="hljs-operator">/</span>passwd <span class="hljs-operator">|</span> grep <span class="hljs-string">&quot;/bin/bash&quot;</span> <span class="hljs-operator">|</span> \<br><span class="hljs-operator">&gt;</span> awk &#x27;<span class="hljs-type">BEGIN</span> &#123;<span class="hljs-type">FS</span><span class="hljs-operator">=</span><span class="hljs-string">&quot;:&quot;</span>&#125; &#123;printf <span class="hljs-variable">$1</span> <span class="hljs-string">&quot;<span class="hljs-subst">\t</span>&quot;</span> <span class="hljs-variable">$3</span> <span class="hljs-string">&quot;<span class="hljs-subst">\t</span> 行号：&quot;</span> <span class="hljs-type">NR</span> <span class="hljs-string">&quot;<span class="hljs-subst">\t</span> 字段数：&quot;</span> <span class="hljs-type">NF</span> <span class="hljs-string">&quot;<span class="hljs-subst">\n</span>&quot;</span>&#125;&#x27;<br>root    <span class="hljs-number">0</span>        行号：<span class="hljs-number">1</span>         字段数：<span class="hljs-number">7</span><br>user1   <span class="hljs-number">1000</span>     行号：<span class="hljs-number">2</span>         字段数：<span class="hljs-number">7</span><br>user2   <span class="hljs-number">1001</span>     行号：<span class="hljs-number">3</span>         字段数：<span class="hljs-number">7</span><br><br>#如果我只想看sshd<br>[root<span class="hljs-meta">@localhost</span> <span class="hljs-operator">~</span>]# cat <span class="hljs-operator">/</span>etc<span class="hljs-operator">/</span>passwd <span class="hljs-operator">|</span> awk &#x27;<span class="hljs-type">BEGIN</span> &#123;<span class="hljs-type">FS</span><span class="hljs-operator">=</span><span class="hljs-string">&quot;:&quot;</span>&#125; <span class="hljs-variable">$1</span><span class="hljs-operator">==</span><span class="hljs-string">&quot;sshd&quot;</span> &#123;printf <span class="hljs-variable">$1</span> <span class="hljs-string">&quot;<span class="hljs-subst">\t</span>&quot;</span> <span class="hljs-variable">$3</span> <span class="hljs-string">&quot;<span class="hljs-subst">\t</span> 行号：&quot;</span><span class="hljs-type">NR</span> <span class="hljs-string">&quot;<span class="hljs-subst">\t</span> 字段数：&quot;</span><span class="hljs-type">NF</span> <span class="hljs-string">&quot;<span class="hljs-subst">\n</span>&quot;</span>&#125;&#x27;<br>sshd    <span class="hljs-number">74</span>       行号：<span class="hljs-number">20</span>        字段数：<span class="hljs-number">7</span><br></code></pre></td></tr></table></figure><h2 id="Sed"><a href="#Sed" class="headerlink" title="Sed"></a>Sed</h2><p>sed命令</p><figure class="highlight livescript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><code class="hljs livescript">[root@localhost ~]<span class="hljs-comment"># sed [选项] ‘[动作]’ 文件名</span><br>选项：<br>-n：  一般 sed 命令会把所有数据都输出到屏幕，如果加入此选择，则只会把经过 sed 命令处理的行输出到屏幕。<br>-e：允许对输入数据应用多条 sed 命令编辑。<br>-f     脚本文件名： 从 sed 脚本中读入 sed 操作。和 awk 命令的-f 非常类似。<br>-r：在 sed 中支持扩展正则表达式。<br>-i：用 sed 的修改结果直接修改读取数据的文件，而不是由屏幕输出动作：<br>a <span class="hljs-string">\：</span> 追加，在当前行后添加一行或多行。添加多行时，除最后 一行外，<br>每行末尾需要用“<span class="hljs-string">\”代表数据未完结。</span><br>c <span class="hljs-string">\：</span> 行替换，用 c 后面的字符串替换原数据行，替换多行时，除最后一行外，每行末尾需用“<span class="hljs-string">\”代表数据未完结。</span><br>i <span class="hljs-string">\：插入，在当期行前插入一行或多行。插入多行时，除最后</span> 一行外，每行末尾需要用“<span class="hljs-string">\”代表数据未完结。</span><br>d：删除，删除指定的行。<br></code></pre></td></tr></table></figure><p>打印p</p><figure class="highlight tap"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><code class="hljs tap">[root@localhost ~]<span class="hljs-comment"># sed 2p student.txt</span><br>ID      Name    PHP     Linux   MySQL   Average<br>1       Liming <span class="hljs-number"> 82 </span>    <span class="hljs-number"> 95 </span>    <span class="hljs-number"> 86 </span>     87.66<br>1       Liming <span class="hljs-number"> 82 </span>    <span class="hljs-number"> 95 </span>    <span class="hljs-number"> 86 </span>     87.66<br>2       Sc     <span class="hljs-number"> 74 </span>    <span class="hljs-number"> 96 </span>    <span class="hljs-number"> 87 </span>     85.66<br>3       Tg     <span class="hljs-number"> 99 </span>    <span class="hljs-number"> 83 </span>    <span class="hljs-number"> 93 </span>     91.66<br><span class="hljs-comment">#你会发现第二行多打印了一遍，只有加-n才不会</span><br>[root@localhost ~]<span class="hljs-comment"># sed -n &#x27;2p&#x27; student.txt</span><br>1       Liming <span class="hljs-number"> 82 </span>    <span class="hljs-number"> 95 </span>    <span class="hljs-number"> 86 </span>     87.66<br></code></pre></td></tr></table></figure><p>删除d（删除2到4行）</p><p>此操作并不会写入文件中，只是输出的时候删除了</p><figure class="highlight tap"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><code class="hljs tap">[root@localhost ~]<span class="hljs-comment"># sed &#x27;2,4d&#x27; student.txt</span><br>ID      Name    PHP     Linux   MySQL   Average<br>[root@localhost ~]<span class="hljs-comment"># cat student.txt</span><br>ID      Name    PHP     Linux   MySQL   Average<br>1       Liming <span class="hljs-number"> 82 </span>    <span class="hljs-number"> 95 </span>    <span class="hljs-number"> 86 </span>     87.66<br>2       Sc     <span class="hljs-number"> 74 </span>    <span class="hljs-number"> 96 </span>    <span class="hljs-number"> 87 </span>     85.66<br>3       Tg     <span class="hljs-number"> 99 </span>    <span class="hljs-number"> 83 </span>    <span class="hljs-number"> 93 </span>     91.66<br>若想直接修改读取数据到文件的话加入 -i<br>[root@localhost ~]<span class="hljs-comment"># sed -i &#x27;2,4d&#x27; student.txt</span><br>[root@localhost ~]<span class="hljs-comment"># cat student.txt</span><br>ID      Name    PHP     Linux   MySQL   Average<br><br></code></pre></td></tr></table></figure><p>前追加i</p><figure class="highlight tap"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><code class="hljs tap"><span class="hljs-comment">#在第二行前面插入内容</span><br>[root@localhost ~]<span class="hljs-comment"># sed &#x27;2i 前面新内容1  \</span><br>&gt; 前面新内容（大量）<span class="hljs-number"> 2222222222222222222 </span>&#x27; student.txt<br>ID      Name    PHP     Linux   MySQL   Average<br>前面新内容1<br>前面新内容（大量） 2222222222222222222<br>1       Liming <span class="hljs-number"> 82 </span>    <span class="hljs-number"> 95 </span>    <span class="hljs-number"> 86 </span>     87.66<br>2       Sc     <span class="hljs-number"> 74 </span>    <span class="hljs-number"> 96 </span>    <span class="hljs-number"> 87 </span>     85.66<br>3       Tg     <span class="hljs-number"> 99 </span>    <span class="hljs-number"> 83 </span>    <span class="hljs-number"> 93 </span>     91.66<br></code></pre></td></tr></table></figure><p>后追加a</p><figure class="highlight tap"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><code class="hljs tap">在第二行后追加内容<br>[root@localhost ~]<span class="hljs-comment"># sed -i &#x27;2a 新内容&#x27; student.txt</span><br>[root@localhost ~]<span class="hljs-comment"># cat student.txt</span><br>ID      Name    PHP     Linux   MySQL   Average<br>1       Liming <span class="hljs-number"> 82 </span>    <span class="hljs-number"> 95 </span>    <span class="hljs-number"> 86 </span>     87.66<br>新内容<br>2       Sc     <span class="hljs-number"> 74 </span>    <span class="hljs-number"> 96 </span>    <span class="hljs-number"> 87 </span>     85.66<br>3       Tg     <span class="hljs-number"> 99 </span>    <span class="hljs-number"> 83 </span>    <span class="hljs-number"> 93 </span>     91.66<br></code></pre></td></tr></table></figure><p>替换c</p><figure class="highlight tap"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><code class="hljs tap"><span class="hljs-comment">#把2行新内容替换为其他数据</span><br>[root@localhost ~]<span class="hljs-comment"># cat student.txt</span><br>ID      Name    PHP     Linux   MySQL   Average<br>1       Liming <span class="hljs-number"> 82 </span>    <span class="hljs-number"> 95 </span>    <span class="hljs-number"> 86 </span>     87.66<br>2       Sc     <span class="hljs-number"> 74 </span>    <span class="hljs-number"> 96 </span>    <span class="hljs-number"> 87 </span>     85.66<br>3       Tg     <span class="hljs-number"> 99 </span>    <span class="hljs-number"> 83 </span>    <span class="hljs-number"> 93 </span>     91.66<br>[root@localhost ~]<span class="hljs-comment"># sed &#x27;2c 0 xiaoshan 83 55 11 44.2&#x27; student.txt</span><br>ID      Name    PHP     Linux   MySQL   Average<br>0 xiaoshan<span class="hljs-number"> 83 </span>55<span class="hljs-number"> 11 </span>44.2<br>2       Sc     <span class="hljs-number"> 74 </span>    <span class="hljs-number"> 96 </span>    <span class="hljs-number"> 87 </span>     85.66<br>3       Tg     <span class="hljs-number"> 99 </span>    <span class="hljs-number"> 83 </span>    <span class="hljs-number"> 93 </span>     91.66<br><span class="hljs-comment">#我前面是空格，若对齐用\t且\t后没有空格</span><br>[root@localhost ~]<span class="hljs-comment"># sed &#x27;2c 0 \txiaos\t83 \t55 \t11 \t44.2&#x27; student.txt</span><br>ID      Name    PHP     Linux   MySQL   Average<br>0       xiaos  <span class="hljs-number"> 83 </span>    <span class="hljs-number"> 55 </span>    <span class="hljs-number"> 11 </span>     44.2<br>2       Sc     <span class="hljs-number"> 74 </span>    <span class="hljs-number"> 96 </span>    <span class="hljs-number"> 87 </span>     85.66<br>3       Tg     <span class="hljs-number"> 99 </span>    <span class="hljs-number"> 83 </span>    <span class="hljs-number"> 93 </span>     91.66<br></code></pre></td></tr></table></figure><p>多命令执行e</p><figure class="highlight tap"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><code class="hljs tap">[root@localhost ~]<span class="hljs-comment"># cat student.txt</span><br>ID      Name    PHP     Linux   MySQL   Average<br>前面新内容1<br>前面新内容1<br>1       Liming <span class="hljs-number"> 82 </span>    <span class="hljs-number"> 95 </span>    <span class="hljs-number"> 86 </span>     87.66<br>2       Sc     <span class="hljs-number"> 74 </span>    <span class="hljs-number"> 96 </span>    <span class="hljs-number"> 87 </span>     85.66<br>3       Tg     <span class="hljs-number"> 99 </span>    <span class="hljs-number"> 83 </span>    <span class="hljs-number"> 93 </span>     91.66<br><span class="hljs-comment">##同时删除第二和第三行</span><br>[root@localhost ~]<span class="hljs-comment"># sed  -i -e &#x27;2d;3d&#x27; student.txt</span><br>[root@localhost ~]<span class="hljs-comment"># cat student.txt</span><br>ID      Name    PHP     Linux   MySQL   Average<br>1       Liming <span class="hljs-number"> 82 </span>    <span class="hljs-number"> 95 </span>    <span class="hljs-number"> 86 </span>     87.66<br>2       Sc     <span class="hljs-number"> 74 </span>    <span class="hljs-number"> 96 </span>    <span class="hljs-number"> 87 </span>     85.66<br>3       Tg     <span class="hljs-number"> 99 </span>    <span class="hljs-number"> 83 </span>    <span class="hljs-number"> 93 </span>     91.66<br></code></pre></td></tr></table></figure><p>替换字符串 s&#x2F;旧内容&#x2F;新内容&#x2F;g</p><figure class="highlight tap"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><code class="hljs tap"><span class="hljs-comment">#替换Liming为Lm</span><br>[root@localhost ~]<span class="hljs-comment"># sed -i &#x27;s/Liming/Lm/g&#x27; student.txt</span><br>[root@localhost ~]<span class="hljs-comment"># cat student.txt</span><br>ID      Name    PHP     Linux   MySQL   Average<br>1       Lm     <span class="hljs-number"> 82 </span>    <span class="hljs-number"> 95 </span>    <span class="hljs-number"> 86 </span>     87.66<br>2       Sc     <span class="hljs-number"> 74 </span>    <span class="hljs-number"> 96 </span>    <span class="hljs-number"> 87 </span>     85.66<br>3       Tg     <span class="hljs-number"> 99 </span>    <span class="hljs-number"> 83 </span>    <span class="hljs-number"> 93 </span>     91.66<br><span class="hljs-comment">#多命令执行，分号隔开</span><br>[root@localhost ~]<span class="hljs-comment"># sed -i &#x27;s/Sc/sc1/g; s/Tg/Eg/g&#x27; student.txt</span><br>[root@localhost ~]<span class="hljs-comment"># cat student.txt</span><br>ID      Name    PHP     Linux   MySQL   Average<br>1       Lm     <span class="hljs-number"> 82 </span>    <span class="hljs-number"> 95 </span>    <span class="hljs-number"> 86 </span>     87.66<br>2       sc1    <span class="hljs-number"> 74 </span>    <span class="hljs-number"> 96 </span>    <span class="hljs-number"> 87 </span>     85.66<br>3       Eg     <span class="hljs-number"> 99 </span>    <span class="hljs-number"> 83 </span>    <span class="hljs-number"> 93 </span>     91.66<br><span class="hljs-comment">#也可以多行执行</span><br>[root@localhost ~]<span class="hljs-comment"># sed -i &#x27;s/Sc/sc1/g</span><br>s/Tg/Eg/g&#x27; student.txt<br><span class="hljs-comment">#替换字符串为空值</span><br>[root@localhost ~]<span class="hljs-comment"># sed -i &#x27;s/Lm//g&#x27; student.txt</span><br>[root@localhost ~]<span class="hljs-comment"># cat student.txt</span><br>ID      Name    PHP     Linux   MySQL   Average<br>1                <span class="hljs-number"> 82 </span>    <span class="hljs-number"> 95 </span>    <span class="hljs-number"> 86 </span>     87.66<br>2       sc1    <span class="hljs-number"> 74 </span>    <span class="hljs-number"> 96 </span>    <span class="hljs-number"> 87 </span>     85.66<br>3       Eg     <span class="hljs-number"> 99 </span>    <span class="hljs-number"> 83 </span>    <span class="hljs-number"> 93 </span>     91.66<br><br></code></pre></td></tr></table></figure><h2 id="字符串处理命令"><a href="#字符串处理命令" class="headerlink" title="字符串处理命令"></a>字符串处理命令</h2><p>sort排序命令</p><figure class="highlight ldif"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><code class="hljs ldif">[root@localhost ~]<span class="hljs-comment"># sort [选项] 文件名选项：</span><br><span class="hljs-literal">-</span>f：忽略大小写<br><span class="hljs-literal">-</span>b：忽略每行前面的空白部分<br><span class="hljs-literal">-</span>n：以数值型进行排序，默认使用字符串型排序<br><span class="hljs-literal">-</span>r：反向排序<br><span class="hljs-literal">-</span>u：删除重复行。就是 uniq 命令<br><span class="hljs-literal">-</span>t：指定分隔符，默认是分隔符是制表符<br><span class="hljs-literal">-</span>k n[,m]： 按照指定的字段范围排序。从第 n 字段开始，m 字段结束（默认到行尾）<br></code></pre></td></tr></table></figure><figure class="highlight ruby"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><code class="hljs ruby"><span class="hljs-comment">#默认按开头字符排序</span><br>[root<span class="hljs-variable">@localhost</span> ~]<span class="hljs-comment"># sort /etc/passwd</span><br><span class="hljs-symbol">abrt:</span><span class="hljs-symbol">x:</span><span class="hljs-number">173</span><span class="hljs-symbol">:</span><span class="hljs-number">173</span><span class="hljs-symbol">:</span><span class="hljs-symbol">:/etc/abrt</span><span class="hljs-symbol">:/sbin/nologin</span><br><span class="hljs-symbol">adm:</span><span class="hljs-symbol">x:</span><span class="hljs-number">3</span><span class="hljs-symbol">:</span><span class="hljs-number">4</span><span class="hljs-symbol">:adm</span><span class="hljs-symbol">:/var/adm</span><span class="hljs-symbol">:/sbin/nologin</span><br><span class="hljs-symbol">bin:</span><span class="hljs-symbol">x:</span><span class="hljs-number">1</span><span class="hljs-symbol">:</span><span class="hljs-number">1</span><span class="hljs-symbol">:bin</span><span class="hljs-symbol">:/bin</span><span class="hljs-symbol">:/sbin/nologin</span><br><span class="hljs-symbol">chrony:</span><span class="hljs-symbol">x:</span><span class="hljs-number">997</span><span class="hljs-symbol">:</span><span class="hljs-number">995</span><span class="hljs-symbol">:</span><span class="hljs-symbol">:/var/lib/chrony</span><span class="hljs-symbol">:/sbin/nologin</span><br><span class="hljs-comment">#反向排序</span><br>[root<span class="hljs-variable">@localhost</span> ~]<span class="hljs-comment"># sort -r /etc/passwd</span><br><span class="hljs-symbol">user2:</span><span class="hljs-symbol">x:</span><span class="hljs-number">1001</span><span class="hljs-symbol">:</span><span class="hljs-number">1001</span><span class="hljs-symbol">:</span><span class="hljs-symbol">:/home/user2</span><span class="hljs-symbol">:/bin/bash</span><br><span class="hljs-symbol">user1:</span><span class="hljs-symbol">x:</span><span class="hljs-number">1000</span><span class="hljs-symbol">:</span><span class="hljs-number">1000</span><span class="hljs-symbol">:</span><span class="hljs-symbol">:/home/user1</span><span class="hljs-symbol">:/bin/bash</span><br><span class="hljs-symbol">tcpdump:</span><span class="hljs-symbol">x:</span><span class="hljs-number">72</span><span class="hljs-symbol">:</span><span class="hljs-number">72</span><span class="hljs-symbol">:</span><span class="hljs-symbol">:/</span><span class="hljs-symbol">:/sbin/nologin</span><br>systemd-<span class="hljs-symbol">network:</span><span class="hljs-symbol">x:</span><span class="hljs-number">192</span><span class="hljs-symbol">:</span><span class="hljs-number">192</span><span class="hljs-symbol">:systemd</span> <span class="hljs-title class_">Network</span> <span class="hljs-title class_">Management</span><span class="hljs-symbol">:/</span><span class="hljs-symbol">:/sbin/nologin</span><br><span class="hljs-symbol">sync:</span><span class="hljs-symbol">x:</span><span class="hljs-number">5</span><span class="hljs-symbol">:</span><span class="hljs-number">0</span><span class="hljs-symbol">:sync</span><span class="hljs-symbol">:/sbin</span><span class="hljs-symbol">:/bin/sync</span><br></code></pre></td></tr></table></figure><p>指定字段排序</p><figure class="highlight ruby"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><code class="hljs ruby"><span class="hljs-comment">#如UID</span><br>[root<span class="hljs-variable">@localhost</span> ~]<span class="hljs-comment"># sort -t &quot;:&quot; -k 3,3 /etc/passwd</span><br><span class="hljs-symbol">root:</span><span class="hljs-symbol">x:</span><span class="hljs-number">0</span><span class="hljs-symbol">:</span><span class="hljs-number">0</span><span class="hljs-symbol">:root</span><span class="hljs-symbol">:/root</span><span class="hljs-symbol">:/bin/bash</span><br><span class="hljs-symbol">bin:</span><span class="hljs-symbol">x:</span><span class="hljs-number">1</span><span class="hljs-symbol">:</span><span class="hljs-number">1</span><span class="hljs-symbol">:bin</span><span class="hljs-symbol">:/bin</span><span class="hljs-symbol">:/sbin/nologin</span><br><span class="hljs-symbol">user1:</span><span class="hljs-symbol">x:</span><span class="hljs-number">1000</span><span class="hljs-symbol">:</span><span class="hljs-number">1000</span><span class="hljs-symbol">:</span><span class="hljs-symbol">:/home/user1</span><span class="hljs-symbol">:/bin/bash</span><br><span class="hljs-symbol">user2:</span><span class="hljs-symbol">x:</span><span class="hljs-number">1001</span><span class="hljs-symbol">:</span><span class="hljs-number">1001</span><span class="hljs-symbol">:</span><span class="hljs-symbol">:/home/user2</span><span class="hljs-symbol">:/bin/bash</span><br><span class="hljs-symbol">operator:</span><span class="hljs-symbol">x:</span><span class="hljs-number">11</span><span class="hljs-symbol">:</span><span class="hljs-number">0</span><span class="hljs-symbol">:operator</span><span class="hljs-symbol">:/root</span><span class="hljs-symbol">:/sbin/nologin</span><br><span class="hljs-symbol">games:</span><span class="hljs-symbol">x:</span><span class="hljs-number">12</span><span class="hljs-symbol">:</span><span class="hljs-number">100</span><span class="hljs-symbol">:games</span><span class="hljs-symbol">:/usr/games</span><span class="hljs-symbol">:/sbin/nologin</span><br><span class="hljs-symbol">ftp:</span><span class="hljs-symbol">x:</span><span class="hljs-number">14</span><span class="hljs-symbol">:</span><span class="hljs-number">50</span><span class="hljs-symbol">:FTP</span> <span class="hljs-title class_">User</span><span class="hljs-symbol">:/var/ftp</span><span class="hljs-symbol">:/sbin/nologin</span><br><span class="hljs-symbol">abrt:</span><span class="hljs-symbol">x:</span><span class="hljs-number">173</span><span class="hljs-symbol">:</span><span class="hljs-number">173</span><span class="hljs-symbol">:</span><span class="hljs-symbol">:/etc/abrt</span><span class="hljs-symbol">:/sbin/nologin</span><br>systemd-<span class="hljs-symbol">network:</span><span class="hljs-symbol">x:</span><span class="hljs-number">192</span><span class="hljs-symbol">:</span><span class="hljs-number">192</span><span class="hljs-symbol">:systemd</span> <span class="hljs-title class_">Network</span> <span class="hljs-title class_">Management</span><span class="hljs-symbol">:/</span><span class="hljs-symbol">:/sbin/nologin</span><br><span class="hljs-symbol">daemon:</span><span class="hljs-symbol">x:</span><span class="hljs-number">2</span><span class="hljs-symbol">:</span><span class="hljs-number">2</span><span class="hljs-symbol">:daemon</span><span class="hljs-symbol">:/sbin</span><span class="hljs-symbol">:/sbin/nologin</span><br><span class="hljs-symbol">adm:</span><span class="hljs-symbol">x:</span><span class="hljs-number">3</span><span class="hljs-symbol">:</span><span class="hljs-number">4</span><span class="hljs-symbol">:adm</span><span class="hljs-symbol">:/var/adm</span><span class="hljs-symbol">:/sbin/nologin</span><br><span class="hljs-comment">#你会发现他先排第一位数字1，再排2。、</span><br><span class="hljs-comment">#就是1  12  13  到  2  22 23 并没有123456排下去</span><br><span class="hljs-comment">#所以要加上 -n    -n：以数值型进行排序，默认使用字符串型排序</span><br>[root<span class="hljs-variable">@localhost</span> ~]<span class="hljs-comment"># sort -nt &quot;:&quot; -k 3,3 /etc/passwd</span><br><span class="hljs-symbol">root:</span><span class="hljs-symbol">x:</span><span class="hljs-number">0</span><span class="hljs-symbol">:</span><span class="hljs-number">0</span><span class="hljs-symbol">:root</span><span class="hljs-symbol">:/root</span><span class="hljs-symbol">:/bin/bash</span><br><span class="hljs-symbol">bin:</span><span class="hljs-symbol">x:</span><span class="hljs-number">1</span><span class="hljs-symbol">:</span><span class="hljs-number">1</span><span class="hljs-symbol">:bin</span><span class="hljs-symbol">:/bin</span><span class="hljs-symbol">:/sbin/nologin</span><br><span class="hljs-symbol">daemon:</span><span class="hljs-symbol">x:</span><span class="hljs-number">2</span><span class="hljs-symbol">:</span><span class="hljs-number">2</span><span class="hljs-symbol">:daemon</span><span class="hljs-symbol">:/sbin</span><span class="hljs-symbol">:/sbin/nologin</span><br><span class="hljs-symbol">adm:</span><span class="hljs-symbol">x:</span><span class="hljs-number">3</span><span class="hljs-symbol">:</span><span class="hljs-number">4</span><span class="hljs-symbol">:adm</span><span class="hljs-symbol">:/var/adm</span><span class="hljs-symbol">:/sbin/nologin</span><br><span class="hljs-symbol">lp:</span><span class="hljs-symbol">x:</span><span class="hljs-number">4</span><span class="hljs-symbol">:</span><span class="hljs-number">7</span><span class="hljs-symbol">:lp</span><span class="hljs-symbol">:/var/spool/lpd</span><span class="hljs-symbol">:/sbin/nologin</span><br><span class="hljs-symbol">sync:</span><span class="hljs-symbol">x:</span><span class="hljs-number">5</span><span class="hljs-symbol">:</span><span class="hljs-number">0</span><span class="hljs-symbol">:sync</span><span class="hljs-symbol">:/sbin</span><span class="hljs-symbol">:/bin/sync</span><br><span class="hljs-symbol">shutdown:</span><span class="hljs-symbol">x:</span><span class="hljs-number">6</span><span class="hljs-symbol">:</span><span class="hljs-number">0</span><span class="hljs-symbol">:shutdown</span><span class="hljs-symbol">:/sbin</span><span class="hljs-symbol">:/sbin/shutdown</span><br><span class="hljs-symbol">halt:</span><span class="hljs-symbol">x:</span><span class="hljs-number">7</span><span class="hljs-symbol">:</span><span class="hljs-number">0</span><span class="hljs-symbol">:halt</span><span class="hljs-symbol">:/sbin</span><span class="hljs-symbol">:/sbin/halt</span><br><span class="hljs-symbol">mail:</span><span class="hljs-symbol">x:</span><span class="hljs-number">8</span><span class="hljs-symbol">:</span><span class="hljs-number">12</span><span class="hljs-symbol">:mail</span><span class="hljs-symbol">:/var/spool/mail</span><span class="hljs-symbol">:/sbin/nologin</span><br><span class="hljs-symbol">operator:</span><span class="hljs-symbol">x:</span><span class="hljs-number">11</span><span class="hljs-symbol">:</span><span class="hljs-number">0</span><span class="hljs-symbol">:operator</span><span class="hljs-symbol">:/root</span><span class="hljs-symbol">:/sbin/nologin</span><br><span class="hljs-symbol">games:</span><span class="hljs-symbol">x:</span><span class="hljs-number">12</span><span class="hljs-symbol">:</span><span class="hljs-number">100</span><span class="hljs-symbol">:games</span><span class="hljs-symbol">:/usr/games</span><span class="hljs-symbol">:/sbin/nologin</span><br></code></pre></td></tr></table></figure><p>uniq取消重复行</p><p>uniq 命令是用来取消重复行的命令，其实和“sort -u”选项是一样的。命令格式如下</p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs css"><span class="hljs-selector-attr">[root@localhost ~]</span># uniq <span class="hljs-selector-attr">[选项]</span> 文件名选项：<br>-<span class="hljs-selector-tag">i</span>：忽略大小写<br></code></pre></td></tr></table></figure><figure class="highlight tap"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><code class="hljs tap">[root@localhost ~]<span class="hljs-comment"># cat student.txt</span><br>ID      Name    PHP     Linux   MySQL   Average<br>1              <span class="hljs-number"> 82 </span>    <span class="hljs-number"> 95 </span>    <span class="hljs-number"> 86 </span>     87.66<br>1              <span class="hljs-number"> 82 </span>    <span class="hljs-number"> 95 </span>    <span class="hljs-number"> 86 </span>     87.66<br>2       sc1    <span class="hljs-number"> 74 </span>    <span class="hljs-number"> 96 </span>    <span class="hljs-number"> 87 </span>     85.66<br>3       Eg     <span class="hljs-number"> 99 </span>    <span class="hljs-number"> 83 </span>    <span class="hljs-number"> 93 </span>     91.66<br>[root@localhost ~]<span class="hljs-comment"># uniq student.txt</span><br>ID      Name    PHP     Linux   MySQL   Average<br>1              <span class="hljs-number"> 82 </span>    <span class="hljs-number"> 95 </span>    <span class="hljs-number"> 86 </span>     87.66<br>2       sc1    <span class="hljs-number"> 74 </span>    <span class="hljs-number"> 96 </span>    <span class="hljs-number"> 87 </span>     85.66<br>3       Eg     <span class="hljs-number"> 99 </span>    <span class="hljs-number"> 83 </span>    <span class="hljs-number"> 93 </span>     91.66<br></code></pre></td></tr></table></figure><p>wc统计命令</p><figure class="highlight ldif"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs ldif">[root@localhost ~]<span class="hljs-comment"># wc [选项] 文件名选项：</span><br><span class="hljs-literal">-</span>l：只统计行数<br><span class="hljs-literal">-</span>w：只统计单词数<br><span class="hljs-literal">-</span>m：只统计字符数<br></code></pre></td></tr></table></figure><figure class="highlight tap"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><code class="hljs tap">[root@localhost ~]<span class="hljs-comment"># cat student.txt</span><br>ID      Name    PHP     Linux   MySQL   Average<br>1              <span class="hljs-number"> 82 </span>    <span class="hljs-number"> 95 </span>    <span class="hljs-number"> 86 </span>     87.66<br>1              <span class="hljs-number"> 82 </span>    <span class="hljs-number"> 95 </span>    <span class="hljs-number"> 86 </span>     87.66<br>2       sc1    <span class="hljs-number"> 74 </span>    <span class="hljs-number"> 96 </span>    <span class="hljs-number"> 87 </span>     85.66<br>3       Eg     <span class="hljs-number"> 99 </span>    <span class="hljs-number"> 83 </span>    <span class="hljs-number"> 93 </span>     91.66<br>[root@localhost ~]<span class="hljs-comment"># wc -l student.txt</span><br>5 student.txt<br>[root@localhost ~]<span class="hljs-comment"># wc -w student.txt</span><br>28 student.txt<br>[root@localhost ~]<span class="hljs-comment"># wc -m student.txt</span><br>109 student.txt<br><br></code></pre></td></tr></table></figure><h2 id="条件判断（test命令）"><a href="#条件判断（test命令）" class="headerlink" title="条件判断（test命令）"></a>条件判断（test命令）</h2><ol><li>按照文件类型进行判断(test)</li></ol><table><thead><tr><th>测试选项</th><th>作用</th></tr></thead><tbody><tr><td>-b 文件</td><td>判断该文件是否存在，并且是否为块设备文件（是块设备文件为真）</td></tr><tr><td>-c 文件</td><td>判断该文件是否存在，并且是否为字符设备文件（是字符设备文件为真）</td></tr><tr><td>-d 文件</td><td>判断该文件是否存在，并且是否为目录文件（是目录为真）</td></tr><tr><td>-e 文件</td><td>判断该文件是否存在（存在为真）</td></tr><tr><td>-f 文件</td><td>判断该文件是否存在，并且是否为普通文件（是普通文件为真）</td></tr><tr><td>-L 文件</td><td>判断该文件是否存在，并且是否为符号链接文件（是符号链接文件为真）</td></tr><tr><td>-p 文件</td><td>判断该文件是否存在，并且是否为管道文件（是管道文件为真）</td></tr><tr><td>-s 文件</td><td>判断该文件是否存在，并且是否为非空（非空为真）</td></tr><tr><td>-S 文件</td><td>判断该文件是否存在，并且是否为套接字文件（是套接字文件为真）</td></tr></tbody></table><figure class="highlight autoit"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><code class="hljs autoit">[root<span class="hljs-symbol">@localhost</span> ~]<span class="hljs-meta"># ls</span><br>anaconda-ks.cfg  file.txt  file.txtn  netstart.bak  student.txt<br>第一种格式：<span class="hljs-meta">#-e 判断该文件是否存在（存在为真）</span><br>[root<span class="hljs-symbol">@localhost</span> ~]<span class="hljs-meta"># test -e file.txt</span><br><span class="hljs-meta">#输出为0即为真</span><br>[root<span class="hljs-symbol">@localhost</span> ~]<span class="hljs-meta"># echo $?</span><br><span class="hljs-number">0</span><br>第一种格式：<span class="hljs-meta">#-e 判断不存在的文件</span><br>[root<span class="hljs-symbol">@localhost</span> ~]<span class="hljs-meta"># [ -e abc ]</span><br>[root<span class="hljs-symbol">@localhost</span> ~]<span class="hljs-meta"># echo $?</span><br><span class="hljs-number">1</span><br><span class="hljs-meta">#输出为非0即为假</span><br></code></pre></td></tr></table></figure><figure class="highlight clean"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><code class="hljs clean">###判断该文件是否存在，并且是否为目录文件<br>[root@localhost ~]# [ -d student.txt ] &amp;&amp; echo yes || echo no<br>no<br>###判断该文件是否存在，并且是否为普通文件<br>[root@localhost ~]# [ -f student.txt ] &amp;&amp; echo yes || echo no<br>yes<br><br></code></pre></td></tr></table></figure><figure class="highlight vim"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><code class="hljs vim">###判断文件是否有数据<br>[root@localhost ~]# [ -s <span class="hljs-keyword">abc</span> ] &amp;&amp; <span class="hljs-keyword">echo</span> yes || <span class="hljs-keyword">echo</span> <span class="hljs-keyword">no</span><br><span class="hljs-keyword">no</span><br>[root@localhost ~]# <span class="hljs-keyword">echo</span> <span class="hljs-number">111</span> &gt;&gt; <span class="hljs-keyword">abc</span><br>[root@localhost ~]# [ -s <span class="hljs-keyword">abc</span> ] &amp;&amp; <span class="hljs-keyword">echo</span> yes || <span class="hljs-keyword">echo</span> <span class="hljs-keyword">no</span><br>yes<br></code></pre></td></tr></table></figure><ol start="2"><li>按照文件权限判断</li></ol><table><thead><tr><th>测试选项</th><th>作    用</th></tr></thead><tbody><tr><td>-r 文件</td><td>判断该文件是否存在，并且是否该文件拥有读权限（有读权限为真）</td></tr><tr><td>-w 文件</td><td>判断该文件是否存在，并且是否该文件拥有写权限（有写权限为真）</td></tr><tr><td>-x 文件</td><td>判断该文件是否存在，并且是否该文件拥有执行权限（有执行权限为真）</td></tr><tr><td>-u 文件</td><td>判断该文件是否存在，并且是否该文件拥有  SUID 权限（有 SUID 权限为真）</td></tr><tr><td>-g 文件</td><td>判断该文件是否存在，并且是否该文件拥有  SGID 权限（有 SGID 权限为真）</td></tr><tr><td>-k 文件</td><td>判断该文件是否存在，并且是否该文件拥有  SBit 权限（有 SBit 权限为真）</td></tr></tbody></table><figure class="highlight vim"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><code class="hljs vim">##判断文件是否有写的权限<br>[root@localhost ~]# [ -<span class="hljs-keyword">w</span> <span class="hljs-keyword">abc</span> ] &amp;&amp; <span class="hljs-keyword">echo</span> yes || <span class="hljs-keyword">echo</span> <span class="hljs-keyword">no</span><br>yes<br>[root@localhost ~]# [ -<span class="hljs-keyword">u</span> <span class="hljs-keyword">abc</span> ] &amp;&amp; <span class="hljs-keyword">echo</span> yes || <span class="hljs-keyword">echo</span> <span class="hljs-keyword">no</span><br><span class="hljs-keyword">no</span><br>##判断文件是否有SUID的权限<br>[root@localhost ~]# chmod <span class="hljs-keyword">u</span>+s <span class="hljs-keyword">abc</span><br>[root@localhost ~]# [ -<span class="hljs-keyword">u</span> <span class="hljs-keyword">abc</span> ] &amp;&amp; <span class="hljs-keyword">echo</span> yes || <span class="hljs-keyword">echo</span> <span class="hljs-keyword">no</span><br>yes<br>[root@localhost ~]# <span class="hljs-keyword">ll</span><br>total <span class="hljs-number">24</span><br>-rwSr--r--  <span class="hljs-number">1</span> root root    <span class="hljs-number">4</span> May  <span class="hljs-number">2</span> <span class="hljs-number">03</span>:<span class="hljs-number">02</span> <span class="hljs-keyword">abc</span><br><br></code></pre></td></tr></table></figure><ol start="3"><li>两个文件之间进行比较</li></ol><table><thead><tr><th align="left">测试选项</th><th>作    用</th></tr></thead><tbody><tr><td align="left">文件 1 -nt 文件 2</td><td>判断文件 1 的修改时间是否比文件 2 的新（如果新则为真）</td></tr><tr><td align="left">文件 1 -ot 文件 2</td><td>判断文件 1 的修改时间是否比文件 2 的旧（如果旧则为真）</td></tr><tr><td align="left">文件 1 -ef 文件 2</td><td>判断文件 1 是否和文件 2 的 Inode 号一致，可以理解为两个文件是否  为同一个文件。这个判断用于判断硬链接是很好的方法</td></tr></tbody></table><figure class="highlight gradle"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><code class="hljs gradle">##判断两个文件是否是硬链接<br>[root@localhost ~]# ln <span class="hljs-regexp">/root/</span>abc <span class="hljs-regexp">/tmp/</span>abc<br>[root@localhost ~]# ll <span class="hljs-regexp">/tmp/</span>abc<br>-rw-r--r-- <span class="hljs-number">2</span> root root <span class="hljs-number">4</span> May  <span class="hljs-number">2</span> <span class="hljs-number">03</span>:<span class="hljs-number">02</span> <span class="hljs-regexp">/tmp/</span>abc<br><br>[root@localhost ~]# [ <span class="hljs-regexp">/root/</span>abc -ef <span class="hljs-regexp">/tmp/</span>abc ] &amp;&amp; echo yes || echo no<br>yes<br><br></code></pre></td></tr></table></figure><ol start="4"><li>两个整数之间比较</li></ol><table><thead><tr><th>测试选项</th><th>作    用</th></tr></thead><tbody><tr><td>整数 1 -eq 整数 2</td><td>判断整数 1 是否和整数 2 相等（相等为真）</td></tr><tr><td>整数 1 -ne 整数 2</td><td>判断整数 1 是否和整数 2 不相等（不相等位置）</td></tr><tr><td>整数 1 -gt 整数 2</td><td>判断整数 1 是否大于整数 2（大于为真）</td></tr><tr><td>整数 1 -lt 整数 2</td><td>判断整数 1 是否小于整数 2（小于位置）</td></tr><tr><td>整数 1 -ge 整数 2</td><td>判断整数 1 是否大于等于整数 2（大于等于为真）</td></tr><tr><td>整数 1 -le 整数 2</td><td>判断整数 1 是否小于等于整数 2（小于等于为真）</td></tr></tbody></table><p>-eq: equal : 相等               -ne: not equal : 不相等</p><p>-gt: greater than : 大于       -lt: less than : 小于</p><figure class="highlight gams"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><code class="hljs gams">##判断整数<span class="hljs-number">1</span>是否等于整数<span class="hljs-number">2</span><br>[root@localhost ~]# [ <span class="hljs-number">22</span> -<span class="hljs-keyword">eq</span> <span class="hljs-number">22</span> ] &amp;&amp; echo <span class="hljs-keyword">yes</span> || echo <span class="hljs-keyword">no</span><br><span class="hljs-keyword">yes</span><br>##判断整数<span class="hljs-number">1</span>是否小于整数<span class="hljs-number">2</span><br>[root@localhost ~]# [ <span class="hljs-number">22</span> -<span class="hljs-keyword">lt</span> <span class="hljs-number">22</span> ] &amp;&amp; echo <span class="hljs-keyword">yes</span> || echo <span class="hljs-keyword">no</span><br><span class="hljs-keyword">no</span><br>[root@localhost ~]# [ <span class="hljs-number">21</span> -<span class="hljs-keyword">lt</span> <span class="hljs-number">22</span> ] &amp;&amp; echo <span class="hljs-keyword">yes</span> || echo <span class="hljs-keyword">no</span><br><span class="hljs-keyword">yes</span><br><br></code></pre></td></tr></table></figure><ol start="5"><li>字符串判断</li></ol><table><thead><tr><th>测试选项</th><th>作    用</th></tr></thead><tbody><tr><td>-z 字符串</td><td>判断字符串是否为空（为空返回真）</td></tr><tr><td>-n 字符串</td><td>判断字符串是否为非空（非空返回真）</td></tr><tr><td>字串 1 &#x3D;&#x3D;字串 2</td><td>判断字符串  1 是否和字符串 2 相等（相等返回真）</td></tr><tr><td>字串 1 !&#x3D; 字串 2</td><td>判断字符串  1 是否和字符串 2 不相等（不相等返回真）</td></tr></tbody></table><figure class="highlight routeros"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><code class="hljs routeros"><span class="hljs-comment">##判断两个字符串相等</span><br>[root@localhost ~]# <span class="hljs-attribute">aa</span>=11<br>[root@localhost ~]# <span class="hljs-attribute">bb</span>=22<br>[root@localhost ~]# [ <span class="hljs-string">&quot;<span class="hljs-variable">$aa</span>&quot;</span> == 8 ] &amp;&amp; echo <span class="hljs-literal">yes</span> || echo <span class="hljs-literal">no</span><br><span class="hljs-literal">no</span><br>[root@localhost ~]# [ <span class="hljs-variable">$aa</span> == <span class="hljs-variable">$bb</span> ] &amp;&amp; echo <span class="hljs-literal">yes</span> || echo <span class="hljs-literal">no</span><br><span class="hljs-literal">no</span><br>[root@localhost ~]# [ <span class="hljs-string">&quot;<span class="hljs-variable">$aa</span>&quot;</span> == 11 ] &amp;&amp; echo <span class="hljs-literal">yes</span> || echo <span class="hljs-literal">no</span><br><span class="hljs-literal">yes</span><br><span class="hljs-comment">##判断字符是否为空</span><br>[root@localhost ~]# <span class="hljs-attribute">name</span>=xx<br>[root@localhost ~]# [ -z <span class="hljs-variable">$name</span> ] &amp;&amp; echo <span class="hljs-literal">yes</span> || echo <span class="hljs-literal">no</span><br><span class="hljs-literal">no</span><br></code></pre></td></tr></table></figure><ol start="6"><li>多重条件判断</li></ol><table><thead><tr><th>测试选项</th><th>作    用</th></tr></thead><tbody><tr><td>判断 1 -a 判断 2</td><td>逻辑与，判断  1 和判断 2 都成立，最终的结果才为真</td></tr><tr><td>判断 1 -o 判断 2</td><td>逻辑或，判断  1 和判断 2 有一个成立，最终的结果就为真</td></tr><tr><td>！判断</td><td>逻辑非，使原始的判断式取反</td></tr></tbody></table><figure class="highlight routeros"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs routeros"><span class="hljs-comment">#先给aa赋值</span><br>[root@localhost ~]# <span class="hljs-attribute">aa</span>=24<br><span class="hljs-comment">#-n先判断是否为空，明显不为空则为真，真就继续判断是否大于23</span><br>[root@localhost ~]# [ -n <span class="hljs-string">&quot;<span class="hljs-variable">$aa</span>&quot;</span> -a <span class="hljs-string">&quot;<span class="hljs-variable">$aa</span>&quot;</span> -gt 23 ] &amp;&amp; echo <span class="hljs-literal">yes</span> || echo <span class="hljs-literal">no</span><br><span class="hljs-literal">yes</span><br></code></pre></td></tr></table></figure><figure class="highlight autoit"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><code class="hljs autoit"><span class="hljs-meta">##逻辑非</span><br>[root<span class="hljs-symbol">@localhost</span> ~]<span class="hljs-meta"># [ ! -n <span class="hljs-string">&quot;$aa&quot;</span> ] &amp;&amp; echo <span class="hljs-string">&quot;yes&quot;</span> || echo <span class="hljs-string">&quot;no&quot;</span></span><br>no<br><span class="hljs-meta">#本来“-n”选项是变量 aa 不为空，返回值就是真。</span><br><span class="hljs-meta">#加入！之后，判断值就会取反，所以当变量 aa 有值时，返回值是假</span><br><br></code></pre></td></tr></table></figure><h2 id="流程控制"><a href="#流程控制" class="headerlink" title="流程控制"></a>流程控制</h2><h3 id="if条件判断"><a href="#if条件判断" class="headerlink" title="if条件判断"></a>if条件判断</h3><ol><li>单分支 if 条件语句</li></ol><p>单分支条件语句最为简单，就是只有一个判断条件，如果符合条件则执行某个程序，否则什么事情都不做。语法如下：</p><figure class="highlight nginx"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs nginx"><span class="hljs-attribute">if</span> [ 条件判断式 ];<span class="hljs-attribute">then</span><br>     程序<br>fi<br></code></pre></td></tr></table></figure><p>单分支条件语句需要注意几个点：</p><p>·if 语句使用 fi 结尾，和一般语言使用大括号结尾不同</p><p>· [ 条件判断式 ]就是使用 test 命令判断，所以中括号和条件判断式之间必须有空格</p><p>· then 后面跟符合条件之后执行的程序，可以放在[]之后，用“；”分割。也可以换行写入，就不需要“；”了，比如单分支 if 语句还可以这样写：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs bash"><span class="hljs-keyword">if</span> [ 条件判断式 ]<br>   <span class="hljs-keyword">then</span><br>     程序<br><span class="hljs-keyword">fi</span><br></code></pre></td></tr></table></figure><p>例子：判断sda1并设置警告信息</p><figure class="highlight autoit"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><code class="hljs autoit">[root<span class="hljs-symbol">@localhost</span> ~]<span class="hljs-meta"># df -h</span><br>Filesystem               Size  Used Avail Use% Mounted on<br>/dev/sda1               <span class="hljs-number">1014</span>M  <span class="hljs-number">141</span>M  <span class="hljs-number">874</span>M  <span class="hljs-number">14</span>% /boot<br>[root<span class="hljs-symbol">@localhost</span> ~]<span class="hljs-meta"># df -h | grep <span class="hljs-string">&quot;/dev/sda1&quot;</span> | awk <span class="hljs-string">&#x27;&#123;print $5&#125;&#x27;</span> | cut -d <span class="hljs-string">&quot;%&quot;</span> -f 1</span><br><span class="hljs-number">14</span><br><br><br>[root<span class="hljs-symbol">@localhost</span> ~]<span class="hljs-meta"># vi if1.sh</span><br><span class="hljs-meta">#!/bin/bash</span><br><span class="hljs-meta">#统计分区使用率</span><br>rate=$(df -h | grep <span class="hljs-string">&quot;/dev/sda1&quot;</span> | awk <span class="hljs-string">&#x27;&#123;print $5&#125;&#x27;</span>| cut -d <span class="hljs-string">&quot;%&quot;</span> -f <span class="hljs-number">1</span>)<br><br><span class="hljs-meta">#把根分区使用率作为变量值赋予变量rate</span><br><span class="hljs-keyword">if</span> [ $rate -ge <span class="hljs-number">14</span> ]<br><span class="hljs-meta">#判断 rate 的值如果大于等于 14，则执行then 程序</span><br><span class="hljs-keyword">then</span><br>echo <span class="hljs-string">&quot;Warning! /dev/sda1 快满了!&quot;</span><br><span class="hljs-meta">#打印警告信息。在实际工作中，也可以向管理员发送邮件。</span><br>fi<br>[root<span class="hljs-symbol">@localhost</span> ~]<span class="hljs-meta"># sh if1.sh</span><br>Warning! /dev/sda1 快满了!<br></code></pre></td></tr></table></figure><ol start="2"><li>双分支if语句</li></ol><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><code class="hljs bash"><span class="hljs-keyword">if</span> [ 条件判断式 ]<br>       <span class="hljs-keyword">then</span><br>条件成立时，执行的程序<br><span class="hljs-keyword">else</span><br>条件不成立时，执行的另一个程序<br><span class="hljs-keyword">fi</span><br></code></pre></td></tr></table></figure><p>数据备份的例子</p><figure class="highlight awk"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br></pre></td><td class="code"><pre><code class="hljs awk"><span class="hljs-comment">#备份mysql数据库（并不完善，但可以使用）</span><br>[root@localhost ~]<span class="hljs-comment"># vi sh/bakmysql.sh </span><br><span class="hljs-comment">#!/bin/bash</span><br><span class="hljs-comment">#备份 mysql 数据库。</span><br><span class="hljs-comment">#同步系统时间</span><br>ntpdate asia.pool.ntp.org &amp;&gt;<span class="hljs-regexp">/dev/</span>null<br><span class="hljs-comment">#把当前系统时间按照“年月日”格式赋予变量date</span><br>date=$(date +%y%m%d)<br><span class="hljs-comment">#统计 mysql 数据库的大小，并把大小赋予size 变量</span><br>size=$(du -sh <span class="hljs-regexp">/var/</span>lib/mysql)<br><br><span class="hljs-keyword">if</span> [ -d <span class="hljs-regexp">/tmp/</span>dbbak ]<br>    <span class="hljs-comment">#判断备份目录是否存在，是否为目录</span><br>  then<br>    <span class="hljs-comment">#如果判断为真，执行以下脚本</span><br>echo <span class="hljs-string">&quot;Date : $date!&quot;</span> &gt; <span class="hljs-regexp">/tmp/</span>dbbak/dbinfo.txt<br><span class="hljs-comment">#把当前日期写入临时文件</span><br>echo <span class="hljs-string">&quot;Data size : $size&quot;</span> &gt;&gt; <span class="hljs-regexp">/tmp/</span>dbbak/dbinfo.txt<br><span class="hljs-comment">#把数据库大小写入临时文件</span><br>cd <span class="hljs-regexp">/tmp/</span>dbbak<br><span class="hljs-comment">#进入备份目录</span><br>tar -zcf mysql-lib-<span class="hljs-variable">$date</span>.tar.gz <span class="hljs-regexp">/var/</span>lib<span class="hljs-regexp">/mysql dbinfo.txt &amp;&gt;/</span>dev/null<br><span class="hljs-comment">#打包压缩数据库与临时文件，把所有输出丢入垃圾箱（不想看到任何输出）</span><br>rm -rf <span class="hljs-regexp">/tmp/</span>dbbak/dbinfo.txt<br><span class="hljs-comment">#删除临时文件</span><br>  <span class="hljs-keyword">else</span><br>mkdir <span class="hljs-regexp">/tmp/</span>dbbak<br><span class="hljs-comment">#如果判断为假，则建立备份目录</span><br>echo <span class="hljs-string">&quot;Date : $date!&quot;</span> &gt; <span class="hljs-regexp">/tmp/</span>dbbak<span class="hljs-regexp">/dbinfo.txt echo &quot;Data size : $size&quot; &gt;&gt; /</span>tmp<span class="hljs-regexp">/dbbak/</span>dbinfo.txt <span class="hljs-comment">#把日期和数据库大小保存如临时文件</span><br>cd <span class="hljs-regexp">/tmp/</span>dbbak<br>tar -zcf mysql-lib-<span class="hljs-variable">$date</span>.tar.gz dbinfo.txt <span class="hljs-regexp">/var/</span>lib<span class="hljs-regexp">/mysql &amp;&gt;/</span>dev/null<br><span class="hljs-comment">#压缩备份数据库与临时文件</span><br>rm -rf <span class="hljs-regexp">/tmp/</span>dbbak/dbinfo.txt<br><span class="hljs-comment">#删除临时文件</span><br>fi<br><br></code></pre></td></tr></table></figure><h2 id="常用字符表"><a href="#常用字符表" class="headerlink" title="常用字符表"></a>常用字符表</h2><h3 id="echo"><a href="#echo" class="headerlink" title="echo"></a>echo</h3><p>在 echo 命令中如果使用了“-e”选项，则可以支持控制字符，如表 11-2 所示：</p><table><thead><tr><th>控制字符</th><th>作用</th></tr></thead><tbody><tr><td>\</td><td>输出\本身</td></tr><tr><td>\a</td><td>输出警告音</td></tr><tr><td>\b</td><td>退格键，也就是向左删除键</td></tr><tr><td>\c</td><td>取消输出行末的换行符。和“-n”选项一致</td></tr><tr><td>\e</td><td>ESCAPE 键</td></tr><tr><td>\f</td><td>换页符</td></tr><tr><td>\n</td><td>换行符</td></tr><tr><td>\r</td><td>回车键</td></tr><tr><td>\t</td><td>制表符，也就是 Tab 键</td></tr><tr><td>\v</td><td>垂直制表符</td></tr><tr><td>\0nnn</td><td>按照八进制 ASCII 码表输出字符。其中 0 为数字零，nnn 是三位八进制数</td></tr><tr><td>\xhh</td><td>按照十六进制 ASCII 码表输出字符。其中 hh 是两位十六进制数</td></tr></tbody></table><h3 id="Bash常用快捷键"><a href="#Bash常用快捷键" class="headerlink" title="Bash常用快捷键"></a>Bash常用快捷键</h3><table><thead><tr><th>快捷键</th><th>作用</th></tr></thead><tbody><tr><td>ctrl+A</td><td>把光标移动到命令行开头。如果我们输入的命令过长，想要把光标移动到命令行开头时使用。</td></tr><tr><td>ctrl+E</td><td>把光标移动到命令行结尾。</td></tr><tr><td><strong>ctrl+C</strong></td><td>强制终止当前的命令。</td></tr><tr><td><strong>ctrl+L</strong></td><td>清屏，相当于 clear 命令。</td></tr><tr><td><strong>ctrl+U</strong></td><td>删除或剪切光标之前的命令。我输入了一行很长的命令，不用使用退格键一个一个字符的删除，使用这个快捷键会更加方便</td></tr><tr><td>ctrl+K</td><td>删除或剪切光标之后的内容。</td></tr><tr><td><strong>ctrl+Y</strong></td><td>粘贴 ctrl+U 或 ctrl+K 剪切的内容。</td></tr><tr><td><strong>ctrl+R</strong></td><td>在历史命令中搜索，按下ctrl+R 之后，就会出现搜索界面，只要输入搜索内容，就会从历史命令中搜索。</td></tr></tbody></table><table><thead><tr><th><strong>ctrl+D</strong></th><th>退出当前终端。</th></tr></thead><tbody><tr><td>ctrl+Z</td><td>暂停，并放入后台。这个快捷键牵扯工作管理的内容，我们在系统管理章节详细介绍。</td></tr><tr><td>ctrl+S</td><td>暂停屏幕输出。</td></tr><tr><td>ctrl+Q</td><td>恢复屏幕输出。</td></tr></tbody></table><h3 id="基础正则表达式"><a href="#基础正则表达式" class="headerlink" title="基础正则表达式"></a>基础正则表达式</h3><table><thead><tr><th>元字符</th><th align="left">作用</th></tr></thead><tbody><tr><td>*</td><td align="left">前一个字符匹配 0 次或任意多次。</td></tr><tr><td>.</td><td align="left">匹配除了换行符外任意一个字符。</td></tr><tr><td>^</td><td align="left">匹配行首。例如：^hello 会匹配以 hello 开头的行。</td></tr><tr><td>$</td><td align="left">匹配行尾。例如：hello&amp;会匹配以 hello 结尾的行。</td></tr><tr><td>[]</td><td align="left">匹配中括号中指定的任意一个字符，只匹配一个字符。例如：[aoeiu] 匹配任意一个元音字母，[0-9] 匹配任意一位数字，[a-z][0-9]匹配小写字和一位数字构成的两位字符。</td></tr><tr><td>[^]</td><td align="left">匹配除中括号的字符以外的任意一个字符。例如：[^0-9] 匹配任意一位非数字字符，[^a-z] 表示任意一位非小写字母。</td></tr><tr><td>\</td><td align="left">转义符。用于取消讲特殊符号的含义取消。</td></tr><tr><td>{n}</td><td align="left">表示其前面的字符恰好出现 n 次。例如：[0-9]{4} 匹配 4 位数字，[1][3-8][0-9]{9} 匹配手机号码。</td></tr><tr><td>{n,}</td><td align="left">表示其前面的字符出现不小于 n 次。例如： [0-9]{2,} 表示两位及以上的数字。</td></tr><tr><td>{n,m}</td><td align="left">表示其前面的字符至少出现n 次，最多出现m 次。例如：[a-z]{6,8}匹配 6 到 8 位的小写字母。</td></tr></tbody></table><h3 id="扩展正则-1"><a href="#扩展正则-1" class="headerlink" title="扩展正则"></a>扩展正则</h3><table><thead><tr><th>扩展元字符</th><th>作用</th></tr></thead><tbody><tr><td>+</td><td>前一个字符匹配 1 次或任意多次。如“go+gle”会匹配“gogle”、“google”或“gooogle”，当然如果“o”有更多个，也能匹配。</td></tr><tr><td>？</td><td>前一个字符匹配 0 次或 1 次。如“colou?r”可以匹配“colour”或“color”。</td></tr><tr><td>|</td><td>匹配两个或多个分支选择。如“was|his”会匹配既包含“was”的行，也匹配包含“his”的行。</td></tr><tr><td>（）</td><td>匹配其整体为一个字符，即模式单元。可以理解为由多个单个字符组成的大字符。<br />如“(dog)+”会匹配“dog”、“dogdog”、“dogdogdog”等，因为被（）包含的字符会当成一个整体。但“hello （world|earth）”会匹配“hello world”及“hello earth”。</td></tr></tbody></table><h3 id="grep-参数列表-1"><a href="#grep-参数列表-1" class="headerlink" title="grep 参数列表"></a>grep 参数列表</h3><ol><li><code>-i</code> : 忽略大小写</li><li><code>-v</code> : 查找不包含指定字符串的所有行（取反）</li><li><code>-r</code> : 递归查找文件夹下的文件</li><li><code>-n</code> : 显示匹配行所在位置（行号）</li><li><code>-l</code> : 只显示包含搜索字符串的文件名，而非每个匹配行</li><li><code>-c</code> : 统计符合条件的行数</li><li><code>-e pattern</code> : 指定要查找的正则表达式模式</li><li><code>-w</code> : 匹配整个单词，即只匹配独立的单词而非单词内的字符</li><li><code>-A num</code> : 输出匹配行后 N 行内容</li><li><code>-B num</code> : 输出匹配行前 N 行内容</li><li><code>-C[num]</code> 或者 <code>--context[=num]</code>: 输出匹配行前后总共 N 行内容。</li><li><code>--exclude</code> : 排除指定文件类型，多个文件类型用 “,” 隔开</li></ol><h3 id="cut"><a href="#cut" class="headerlink" title="cut"></a>cut</h3><figure class="highlight excel"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs excel">[root@localhost ~]# cut [选项] 文件名选项：<br>-f 列号：          提取第几列<br>-d 分隔符：     按照指定分隔符分割列<br>-c 字符范围：    不依赖分隔符来区分列，而是通过字符范围（行首为 <span class="hljs-number">0</span>）来进行字段提取。“<span class="hljs-built_in">n</span>-”表示从第 <span class="hljs-built_in">n</span> 个字符到行尾；“<span class="hljs-built_in">n</span>-m”从第 <span class="hljs-built_in">n</span> 个字符到第 m个字符；“-m”表示从第 <span class="hljs-number">1</span> 个字符到第 m 个字符。<br></code></pre></td></tr></table></figure><h3 id="awk条件（Pattern）"><a href="#awk条件（Pattern）" class="headerlink" title="awk条件（Pattern）"></a>awk条件（Pattern）</h3><p><img src="https://article.biliimg.com/bfs/article/57f292fedf7e7b7ceb599cccdb255538697559838.png" alt="image-20230421143849290"></p><h3 id="awk内置变量"><a href="#awk内置变量" class="headerlink" title="awk内置变量"></a>awk内置变量</h3><p><img src="https://article.biliimg.com/bfs/article/410b4572908efc8661fd16142121fa95697559838.png" alt="image-20230421190306772"></p><div class="tbsm" style="margin-top:54px;"><div class="tbsm-top"><span><svg t="1674654360507" class="icon" viewBox="0 0 1024 1024" version="1.1" xmlns="http://www.w3.org/2000/svg" p-id="987" data-spm-anchor-id="a313x.7781069.0.i0" width="35" height="35"><path d="M410.49 97.74H155.08a56.74 56.74 0 0 0-56.84 56.73V410a56.84 56.84 0 0 0 56.84 56.84h255.41A56.83 56.83 0 0 0 467.32 410V154.58a56.83 56.83 0 0 0-56.83-56.84zM410.49 558.74H155.08a56.74 56.74 0 0 0-56.84 56.73V871a56.84 56.84 0 0 0 56.84 56.84h255.41A56.83 56.83 0 0 0 467.32 871V615.58a56.83 56.83 0 0 0-56.83-56.84zM871.49 558.74H616.08a56.74 56.74 0 0 0-56.84 56.73V871a56.84 56.84 0 0 0 56.84 56.84h255.41A56.83 56.83 0 0 0 928.32 871V615.58a56.83 56.83 0 0 0-56.83-56.84z" fill="#66EEFF" p-id="988"></path><path d="M410.49 558.74h-4.14A475 475 0 0 0 299.52 859.6a481.16 481.16 0 0 0 4.84 68.22h106.13A56.83 56.83 0 0 0 467.32 871V615.58a56.83 56.83 0 0 0-56.83-56.84zM871.49 558.74H616.08a56.74 56.74 0 0 0-56.84 56.73V871a56.84 56.84 0 0 0 56.84 56.84h255.41A56.83 56.83 0 0 0 928.32 871V615.58a56.83 56.83 0 0 0-56.83-56.84z" fill="#C2F8FF" p-id="989"></path></svg></span><span style="font-size:30px;"> 特别声明</span></div><div class="tbsm-wz">千屹博客旗下的所有文章，是通过本人课堂学习和课外自学所精心整理的知识巨著<br/>难免会有出错的地方<br/>如果细心的你发现了小失误，可以在下方评论区告诉我，或者私信我！<br />非常感谢大家的热烈支持！</div></div>]]></content>
    
    
    
    <tags>
      
      <tag>Shell</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>图形化Centos7部署kvm</title>
    <link href="/2023/02/26/%E5%9B%BE%E5%BD%A2%E5%8C%96Centos7%E9%83%A8%E7%BD%B2kvm/"/>
    <url>/2023/02/26/%E5%9B%BE%E5%BD%A2%E5%8C%96Centos7%E9%83%A8%E7%BD%B2kvm/</url>
    
    <content type="html"><![CDATA[<meta name="referrer" content="no-referrer"/><h1 id="图形化Centos7部署kvm"><a href="#图形化Centos7部署kvm" class="headerlink" title="图形化Centos7部署kvm"></a>图形化Centos7部署kvm</h1><h2 id="基础配置"><a href="#基础配置" class="headerlink" title="基础配置"></a>基础配置</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><code class="hljs bash"><span class="hljs-built_in">mkdir</span> repo.bak<br><span class="hljs-built_in">mv</span> /etc/yum.repos.d/* repo.bak/<br>mount /dev/cdrom /mnt<br><span class="hljs-built_in">cat</span> &gt;&gt;/etc/yum.repos.d/local.repo&lt;&lt;<span class="hljs-string">EOF</span><br><span class="hljs-string">[local]</span><br><span class="hljs-string">name=local</span><br><span class="hljs-string">baseurl=file:///mnt</span><br><span class="hljs-string">gpgcheck=0</span><br><span class="hljs-string">enabled=1</span><br><span class="hljs-string">EOF</span><br>yum clean all &amp;&amp; yum makecache<br>systemctl <span class="hljs-built_in">disable</span> firewalld --now<br>sed -i <span class="hljs-string">&#x27;s/SELINUX=enforcing/SELINUX=disabled/g&#x27;</span> /etc/sysconfig/selinux<br></code></pre></td></tr></table></figure><h2 id="安装kvm"><a href="#安装kvm" class="headerlink" title="安装kvm"></a>安装kvm</h2><figure class="highlight autoit"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><code class="hljs autoit">[root<span class="hljs-symbol">@localhost</span> ~]<span class="hljs-meta"># yum -y groupinstall <span class="hljs-string">&quot;Virtualization&quot;</span> <span class="hljs-string">&quot;Virtualization Client&quot;</span> <span class="hljs-string">&quot;Virtualization Platform&quot;</span> <span class="hljs-string">&quot;Virtualization Tools&quot;</span></span><br><span class="hljs-meta">#启动libvirtd服务</span><br>[root<span class="hljs-symbol">@localhost</span> ~]<span class="hljs-meta"># service libvirtd start</span><br>Redirecting <span class="hljs-keyword">to</span> /bin/systemctl start libvirtd.service<br><span class="hljs-meta">#查看是否安装成功</span><br>[root<span class="hljs-symbol">@localhost</span> ~]<span class="hljs-meta"># virsh list --all</span><br> Id    名称                         状态<br>----------------------------------------------------<br></code></pre></td></tr></table></figure><h2 id="配置桥接网卡"><a href="#配置桥接网卡" class="headerlink" title="配置桥接网卡"></a>配置桥接网卡</h2><figure class="highlight autoit"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs autoit">[root<span class="hljs-symbol">@localhost</span> ~]<span class="hljs-meta"># cd /etc/sysconfig/network-scripts/</span><br>[root<span class="hljs-symbol">@localhost</span> network-scripts]<span class="hljs-meta"># cp ifcfg-ens33 ifcfg-br0</span><br></code></pre></td></tr></table></figure><p>ens33删除多余留下4条</p><p><img src="https://article.biliimg.com/bfs/article/73e7a28e00f379d296c9f79bb5ddbf0b697559838.png" alt="image-20230301145758180"></p><p>br0桥接网卡就按顺序加信息，第一行的type改成bridge</p><p><img src="https://article.biliimg.com/bfs/article/a23e03ca2a81732d9ffdc7d855080bb9697559838.png" alt="image-20230301145818079"></p><h2 id="安装测试虚拟机"><a href="#安装测试虚拟机" class="headerlink" title="安装测试虚拟机"></a>安装测试虚拟机</h2><h3 id="上传镜像"><a href="#上传镜像" class="headerlink" title="上传镜像"></a>上传镜像</h3><p><img src="https://article.biliimg.com/bfs/article/a6dc3aab27b158e3fc640fda2270bc81697559838.png" alt="image-20230301153148509"></p><h3 id="创建虚拟机，选择镜像"><a href="#创建虚拟机，选择镜像" class="headerlink" title="创建虚拟机，选择镜像"></a>创建虚拟机，选择镜像</h3><p><img src="https://article.biliimg.com/bfs/article/edc75b9507cf8813deb27b00b855f9f1697559838.png" alt="image-20230301153600273"></p><h3 id="选择运行内存和cpu，磁盘内存"><a href="#选择运行内存和cpu，磁盘内存" class="headerlink" title="选择运行内存和cpu，磁盘内存"></a>选择运行内存和cpu，磁盘内存</h3><img src="https://article.biliimg.com/bfs/article/95bd6367d4c09184576a9ca1fa670e16697559838.png" alt="image-20230301153642008"  /><p>这里只给了8G，我原本的虚拟机只设置了20G，可以根据自己需要把自己原本的虚拟机扩大，这样kvm里的虚拟机也就可以扩大内存了</p><p><img src="https://article.biliimg.com/bfs/article/eb3bd0422b8d5f8b73dcc88d11ea8663697559838.png" alt="image-20230301153801786"></p><h3 id="选择br0网络（桥接网卡）"><a href="#选择br0网络（桥接网卡）" class="headerlink" title="选择br0网络（桥接网卡）"></a>选择br0网络（桥接网卡）</h3><p><img src="https://article.biliimg.com/bfs/article/062b8f3edd191af8719b17970b25eeac697559838.png" alt="image-20230301153925557"></p><p>点击完成之后就可以开始安装了</p><p><img src="https://article.biliimg.com/bfs/article/a2e33a2a43c09e2d3501a2e1eb9f9671697559838.png" alt="image-20230301154047563"></p><p><img src="https://article.biliimg.com/bfs/article/0b7e235d1382ac5e5062cc768ed661b0697559838.png" alt="image-20230301154141311"></p><p>测试ping百度</p><p><img src="https://article.biliimg.com/bfs/article/d30911ffd961ef4cf1625ce56943a213697559838.png" alt="image-20230301154617535"></p><div class="tbsm" style="margin-top:54px;"><div class="tbsm-top"><span><svg t="1674654360507" class="icon" viewBox="0 0 1024 1024" version="1.1" xmlns="http://www.w3.org/2000/svg" p-id="987" data-spm-anchor-id="a313x.7781069.0.i0" width="35" height="35"><path d="M410.49 97.74H155.08a56.74 56.74 0 0 0-56.84 56.73V410a56.84 56.84 0 0 0 56.84 56.84h255.41A56.83 56.83 0 0 0 467.32 410V154.58a56.83 56.83 0 0 0-56.83-56.84zM410.49 558.74H155.08a56.74 56.74 0 0 0-56.84 56.73V871a56.84 56.84 0 0 0 56.84 56.84h255.41A56.83 56.83 0 0 0 467.32 871V615.58a56.83 56.83 0 0 0-56.83-56.84zM871.49 558.74H616.08a56.74 56.74 0 0 0-56.84 56.73V871a56.84 56.84 0 0 0 56.84 56.84h255.41A56.83 56.83 0 0 0 928.32 871V615.58a56.83 56.83 0 0 0-56.83-56.84z" fill="#66EEFF" p-id="988"></path><path d="M410.49 558.74h-4.14A475 475 0 0 0 299.52 859.6a481.16 481.16 0 0 0 4.84 68.22h106.13A56.83 56.83 0 0 0 467.32 871V615.58a56.83 56.83 0 0 0-56.83-56.84zM871.49 558.74H616.08a56.74 56.74 0 0 0-56.84 56.73V871a56.84 56.84 0 0 0 56.84 56.84h255.41A56.83 56.83 0 0 0 928.32 871V615.58a56.83 56.83 0 0 0-56.83-56.84z" fill="#C2F8FF" p-id="989"></path></svg></span><span style="font-size:30px;"> 特别声明</span></div><div class="tbsm-wz">千屹博客旗下的所有文章，是通过本人课堂学习和课外自学所精心整理的知识巨著<br/>难免会有出错的地方<br/>如果细心的你发现了小失误，可以在下方评论区告诉我，或者私信我！<br />非常感谢大家的热烈支持！</div></div>]]></content>
    
    
    
    <tags>
      
      <tag>Centos 7</tag>
      
      <tag>KVM</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>Ubuntu 22.04 LTS 基础配置</title>
    <link href="/2023/02/09/Ubuntu%2022.04%20LTS%20%E5%9F%BA%E7%A1%80%E9%85%8D%E7%BD%AE/"/>
    <url>/2023/02/09/Ubuntu%2022.04%20LTS%20%E5%9F%BA%E7%A1%80%E9%85%8D%E7%BD%AE/</url>
    
    <content type="html"><![CDATA[<meta name="referrer" content="no-referrer"/><h1 id="Ubuntu-22-04LTS-基础配置"><a href="#Ubuntu-22-04LTS-基础配置" class="headerlink" title="Ubuntu 22.04LTS 基础配置"></a><a href="https://cn.ubuntu.com/download/desktop">Ubuntu 22.04LTS</a> 基础配置</h1><p>官网镜像下载：<a href="https://cn.ubuntu.com/download/desktop">[点击这里]</a></p><h2 id="设置root用户密码"><a href="#设置root用户密码" class="headerlink" title="设置root用户密码"></a>设置root用户密码</h2><figure class="highlight csharp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><code class="hljs csharp"><span class="hljs-meta"># 登录系统 shell 命令行设置 root 用户密码</span><br>demo@demo-<span class="hljs-keyword">virtual</span>-machine:~/Desktop$ sudo passwd<br>[<span class="hljs-meta">sudo</span>] password <span class="hljs-keyword">for</span> demo:<span class="hljs-meta"># 输入 demo 用户密码 123456</span><br>New password:                       <span class="hljs-meta"># 设置 root 用户密码 123456</span><br>Retype <span class="hljs-keyword">new</span> password:<br>passwd: password updated successfully <br><span class="hljs-meta"># 切换 root 用户登录系统</span><br>demo@demo-<span class="hljs-keyword">virtual</span>-machine:~/Desktop$ su root <br>Password:<br>root@demo-<span class="hljs-keyword">virtual</span>-machine:/home/demo/Desktop<span class="hljs-meta"># cd</span><br>root@demo-<span class="hljs-keyword">virtual</span>-machine:~<span class="hljs-meta">#</span><br></code></pre></td></tr></table></figure><h2 id="配置阿里系统安装源"><a href="#配置阿里系统安装源" class="headerlink" title="配置阿里系统安装源"></a>配置阿里系统安装源</h2><p>配置系统安装源（自选一个）</p><figure class="highlight roboconf"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><code class="hljs roboconf"><span class="hljs-comment">#清华</span><br>sudo mv /etc/apt/sources.list&#123;,.<span class="hljs-attribute">bak&#125;</span><br><span class="hljs-attribute">sudo bash -c &quot;cat &gt;&gt; /etc/apt/sources.list &lt;&lt; EOF</span><br><span class="hljs-attribute">deb https</span>://mirrors<span class="hljs-variable">.tuna</span><span class="hljs-variable">.tsinghua</span><span class="hljs-variable">.edu</span><span class="hljs-variable">.cn</span>/ubuntu/ jammy main restricted universe multiverse<br>deb https://mirrors<span class="hljs-variable">.tuna</span><span class="hljs-variable">.tsinghua</span><span class="hljs-variable">.edu</span><span class="hljs-variable">.cn</span>/ubuntu/ jammy-updates main restricted universe multiverse<br>deb https://mirrors<span class="hljs-variable">.tuna</span><span class="hljs-variable">.tsinghua</span><span class="hljs-variable">.edu</span><span class="hljs-variable">.cn</span>/ubuntu/ jammy-backports main restricted universe multiverse<br>deb http://security<span class="hljs-variable">.ubuntu</span><span class="hljs-variable">.com</span>/ubuntu/ jammy-security main restricted universe multiverse<br>EOF&quot;<br><br>sudo apt-get update<br>#阿里<br>sudo mv /etc/apt/sources<span class="hljs-variable">.list</span>&#123;,<span class="hljs-variable">.bak</span>&#125;<br>sudo bash -c cat &gt;&gt; /etc/apt/sources<span class="hljs-variable">.list</span> &lt;&lt; EOF<br>deb http://mirrors<span class="hljs-variable">.aliyun</span><span class="hljs-variable">.com</span>/ubuntu/ jammy main restricted universe multiverse<br>deb-src http://mirrors<span class="hljs-variable">.aliyun</span><span class="hljs-variable">.com</span>/ubuntu/ jammy main restricted universe multiverse<br>deb http://mirrors<span class="hljs-variable">.aliyun</span><span class="hljs-variable">.com</span>/ubuntu/ jammy-security main restricted universe multiverse<br>deb-src http://mirrors<span class="hljs-variable">.aliyun</span><span class="hljs-variable">.com</span>/ubuntu/ jammy-security main restricted universe multiverse<br>deb http://mirrors<span class="hljs-variable">.aliyun</span><span class="hljs-variable">.com</span>/ubuntu/ jammy-updates main restricted universe multiverse<br>deb-src http://mirrors<span class="hljs-variable">.aliyun</span><span class="hljs-variable">.com</span>/ubuntu/ jammy-updates main restricted universe multiverse<br>deb http://mirrors<span class="hljs-variable">.aliyun</span><span class="hljs-variable">.com</span>/ubuntu/ jammy-proposed main restricted universe multiverse<br>deb-src http://mirrors<span class="hljs-variable">.aliyun</span><span class="hljs-variable">.com</span>/ubuntu/ jammy-proposed main restricted universe multiverse<br>deb http://mirrors<span class="hljs-variable">.aliyun</span><span class="hljs-variable">.com</span>/ubuntu/ jammy-backports main restricted universe multiverse<br>deb-src http://mirrors<span class="hljs-variable">.aliyun</span><span class="hljs-variable">.com</span>/ubuntu/ jammy-backports main restricted universe multiverse<br>EOF<br>sudo apt-get update<br></code></pre></td></tr></table></figure><h2 id="安装小工具"><a href="#安装小工具" class="headerlink" title="安装小工具"></a>安装小工具</h2><h3 id="安装Networkmanager-openssh-server-vim-inetutils-ping-net-tools服务"><a href="#安装Networkmanager-openssh-server-vim-inetutils-ping-net-tools服务" class="headerlink" title="安装Networkmanager,openssh-server,vim,inetutils-ping,net-tools服务"></a>安装Networkmanager,openssh-server,vim,inetutils-ping,net-tools服务</h3><figure class="highlight dos"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs dos">sudo apt-get install network-manager openssh-server vim inetutils-<span class="hljs-built_in">ping</span> <span class="hljs-built_in">net</span>-tools -y<br></code></pre></td></tr></table></figure><h3 id="开启-root-远程连接服务"><a href="#开启-root-远程连接服务" class="headerlink" title="开启 root 远程连接服务"></a>开启 root 远程连接服务</h3><h4 id="修改-sshd-config-文件"><a href="#修改-sshd-config-文件" class="headerlink" title="修改 sshd_config 文件"></a>修改 sshd_config 文件</h4><figure class="highlight awk"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs awk">sudo  vim <span class="hljs-regexp">/etc/</span>ssh/sshd_config<br><span class="hljs-comment"># 配置文件末尾处添加如下</span><br>PermitRootLogin yes<br></code></pre></td></tr></table></figure><h4 id="重启-SSH-服务"><a href="#重启-SSH-服务" class="headerlink" title="重启 SSH 服务"></a>重启 SSH 服务</h4><figure class="highlight ebnf"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs ebnf"><span class="hljs-attribute">sudo service ssh restart</span><br></code></pre></td></tr></table></figure><h2 id="设置静态ip"><a href="#设置静态ip" class="headerlink" title="设置静态ip"></a>设置静态ip</h2><h3 id="进入配置文件夹"><a href="#进入配置文件夹" class="headerlink" title="进入配置文件夹"></a>进入配置文件夹</h3><figure class="highlight tap"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs tap">root@demo-virtual-machine:~<span class="hljs-comment">#  cd /etc/netplan</span><br>root@demo-virtual-machine:~<span class="hljs-comment">#  ll</span><br>-rw-r--r--  <span class="hljs-number"> 1 </span>root root  <span class="hljs-number"> 104 </span> 8月 <span class="hljs-number"> 9 </span><span class="hljs-number"> 2022 </span>01-network-manager-all.yaml<br><span class="hljs-comment">##很显然我这里有一个01....</span><br></code></pre></td></tr></table></figure><h3 id="备份旧配置文件"><a href="#备份旧配置文件" class="headerlink" title="备份旧配置文件"></a>备份旧配置文件</h3><figure class="highlight apache"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs apache"><span class="hljs-attribute">root</span>@demo-virtual-machine:~# sudo cp <span class="hljs-number">01</span>-network-manager-<span class="hljs-literal">all</span>.yaml&#123;,.bak&#125;<br></code></pre></td></tr></table></figure><h3 id="修改配置文件"><a href="#修改配置文件" class="headerlink" title="修改配置文件"></a>修改配置文件</h3><figure class="highlight nestedtext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><code class="hljs nestedtext">root@demo-virtual-machine:~# sudo vim 01-network-manager-all.yaml<br><span class="hljs-comment">#直接复制</span><br><span class="hljs-attribute">network</span><span class="hljs-punctuation">:</span><br>  <span class="hljs-attribute">ethernets</span><span class="hljs-punctuation">:</span><br>    <span class="hljs-attribute">ens33</span><span class="hljs-punctuation">:</span><br>      <span class="hljs-attribute">dhcp4</span><span class="hljs-punctuation">:</span> <span class="hljs-string">false</span><br>      <span class="hljs-attribute">addresses</span><span class="hljs-punctuation">:</span><br>        <span class="hljs-bullet">-</span> <span class="hljs-string">192.168.48.10/24</span><br>      <span class="hljs-attribute">routes</span><span class="hljs-punctuation">:</span><br>        <span class="hljs-bullet">-</span> <span class="hljs-string">to: default</span><br>          <span class="hljs-attribute">via</span><span class="hljs-punctuation">:</span> <span class="hljs-string">192.168.48.2</span><br>      <span class="hljs-attribute">nameservers</span><span class="hljs-punctuation">:</span><br>        <span class="hljs-attribute">addresses</span><span class="hljs-punctuation">:</span> <span class="hljs-string">[192.168.48.2,114.114.114.114]</span><br>  <span class="hljs-attribute">version</span><span class="hljs-punctuation">:</span> <span class="hljs-string">2</span><br>  <br>:wq<br><br>sudo netplan apply<br></code></pre></td></tr></table></figure><div class="tbsm" style="margin-top:54px;"><div class="tbsm-top"><span><svg t="1674654360507" class="icon" viewBox="0 0 1024 1024" version="1.1" xmlns="http://www.w3.org/2000/svg" p-id="987" data-spm-anchor-id="a313x.7781069.0.i0" width="35" height="35"><path d="M410.49 97.74H155.08a56.74 56.74 0 0 0-56.84 56.73V410a56.84 56.84 0 0 0 56.84 56.84h255.41A56.83 56.83 0 0 0 467.32 410V154.58a56.83 56.83 0 0 0-56.83-56.84zM410.49 558.74H155.08a56.74 56.74 0 0 0-56.84 56.73V871a56.84 56.84 0 0 0 56.84 56.84h255.41A56.83 56.83 0 0 0 467.32 871V615.58a56.83 56.83 0 0 0-56.83-56.84zM871.49 558.74H616.08a56.74 56.74 0 0 0-56.84 56.73V871a56.84 56.84 0 0 0 56.84 56.84h255.41A56.83 56.83 0 0 0 928.32 871V615.58a56.83 56.83 0 0 0-56.83-56.84z" fill="#66EEFF" p-id="988"></path><path d="M410.49 558.74h-4.14A475 475 0 0 0 299.52 859.6a481.16 481.16 0 0 0 4.84 68.22h106.13A56.83 56.83 0 0 0 467.32 871V615.58a56.83 56.83 0 0 0-56.83-56.84zM871.49 558.74H616.08a56.74 56.74 0 0 0-56.84 56.73V871a56.84 56.84 0 0 0 56.84 56.84h255.41A56.83 56.83 0 0 0 928.32 871V615.58a56.83 56.83 0 0 0-56.83-56.84z" fill="#C2F8FF" p-id="989"></path></svg></span><span style="font-size:30px;"> 特别声明</span></div><div class="tbsm-wz">千屹博客旗下的所有文章，是通过本人课堂学习和课外自学所精心整理的知识巨著<br/>难免会有出错的地方<br/>如果细心的你发现了小失误，可以在下方评论区告诉我，或者私信我！<br />非常感谢大家的热烈支持！</div></div>]]></content>
    
    
    
    <tags>
      
      <tag>Ubuntu</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>搭建Flarum社区论坛</title>
    <link href="/2023/02/08/flarum/"/>
    <url>/2023/02/08/flarum/</url>
    
    <content type="html"><![CDATA[<meta name="referrer" content="no-referrer"/><h1 id="搭建Flarum社区论坛"><a href="#搭建Flarum社区论坛" class="headerlink" title="搭建Flarum社区论坛"></a>搭建Flarum社区论坛</h1><h2 id="关于Flarum"><a href="#关于Flarum" class="headerlink" title="关于Flarum"></a>关于<a href="https://flarum.org/"><span style="color:green">Flarum</span></a></h2><p>Flarum 是一款非常简洁的开源论坛程序。它响应快速、简便易用，拥有打造高质量社区的一切功能。同时，Flarum 高度可扩展，你可以对它进行深度定制。</p><p><img src="https://article.biliimg.com/bfs/article/5d6607a15ded62d5070a9bbf241f361c697559838.png"></p><p>Flarum 的前身是 <a href="https://github.com/esotalk/esoTalk">esoTalk</a> 和 <a href="https://fluxbb.org/">FluxBB</a>。它生来被设计如此：</p><ul><li><strong>快速、简单。</strong>不杂乱不臃肿，没有庞杂的依赖关系。Flarum 基于 PHP 语言编写，部署方便。采用 <a href="https://mithril.js.org/">Mithril</a> 界面框架，小巧而性能高。</li><li><strong>漂亮、响应式。</strong>以人为本的设计，一致直观的跨平台体验。</li><li><strong>强大、可扩展。</strong><a href="https://docs.flarum.org.cn/zh/extend">强大全面的 API</a>，灵活至极的架构。满足您定制、扩展或集成 Flarum 的需求。</li><li><strong>免费、开源</strong> Flarum 基于 <a href="https://github.com/flarum/flarum/blob/master/LICENSE">MIT 协议</a> 发布，使用无忧。</li></ul><p>您可以在这里阅读更多 <a href="https://discuss.flarum.org/d/28869-flarum-philosophy-and-values">Flarum 的哲学理念和价值观</a>。</p><h2 id="部署"><a href="#部署" class="headerlink" title="部署"></a>部署</h2><h3 id="Composer-依赖管理"><a href="#Composer-依赖管理" class="headerlink" title="Composer 依赖管理"></a>Composer 依赖管理</h3><p>Flarum 使用 <a href="https://getcomposer.org/">Composer</a> 管理自身依赖和扩展程序。 以下情况，你会用到 Composer：</p><ul><li>安装或更新 Flarum</li><li>安装、更新或卸载 Flarum 扩展程序</li></ul><p>本指南仅让您简要了解 Composer。更多信息请访问 <a href="https://getcomposer.org/doc/00-intro.md">官方文档</a>。</p><blockquote><p>COMPOSER 2.0 版本</p><p>1.0 时代，Composer 对内存的过大占用，在共享主机上导致了诸多问题。于是 2020 年 <a href="https://blog.packagist.com/composer-2-0-is-now-available/">Composer 2.0 发布</a>，这个版本对性能及内存占用问题进行了大幅改进和改善。建议您始终使用 Composer 2.0 版本。</p></blockquote><p>与其他软件一样，安装 Flarum 前，您必须先在服务器上 <a href="https://getcomposer.org/download/">安装 Composer</a> 。</p><h3 id="安装"><a href="#安装" class="headerlink" title="安装"></a>安装</h3><h4 id="服务器环境要求"><a href="#服务器环境要求" class="headerlink" title="服务器环境要求"></a>服务器环境要求</h4><p>我用的是Centos7</p><ul><li><strong>Apache</strong>（需要启用 mod_rewrite 重写模块) 或 <strong>Nginx</strong>  （我用的是Nginx）</li><li>**PHP 7.3+**，需要启用 curl, dom, exif, fileinfo, gd, json, mbstring, openssl, pdo_mysql, tokenizer, zip 扩展</li><li><strong>MySQL 5.6+&#x2F;8.0.23+</strong> 或 <strong>MariaDB 10.0.5+</strong></li><li><strong>SSH（命令行）权限</strong>，用于执行 Composer</li></ul><h4 id="安装php7-4"><a href="#安装php7-4" class="headerlink" title="安装php7.4"></a>安装php7.4</h4><figure class="highlight autoit"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><code class="hljs autoit">[root<span class="hljs-symbol">@localhost</span> ~]<span class="hljs-meta"># rpm -ivh https://dl.fedoraproject.org/pub/epel/7/aarch64/Packages/e/epel-release-7-12.noarch.rpm</span><br>[root<span class="hljs-symbol">@localhost</span> ~]<span class="hljs-meta"># rpm -ivh http://rpms.remirepo.net/enterprise/remi-release-7.rpm</span><br>[root<span class="hljs-symbol">@localhost</span> ~]<span class="hljs-meta">#  yum install -y php74-php php74-php-fpm php74-php-cli php74-php-common php74-php-devel php74-php-gd php74-php-pdo php74-php-mysql php74-php-mbstring php74-php-bcmath php74-php-xml php74-php-pecl-redis php74-php-process php74-php-intl php74-php-xmlrpc php74-php-soap php74-php-ldap php74-php-opcache </span><br>[root<span class="hljs-symbol">@localhost</span> ~]<span class="hljs-meta"># systemctlstart php74-php-fpm &amp;&amp; systemctl enable php74-php-fpm</span><br>[root<span class="hljs-symbol">@localhost</span> ~]<span class="hljs-meta"># cp /usr/bin/php74 /usr/bin/php</span><br>[root<span class="hljs-symbol">@localhost</span> ~]<span class="hljs-meta"># chmod +x /usr/bin/php</span><br>[root<span class="hljs-symbol">@localhost</span> ~]<span class="hljs-meta"># php -v</span><br></code></pre></td></tr></table></figure><h4 id="安装Nginx"><a href="#安装Nginx" class="headerlink" title="安装Nginx"></a>安装Nginx</h4><figure class="highlight autoit"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs autoit">[root<span class="hljs-symbol">@localhost</span> ~]<span class="hljs-meta"># yum install -y nginx</span><br>[root<span class="hljs-symbol">@localhost</span> ~]<span class="hljs-meta"># systemctl enable --now nginx</span><br></code></pre></td></tr></table></figure><h4 id="安装mariadb"><a href="#安装mariadb" class="headerlink" title="安装mariadb"></a>安装mariadb</h4><figure class="highlight awk"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><code class="hljs awk">[root@localhost ~]<span class="hljs-comment"># vim /etc/yum.repos.d/MariaDB.repo</span><br><br>[mariadb]<br>name = MariaDB<br>baseurl = http:<span class="hljs-regexp">//yum</span>.mariadb.org<span class="hljs-regexp">/10.3/</span>centos7-amd64/<br>gpgkey = https:<span class="hljs-regexp">//yum</span>.mariadb.org/RPM-GPG-KEY-MariaDB<br>gpgcheck = <span class="hljs-number">1</span><br>[root@localhost ~]<span class="hljs-comment"># yum clean all &amp;&amp; yum makecache</span><br>[root@localhost ~]<span class="hljs-comment"># yum install -y mariadb mariadb-server</span><br>[root@localhost ~]<span class="hljs-comment"># systemctl enable --now mariadb</span><br>[root@localhost ~]<span class="hljs-comment"># mysqladmin -uroot password &quot;000000&quot;</span><br>[root@localhost ~]<span class="hljs-comment"># mysql -uroot -p000000</span><br>MariaDB [(none)]&gt; create database flarum;<br>MariaDB [(none)]&gt; <span class="hljs-keyword">exit</span><br></code></pre></td></tr></table></figure><h3 id="安装flarum"><a href="#安装flarum" class="headerlink" title="安装flarum"></a>安装flarum</h3><p>Flarum 使用 <a href="https://getcomposer.org/">Composer</a> 来管理其依赖包和扩展程序。如果你还不认识 Composer，可以先 <a href="https://docs.flarum.org.cn/zh/composer">简单了解</a> 一下。安装 Composer 后，在要安装 Flarum 的空白目录下执行此命令：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">composer create-project flarum/flarum .<br></code></pre></td></tr></table></figure><p>等待安装的空隙，您可以先去配置 Web 服务器。请确保网站根目录（Webroot）设置为 <code>/&lt;Flarum 根目录路径&gt;/public</code>，并按照下面的说明设置 <a href="https://docs.flarum.org.cn/zh/install#url-%E9%87%8D%E5%86%99">URL 重写</a>。</p><p>一切就绪后，在浏览器中访问您的论坛网址，并根据安装向导完成安装。</p><h4 id="安装flarum源码"><a href="#安装flarum源码" class="headerlink" title="安装flarum源码"></a>安装flarum源码</h4><p>在一个空目录里进行安装</p><figure class="highlight autoit"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs autoit">[root<span class="hljs-symbol">@localhost</span> ~]<span class="hljs-meta"># mkdir /flarum</span><br>[root<span class="hljs-symbol">@localhost</span> ~]<span class="hljs-meta"># cd /flarum/</span><br>[root<span class="hljs-symbol">@localhost</span> flarum]<span class="hljs-meta"># composer create-project flarum/flarum .</span><br></code></pre></td></tr></table></figure><h4 id="更改nginx配置文件"><a href="#更改nginx配置文件" class="headerlink" title="更改nginx配置文件"></a>更改nginx配置文件</h4><figure class="highlight awk"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><code class="hljs awk">[root@localhost ~]<span class="hljs-comment"># vi /etc/nginx/nginx.conf</span><br>server &#123;<br>    listen <span class="hljs-number">80</span>;<br>    server_name qianyios;<br>    root <span class="hljs-regexp">/flarum/</span>public;<br>    index index.html index.htm index.php;<br>    location / &#123;<br>        try_files <span class="hljs-variable">$uri</span> <span class="hljs-variable">$uri</span><span class="hljs-regexp">/ /i</span>ndex.php<span class="hljs-variable">$is_args</span><span class="hljs-variable">$args</span>;<br>        include <span class="hljs-regexp">/flarum/</span>.nginx.conf;<br>    &#125;<br>    location ~ \.php$ &#123;<br>        try_files <span class="hljs-variable">$uri</span> =<span class="hljs-number">404</span>;<br>        include fastcgi.conf;<br>        fastcgi_pass <span class="hljs-number">127.0</span>.<span class="hljs-number">0.1</span>:<span class="hljs-number">9000</span>;<br>    &#125;<br>&#125;<br>[root@localhost ~]<span class="hljs-comment"># nginx -s reload</span><br></code></pre></td></tr></table></figure><h4 id="赋予权限"><a href="#赋予权限" class="headerlink" title="赋予权限"></a>赋予权限</h4><figure class="highlight autoit"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><code class="hljs autoit">[root<span class="hljs-symbol">@localhost</span> ~]<span class="hljs-meta"># chmod 775 -R /flarum</span><br>[root<span class="hljs-symbol">@localhost</span> ~]<span class="hljs-meta"># chown -R apache:apache /flarum</span><br>以下权限确保在selinux开启的状态下运行<br>[root<span class="hljs-symbol">@localhost</span> ~]<span class="hljs-meta"># getenforce</span><br>Enforcing<br>[root<span class="hljs-symbol">@localhost</span> ~]<span class="hljs-meta"># chcon -R -t httpd_sys_rw_content_t /flarum</span><br>[root<span class="hljs-symbol">@localhost</span> ~]<span class="hljs-meta"># nginx -s reload</span><br></code></pre></td></tr></table></figure><h3 id="访问网页"><a href="#访问网页" class="headerlink" title="访问网页"></a>访问网页</h3><p>去浏览器访问你的ip即刻</p><p><img src="https://article.biliimg.com/bfs/article/742fc590f736c16d73f657874968f6b9697559838.png" alt="image-20230208161549333"></p><p><img src="https://article.biliimg.com/bfs/article/14afad3c641c46b88dfdf53df2899d0c697559838.png" alt="image-20230208161651938"></p><h2 id="更改中文语言"><a href="#更改中文语言" class="headerlink" title="更改中文语言"></a>更改中文语言</h2><h3 id="安装中文汉化包"><a href="#安装中文汉化包" class="headerlink" title="安装中文汉化包"></a>安装中文汉化包</h3><figure class="highlight autoit"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs autoit">[root<span class="hljs-symbol">@localhost</span> flarum]<span class="hljs-meta"># composer require flarum-lang/chinese-simplified</span><br>[root<span class="hljs-symbol">@localhost</span> flarum]<span class="hljs-meta"># php flarum cache:clear</span><br></code></pre></td></tr></table></figure><p><img src="https://article.biliimg.com/bfs/article/a3fd564baa33f425f42e31a57958db86697559838.png" alt="image-20230208161723663"></p><p><img src="https://article.biliimg.com/bfs/article/3a0c3eb4b4c2de4661e6e4b94245fcdb697559838.png" alt="image-20230208162107235"></p><div class="tbsm" style="margin-top:54px;"><div class="tbsm-top"><span><svg t="1674654360507" class="icon" viewBox="0 0 1024 1024" version="1.1" xmlns="http://www.w3.org/2000/svg" p-id="987" data-spm-anchor-id="a313x.7781069.0.i0" width="35" height="35"><path d="M410.49 97.74H155.08a56.74 56.74 0 0 0-56.84 56.73V410a56.84 56.84 0 0 0 56.84 56.84h255.41A56.83 56.83 0 0 0 467.32 410V154.58a56.83 56.83 0 0 0-56.83-56.84zM410.49 558.74H155.08a56.74 56.74 0 0 0-56.84 56.73V871a56.84 56.84 0 0 0 56.84 56.84h255.41A56.83 56.83 0 0 0 467.32 871V615.58a56.83 56.83 0 0 0-56.83-56.84zM871.49 558.74H616.08a56.74 56.74 0 0 0-56.84 56.73V871a56.84 56.84 0 0 0 56.84 56.84h255.41A56.83 56.83 0 0 0 928.32 871V615.58a56.83 56.83 0 0 0-56.83-56.84z" fill="#66EEFF" p-id="988"></path><path d="M410.49 558.74h-4.14A475 475 0 0 0 299.52 859.6a481.16 481.16 0 0 0 4.84 68.22h106.13A56.83 56.83 0 0 0 467.32 871V615.58a56.83 56.83 0 0 0-56.83-56.84zM871.49 558.74H616.08a56.74 56.74 0 0 0-56.84 56.73V871a56.84 56.84 0 0 0 56.84 56.84h255.41A56.83 56.83 0 0 0 928.32 871V615.58a56.83 56.83 0 0 0-56.83-56.84z" fill="#C2F8FF" p-id="989"></path></svg></span><span style="font-size:30px;"> 特别声明</span></div><div class="tbsm-wz">千屹博客旗下的所有文章，是通过本人课堂学习和课外自学所精心整理的知识巨著<br/>难免会有出错的地方<br/>如果细心的你发现了小失误，可以在下方评论区告诉我，或者私信我！<br />非常感谢大家的热烈支持！</div></div>]]></content>
    
    
    
    <tags>
      
      <tag>Centos 7</tag>
      
      <tag>Lnmp</tag>
      
      <tag>Flarum</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>基于Lnmp部署WordPress博客</title>
    <link href="/2023/01/23/wordpress/"/>
    <url>/2023/01/23/wordpress/</url>
    
    <content type="html"><![CDATA[<h1 id="基于Lnmp部署WordPress博客"><a href="#基于Lnmp部署WordPress博客" class="headerlink" title="基于Lnmp部署WordPress博客"></a>基于Lnmp部署WordPress博客</h1><h2 id="配置基础环境"><a href="#配置基础环境" class="headerlink" title="配置基础环境"></a>配置基础环境</h2><figure class="highlight awk"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><code class="hljs awk">mkdir repo.bak<br>mv <span class="hljs-regexp">/etc/yum</span>.repos.d<span class="hljs-regexp">/* repo.bak/</span><br>wget -O <span class="hljs-regexp">/etc/yum</span>.repos.d<span class="hljs-regexp">/CentOS-Base.repo https:/</span><span class="hljs-regexp">/mirrors.aliyun.com/</span>repo/Centos-<span class="hljs-number">7</span>.repo<br>yum clean all &amp;&amp; yum makecache<br>systemctl disable firewalld --now<br>sed -i <span class="hljs-string">&#x27;s/SELINUX=enforcing/SELINUX=disabled/g&#x27;</span> <span class="hljs-regexp">/etc/</span>sysconfig/selinux<br>setenforce <span class="hljs-number">0</span><br>yum update -y<br></code></pre></td></tr></table></figure><h2 id="安装epel-release源和安装remi源"><a href="#安装epel-release源和安装remi源" class="headerlink" title="安装epel-release源和安装remi源"></a>安装epel-release源和安装remi源</h2><figure class="highlight awk"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs awk">rpm -ivh https:<span class="hljs-regexp">//</span>dl.fedoraproject.org<span class="hljs-regexp">/pub/</span>epel<span class="hljs-regexp">/7/</span>aarch64<span class="hljs-regexp">/Packages/</span>e/epel-release-<span class="hljs-number">7</span>-<span class="hljs-number">12</span>.noarch.rpm<br>rpm -ivh http:<span class="hljs-regexp">//</span>rpms.remirepo.net<span class="hljs-regexp">/enterprise/</span>remi-release-<span class="hljs-number">7</span>.rpm<br>yum clean all &amp;&amp; yum makecache<br></code></pre></td></tr></table></figure><h2 id="安装PHP扩展"><a href="#安装PHP扩展" class="headerlink" title="安装PHP扩展"></a>安装PHP扩展</h2><figure class="highlight smali"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><code class="hljs smali"> yum install -y php74-php php74-php-fpm php74-php-cli php74-php-common php74-php-devel php74-php-gd php74-php-pdo php74-php-mysql php74-php-mbstring php74-php-bcmath php74-php-xml php74-php-pecl-redis php74-php-process php74-php-intl php74-php-xmlrpc php74-php-soap php74-php-ldap php74-php-opcache <span class="hljs-keyword"></span><br><span class="hljs-keyword">system</span>ctl enable --now php74-php-fpm<span class="hljs-keyword"></span><br><span class="hljs-keyword">system</span>ctl restart nginx<br><span class="hljs-comment">#将php74版本替换原来的php版本</span><br>cp /usr/bin/php74 /usr/bin/php<br>chmod +x /usr/bin/php<br>php -v<br><br></code></pre></td></tr></table></figure><h2 id="安装Nginx"><a href="#安装Nginx" class="headerlink" title="安装Nginx"></a>安装Nginx</h2><figure class="highlight pgsql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs pgsql">yum install -y nginx<br>systemctl <span class="hljs-keyword">enable</span> <span class="hljs-comment">--now nginx</span><br></code></pre></td></tr></table></figure><h2 id="编辑Nginx配置文件"><a href="#编辑Nginx配置文件" class="headerlink" title="编辑Nginx配置文件"></a>编辑Nginx配置文件</h2><figure class="highlight jboss-cli"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><code class="hljs jboss-cli">vi <span class="hljs-string">/etc/nginx/nginx.conf</span>    <br>    <br>    server &#123;<br>        listen       80;<br>        listen       [::]<span class="hljs-function">:80</span>;<br>        server_name  _;<br>        root         <span class="hljs-string">/opt/qianyios</span>;   <span class="hljs-params">----</span>设置网站目录<br>        index        index.php;       <span class="hljs-params">----</span>设置默认文件<br>        <span class="hljs-comment"># Load configuration files for the default server block.</span><br>        include <span class="hljs-string">/etc/nginx/default.d/</span>*<span class="hljs-string">.conf</span>;<br><br>        error_page 404 <span class="hljs-string">/404.html</span>;<br>        location = <span class="hljs-string">/404.html</span> &#123;<br>        &#125;<br><br>        error_page 500 502 503 504 <span class="hljs-string">/50x.html</span>;<br>        location = <span class="hljs-string">/50x.html</span> &#123;<br>        &#125;<br>         location ~ \<span class="hljs-string">.php</span>$ &#123;               <span class="hljs-params">------</span><br>         root       <span class="hljs-string">/opt/qianyios</span>;<br>         fastcgi_pass   127.0.0.1<span class="hljs-function">:9000</span>;<br>         fastcgi_index  index.php;<br>         fastcgi_param  SCRIPT_FILENAME<br>$document_root$fastcgi_script_name;<br>         include       fastcgi_params;<br>        &#125;                                  <span class="hljs-params">------</span><br>&#125;<br></code></pre></td></tr></table></figure><h2 id="安装mariadb"><a href="#安装mariadb" class="headerlink" title="安装mariadb"></a>安装mariadb</h2><figure class="highlight awk"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><code class="hljs awk">yum install -y mariadb mariadb-server<br>systemctl enable --now mariadb<br>mysqladmin -uroot password <span class="hljs-string">&quot;000000&quot;</span><br>mysql -uroot -p000000<br>create database wordpress;<br><span class="hljs-keyword">exit</span><br><br></code></pre></td></tr></table></figure><h2 id="安装wordpress"><a href="#安装wordpress" class="headerlink" title="安装wordpress"></a>安装wordpress</h2><p><a href="https://cn.wordpress.org/download/#download-install">点此下载</a>最新版tar.gz文件</p><figure class="highlight awk"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><code class="hljs awk">wget https:<span class="hljs-regexp">//</span>cn.wordpress.org/wordpress-<span class="hljs-number">6.1</span>.<span class="hljs-number">1</span>-zh_CN.tar.gz<br>tar -xf wordpress-<span class="hljs-number">6.1</span>.<span class="hljs-number">1</span>-zh_CN.tar.gz<br>mkdir <span class="hljs-regexp">/opt/</span>qianyios<br>mv wordpress<span class="hljs-regexp">/* /</span>opt<span class="hljs-regexp">/qianyios/</span><br>cd <span class="hljs-regexp">/opt/</span>qianyios/<br>cp wp-config-sample.php wp-config.php<br>vi wp-config.php<br><span class="hljs-regexp">/** The name of the database for WordPress */</span><br>define( <span class="hljs-string">&#x27;DB_NAME&#x27;</span>, <span class="hljs-string">&#x27;wordpress&#x27;</span> );    ----设置数据库名字<br><br><span class="hljs-regexp">/** Database username */</span><br>define( <span class="hljs-string">&#x27;DB_USER&#x27;</span>, <span class="hljs-string">&#x27;root&#x27;</span> );         ----设置数据库用户名<br><br><span class="hljs-regexp">/** Database password */</span><br>define( <span class="hljs-string">&#x27;DB_PASSWORD&#x27;</span>, <span class="hljs-string">&#x27;000000&#x27;</span> );   ----设置数据库密码<br><br>退出<br>nginx -s reload<br></code></pre></td></tr></table></figure><p>随后就可以访问<a href="http://ip/">http://ip/</a>   去安装wordpress了</p><div class="tbsm" style="margin-top:54px;"><div class="tbsm-top"><span><svg t="1674654360507" class="icon" viewBox="0 0 1024 1024" version="1.1" xmlns="http://www.w3.org/2000/svg" p-id="987" data-spm-anchor-id="a313x.7781069.0.i0" width="35" height="35"><path d="M410.49 97.74H155.08a56.74 56.74 0 0 0-56.84 56.73V410a56.84 56.84 0 0 0 56.84 56.84h255.41A56.83 56.83 0 0 0 467.32 410V154.58a56.83 56.83 0 0 0-56.83-56.84zM410.49 558.74H155.08a56.74 56.74 0 0 0-56.84 56.73V871a56.84 56.84 0 0 0 56.84 56.84h255.41A56.83 56.83 0 0 0 467.32 871V615.58a56.83 56.83 0 0 0-56.83-56.84zM871.49 558.74H616.08a56.74 56.74 0 0 0-56.84 56.73V871a56.84 56.84 0 0 0 56.84 56.84h255.41A56.83 56.83 0 0 0 928.32 871V615.58a56.83 56.83 0 0 0-56.83-56.84z" fill="#66EEFF" p-id="988"></path><path d="M410.49 558.74h-4.14A475 475 0 0 0 299.52 859.6a481.16 481.16 0 0 0 4.84 68.22h106.13A56.83 56.83 0 0 0 467.32 871V615.58a56.83 56.83 0 0 0-56.83-56.84zM871.49 558.74H616.08a56.74 56.74 0 0 0-56.84 56.73V871a56.84 56.84 0 0 0 56.84 56.84h255.41A56.83 56.83 0 0 0 928.32 871V615.58a56.83 56.83 0 0 0-56.83-56.84z" fill="#C2F8FF" p-id="989"></path></svg></span><span style="font-size:30px;"> 特别声明</span></div><div class="tbsm-wz">千屹博客旗下的所有文章，是通过本人课堂学习和课外自学所精心整理的知识巨著<br/>难免会有出错的地方<br/>如果细心的你发现了小失误，可以在下方评论区告诉我，或者私信我！<br />非常感谢大家的热烈支持！</div></div>]]></content>
    
    
    
    <tags>
      
      <tag>Centos 7</tag>
      
      <tag>Lnmp</tag>
      
      <tag>WordPress</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>基于Docker部署Hexo框架</title>
    <link href="/2023/01/21/hexo/"/>
    <url>/2023/01/21/hexo/</url>
    
    <content type="html"><![CDATA[<h1 id="基于Docker部署Hexo框架"><a href="#基于Docker部署Hexo框架" class="headerlink" title="基于Docker部署Hexo框架"></a>基于Docker部署Hexo框架</h1><h2 id="创建dockerfile文件夹"><a href="#创建dockerfile文件夹" class="headerlink" title="创建dockerfile文件夹"></a>创建dockerfile文件夹</h2><figure class="highlight arduino"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs arduino">mkdir dockerfile<br></code></pre></td></tr></table></figure><h2 id="使用vim创建和编辑Dockerfile"><a href="#使用vim创建和编辑Dockerfile" class="headerlink" title="使用vim创建和编辑Dockerfile"></a>使用vim创建和编辑Dockerfile</h2><p>vim dockerfile&#x2F;Dockerfile</p><figure class="highlight dockerfile"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><code class="hljs dockerfile"><span class="hljs-comment"># 使用最新的node镜像作为基础环境  </span><br><span class="hljs-keyword">FROM</span> node:latest  <br><span class="hljs-comment"># 设置临时工作目录  </span><br><span class="hljs-keyword">WORKDIR</span><span class="language-bash"> /usr/blog</span><br><span class="hljs-comment"># 配置 npm 镜像站点  </span><br><span class="hljs-keyword">RUN</span><span class="language-bash"> npm config <span class="hljs-built_in">set</span> registry https://registry.npm.taobao.org  </span><br><span class="hljs-comment"># 安装 hexo-cli  </span><br><span class="hljs-keyword">RUN</span><span class="language-bash"> npm install hexo-cli -g  </span><br><span class="hljs-comment"># 初始化 hexo blog  </span><br><span class="hljs-keyword">RUN</span><span class="language-bash"> hexo init  </span><br><span class="hljs-comment"># hexo 默认端口号 4000  </span><br><span class="hljs-keyword">EXPOSE</span> <span class="hljs-number">4000</span><br></code></pre></td></tr></table></figure><h2 id="构建镜像"><a href="#构建镜像" class="headerlink" title="构建镜像"></a>构建镜像</h2><figure class="highlight awk"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs awk">docker build -t hexo-image <span class="hljs-regexp">/root/</span>dockerfile/<br></code></pre></td></tr></table></figure><h2 id="创建容器"><a href="#创建容器" class="headerlink" title="创建容器"></a>创建容器</h2><figure class="highlight awk"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs awk">docker run -itd -v <span class="hljs-regexp">/root/</span>blog:<span class="hljs-regexp">/usr/</span>blog -p <span class="hljs-number">4000</span>:<span class="hljs-number">4000</span> --name hexo-blog hexo-image<br></code></pre></td></tr></table></figure><p>-v &#x2F;root&#x2F;blog:&#x2F;usr&#x2F;blog  可以实现把容器中的&#x2F;usr&#x2F;blog挂载到宿主机的&#x2F;root&#x2F;blog，非常方便</p><figure class="highlight routeros"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs routeros">docker update hexo-blog <span class="hljs-attribute">--restart</span>=always <br><span class="hljs-comment">#增加开机自启动属性</span><br></code></pre></td></tr></table></figure><h2 id="查看容器id"><a href="#查看容器id" class="headerlink" title="查看容器id"></a>查看容器id</h2><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs css">docker ps -<span class="hljs-selector-tag">a</span><br></code></pre></td></tr></table></figure><h2 id="加入容器"><a href="#加入容器" class="headerlink" title="加入容器"></a>加入容器</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs bash">docker <span class="hljs-built_in">exec</span> -it 容器<span class="hljs-built_in">id</span> /bin/bash<br><span class="hljs-comment">#也可以是名字</span><br>docker <span class="hljs-built_in">exec</span> -it hexo-blog /bin/bash<br></code></pre></td></tr></table></figure><h2 id="开启服务"><a href="#开启服务" class="headerlink" title="开启服务"></a>开启服务</h2><figure class="highlight ebnf"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs ebnf"><span class="hljs-attribute">hexo s</span><br></code></pre></td></tr></table></figure><div class="tbsm" style="margin-top:54px;"><div class="tbsm-top"><span><svg t="1674654360507" class="icon" viewBox="0 0 1024 1024" version="1.1" xmlns="http://www.w3.org/2000/svg" p-id="987" data-spm-anchor-id="a313x.7781069.0.i0" width="35" height="35"><path d="M410.49 97.74H155.08a56.74 56.74 0 0 0-56.84 56.73V410a56.84 56.84 0 0 0 56.84 56.84h255.41A56.83 56.83 0 0 0 467.32 410V154.58a56.83 56.83 0 0 0-56.83-56.84zM410.49 558.74H155.08a56.74 56.74 0 0 0-56.84 56.73V871a56.84 56.84 0 0 0 56.84 56.84h255.41A56.83 56.83 0 0 0 467.32 871V615.58a56.83 56.83 0 0 0-56.83-56.84zM871.49 558.74H616.08a56.74 56.74 0 0 0-56.84 56.73V871a56.84 56.84 0 0 0 56.84 56.84h255.41A56.83 56.83 0 0 0 928.32 871V615.58a56.83 56.83 0 0 0-56.83-56.84z" fill="#66EEFF" p-id="988"></path><path d="M410.49 558.74h-4.14A475 475 0 0 0 299.52 859.6a481.16 481.16 0 0 0 4.84 68.22h106.13A56.83 56.83 0 0 0 467.32 871V615.58a56.83 56.83 0 0 0-56.83-56.84zM871.49 558.74H616.08a56.74 56.74 0 0 0-56.84 56.73V871a56.84 56.84 0 0 0 56.84 56.84h255.41A56.83 56.83 0 0 0 928.32 871V615.58a56.83 56.83 0 0 0-56.83-56.84z" fill="#C2F8FF" p-id="989"></path></svg></span><span style="font-size:30px;"> 特别声明</span></div><div class="tbsm-wz">千屹博客旗下的所有文章，是通过本人课堂学习和课外自学所精心整理的知识巨著<br/>难免会有出错的地方<br/>如果细心的你发现了小失误，可以在下方评论区告诉我，或者私信我！<br />非常感谢大家的热烈支持！</div></div>]]></content>
    
    
    
    <tags>
      
      <tag>Centos 8</tag>
      
      <tag>Hexo</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>基于LAMP部署Discuz论坛</title>
    <link href="/2023/01/20/LAMP/"/>
    <url>/2023/01/20/LAMP/</url>
    
    <content type="html"><![CDATA[<h1 id="基于LAMP部署Discuz论坛"><a href="#基于LAMP部署Discuz论坛" class="headerlink" title="基于LAMP部署Discuz论坛"></a>基于LAMP部署Discuz论坛</h1><p>系统：Centos 7</p><h2 id="配置阿里yum"><a href="#配置阿里yum" class="headerlink" title="配置阿里yum"></a>配置阿里yum</h2><figure class="highlight awk"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><code class="hljs awk">mkdir repo.bak<br>mv <span class="hljs-regexp">/etc/yum</span>.repos.d<span class="hljs-regexp">/* repo.bak/</span><br>wget -O <span class="hljs-regexp">/etc/yum</span>.repos.d<span class="hljs-regexp">/CentOS-Base.repo https:/</span><span class="hljs-regexp">/mirrors.aliyun.com/</span>repo/Centos-<span class="hljs-number">7</span>.repo<br>yum clean all &amp;&amp; yum makecache<br>systemctl disable firewalld --now<br>sed -i <span class="hljs-string">&#x27;s/SELINUX=enforcing/SELINUX=disabled/g&#x27;</span> <span class="hljs-regexp">/etc/</span>sysconfig/selinux<br>setenforce <span class="hljs-number">0</span><br>yum update -y<br></code></pre></td></tr></table></figure><h2 id="安装apache"><a href="#安装apache" class="headerlink" title="安装apache"></a>安装apache</h2><figure class="highlight pgsql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs pgsql">yum install -y httpd<br>systemctl <span class="hljs-keyword">enable</span> <span class="hljs-comment">--now httpd</span><br></code></pre></td></tr></table></figure><h2 id="安装epel-release源和安装remi源"><a href="#安装epel-release源和安装remi源" class="headerlink" title="安装epel-release源和安装remi源"></a>安装epel-release源和安装remi源</h2><figure class="highlight awk"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs awk">rpm -ivh https:<span class="hljs-regexp">//</span>dl.fedoraproject.org<span class="hljs-regexp">/pub/</span>epel<span class="hljs-regexp">/7/</span>aarch64<span class="hljs-regexp">/Packages/</span>e/epel-release-<span class="hljs-number">7</span>-<span class="hljs-number">12</span>.noarch.rpm<br>rpm -ivh http:<span class="hljs-regexp">//</span>rpms.remirepo.net<span class="hljs-regexp">/enterprise/</span>remi-release-<span class="hljs-number">7</span>.rpm<br></code></pre></td></tr></table></figure><h2 id="安装PHP扩展"><a href="#安装PHP扩展" class="headerlink" title="安装PHP扩展"></a>安装PHP扩展</h2><figure class="highlight smali"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><code class="hljs smali"> yum install -y php74-php php74-php-fpm php74-php-cli php74-php-common php74-php-devel php74-php-gd php74-php-pdo php74-php-mysql php74-php-mbstring php74-php-bcmath php74-php-xml php74-php-pecl-redis php74-php-process php74-php-intl php74-php-xmlrpc php74-php-soap php74-php-ldap php74-php-opcache <span class="hljs-keyword"></span><br><span class="hljs-keyword">system</span>ctl restart httpd<br><span class="hljs-comment">#将php74版本替换原来的php版本</span><br>cp /usr/bin/php74 /usr/bin/php<br>chmod +x /usr/bin/php<br>php -v<br></code></pre></td></tr></table></figure><h2 id="安装mariadb数据库并且修改密码"><a href="#安装mariadb数据库并且修改密码" class="headerlink" title="安装mariadb数据库并且修改密码"></a>安装mariadb数据库并且修改密码</h2><figure class="highlight pgsql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><code class="hljs pgsql"> yum install -y mariadb mariadb-<span class="hljs-keyword">server</span><br> systemctl <span class="hljs-keyword">enable</span> <span class="hljs-comment">--now mariadb</span><br> mysqladmin -uroot <span class="hljs-keyword">password</span> &quot;000000&quot;<br> <br> [root@lamp ~]# mysql -uroot -p000000<br>Welcome <span class="hljs-keyword">to</span> the MariaDB monitor.  Commands <span class="hljs-keyword">end</span> <span class="hljs-keyword">with</span> ; <span class="hljs-keyword">or</span> \g.<br>Your MariaDB <span class="hljs-keyword">connection</span> id <span class="hljs-keyword">is</span> <span class="hljs-number">6</span><br><span class="hljs-keyword">Server</span> <span class="hljs-keyword">version</span>: <span class="hljs-number">5.5</span><span class="hljs-number">.68</span>-MariaDB MariaDB <span class="hljs-keyword">Server</span><br><br>Copyright (c) <span class="hljs-number">2000</span>, <span class="hljs-number">2018</span>, Oracle, MariaDB Corporation Ab <span class="hljs-keyword">and</span> others.<br><br><span class="hljs-keyword">Type</span> <span class="hljs-string">&#x27;help;&#x27;</span> <span class="hljs-keyword">or</span> <span class="hljs-string">&#x27;\h&#x27;</span> <span class="hljs-keyword">for</span> help. <span class="hljs-keyword">Type</span> <span class="hljs-string">&#x27;\c&#x27;</span> <span class="hljs-keyword">to</span> clear the <span class="hljs-keyword">current</span> <span class="hljs-keyword">input</span> <span class="hljs-keyword">statement</span>.<br><br>MariaDB [(<span class="hljs-keyword">none</span>)]&gt; <span class="hljs-keyword">show</span> databases;<br>+<span class="hljs-comment">--------------------+</span><br>| <span class="hljs-keyword">Database</span>           |<br>+<span class="hljs-comment">--------------------+</span><br>| information_schema |<br>| mysql              |<br>| performance_schema |<br>| test               |<br>+<span class="hljs-comment">--------------------+</span><br><span class="hljs-number">4</span> <span class="hljs-keyword">rows</span> <span class="hljs-keyword">in</span> <span class="hljs-keyword">set</span> (<span class="hljs-number">0.00</span> sec)<br><br></code></pre></td></tr></table></figure><h2 id="安装Discuz！"><a href="#安装Discuz！" class="headerlink" title="安装Discuz！"></a>安装Discuz！</h2><p>前往<a href="https://www.discuz.net/download.html">官网</a>下载最新 【简体中文】zip 下载之后上传到root目录下  我这里下载的是X3.5 简体中文</p><figure class="highlight awk"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><code class="hljs awk">[root@localhost ~]<span class="hljs-comment"># ll</span><br>total <span class="hljs-number">11424</span><br>-rw-------. <span class="hljs-number">1</span> root root     <span class="hljs-number">1284</span> Nov <span class="hljs-number">19</span> <span class="hljs-number">17</span>:<span class="hljs-number">27</span> anaconda-ks.cfg<br>-rw-r--r--. <span class="hljs-number">1</span> root root <span class="hljs-number">11693954</span> Jan <span class="hljs-number">20</span> <span class="hljs-number">22</span>:<span class="hljs-number">48</span> Discuz_X3.<span class="hljs-number">5</span>_SC_UTF8_20221231.zip<br>drwxr-xr-x. <span class="hljs-number">2</span> root root      <span class="hljs-number">238</span> Nov <span class="hljs-number">19</span> <span class="hljs-number">17</span>:<span class="hljs-number">59</span> repo.bak<br><span class="hljs-comment">#安装解压工具，并解压</span><br>yum install -y unzip<br>unzip Discuz_X3.<span class="hljs-number">5</span>_SC_UTF8_20221231.zip -d discuz<br>cp -rf discuz<span class="hljs-regexp">/upload/</span>* <span class="hljs-regexp">/var/</span>www<span class="hljs-regexp">/html/</span><br>chmod <span class="hljs-number">777</span> -R <span class="hljs-regexp">/var/</span>www<span class="hljs-regexp">/html/</span><br>systemctl restart httpd<br></code></pre></td></tr></table></figure><p>然后你就可以访问<a href="http://ip/%E8%BF%9B%E8%A1%8C%E5%AE%89%E8%A3%85%E4%BA%86">http://ip/进行安装了</a></p><p>数据库用户名:  root</p><p>数据库密码:000000  （我上面设置的是这个）</p><p>管理员账户和密码，要记好！</p><div class="tbsm" style="margin-top:54px;"><div class="tbsm-top"><span><svg t="1674654360507" class="icon" viewBox="0 0 1024 1024" version="1.1" xmlns="http://www.w3.org/2000/svg" p-id="987" data-spm-anchor-id="a313x.7781069.0.i0" width="35" height="35"><path d="M410.49 97.74H155.08a56.74 56.74 0 0 0-56.84 56.73V410a56.84 56.84 0 0 0 56.84 56.84h255.41A56.83 56.83 0 0 0 467.32 410V154.58a56.83 56.83 0 0 0-56.83-56.84zM410.49 558.74H155.08a56.74 56.74 0 0 0-56.84 56.73V871a56.84 56.84 0 0 0 56.84 56.84h255.41A56.83 56.83 0 0 0 467.32 871V615.58a56.83 56.83 0 0 0-56.83-56.84zM871.49 558.74H616.08a56.74 56.74 0 0 0-56.84 56.73V871a56.84 56.84 0 0 0 56.84 56.84h255.41A56.83 56.83 0 0 0 928.32 871V615.58a56.83 56.83 0 0 0-56.83-56.84z" fill="#66EEFF" p-id="988"></path><path d="M410.49 558.74h-4.14A475 475 0 0 0 299.52 859.6a481.16 481.16 0 0 0 4.84 68.22h106.13A56.83 56.83 0 0 0 467.32 871V615.58a56.83 56.83 0 0 0-56.83-56.84zM871.49 558.74H616.08a56.74 56.74 0 0 0-56.84 56.73V871a56.84 56.84 0 0 0 56.84 56.84h255.41A56.83 56.83 0 0 0 928.32 871V615.58a56.83 56.83 0 0 0-56.83-56.84z" fill="#C2F8FF" p-id="989"></path></svg></span><span style="font-size:30px;"> 特别声明</span></div><div class="tbsm-wz">千屹博客旗下的所有文章，是通过本人课堂学习和课外自学所精心整理的知识巨著<br/>难免会有出错的地方<br/>如果细心的你发现了小失误，可以在下方评论区告诉我，或者私信我！<br />非常感谢大家的热烈支持！</div></div>]]></content>
    
    
    
    <tags>
      
      <tag>Centos 7</tag>
      
      <tag>Lamp</tag>
      
      <tag>Discuz</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>Mysql笔记</title>
    <link href="/2023/01/20/mysql/"/>
    <url>/2023/01/20/mysql/</url>
    
    <content type="html"><![CDATA[<h1 id="Mysql笔记"><a href="#Mysql笔记" class="headerlink" title="Mysql笔记"></a>Mysql笔记</h1><h2 id="数据库的创建和管理"><a href="#数据库的创建和管理" class="headerlink" title="数据库的创建和管理"></a>数据库的创建和管理</h2><h3 id="创建数据库"><a href="#创建数据库" class="headerlink" title="创建数据库"></a>创建数据库</h3><figure class="highlight pgsql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><code class="hljs pgsql"><span class="hljs-keyword">create</span> <span class="hljs-keyword">database</span> 数据库名字<br><span class="hljs-keyword">default</span> <span class="hljs-type">character</span> <span class="hljs-keyword">set</span> 字符集名字<br><span class="hljs-keyword">Default</span> <span class="hljs-keyword">collate</span> 排序规则名 ;<br>例子：<br><span class="hljs-keyword">create</span> <span class="hljs-keyword">database</span> webinfo<br><span class="hljs-keyword">default</span> <span class="hljs-type">character</span> <span class="hljs-keyword">set</span> utf8mb4<br><span class="hljs-keyword">Default</span> <span class="hljs-keyword">collate</span> utf8mb4_general_ci;<br></code></pre></td></tr></table></figure><h3 id="显示当前所有的数据库列表"><a href="#显示当前所有的数据库列表" class="headerlink" title="显示当前所有的数据库列表"></a>显示当前所有的数据库列表</h3><figure class="highlight abnf"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs abnf">Show databases<span class="hljs-comment">;</span><br></code></pre></td></tr></table></figure><h3 id="指定默认的数据库列表"><a href="#指定默认的数据库列表" class="headerlink" title="指定默认的数据库列表"></a>指定默认的数据库列表</h3><p>Use 数据库名字;</p><figure class="highlight abnf"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs abnf">use stuinfo<span class="hljs-comment">;</span><br></code></pre></td></tr></table></figure><h3 id="使用alter-database-语句修改数据库"><a href="#使用alter-database-语句修改数据库" class="headerlink" title="使用alter database 语句修改数据库"></a>使用alter database 语句修改数据库</h3><figure class="highlight pgsql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><code class="hljs pgsql"><span class="hljs-keyword">Alter</span> <span class="hljs-keyword">database</span> 数据库名字<br><span class="hljs-keyword">Default</span> <span class="hljs-type">character</span> <span class="hljs-keyword">set</span> 字符集名<br><span class="hljs-keyword">Default</span> <span class="hljs-keyword">collate</span> 排序规则名字;<br>例子：<br><span class="hljs-keyword">Alter</span> <span class="hljs-keyword">database</span> stuinfo<br><span class="hljs-keyword">Default</span> <span class="hljs-type">character</span> <span class="hljs-keyword">set</span> utf8<br><span class="hljs-keyword">Default</span> <span class="hljs-keyword">collate</span> utf8_general_ci;<br></code></pre></td></tr></table></figure><h3 id="删除数据库"><a href="#删除数据库" class="headerlink" title="删除数据库"></a>删除数据库</h3><figure class="highlight n1ql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs n1ql"><span class="hljs-keyword">Drop</span> <span class="hljs-keyword">database</span> 数据库名字;<br></code></pre></td></tr></table></figure><h2 id="数据表的创建和管理"><a href="#数据表的创建和管理" class="headerlink" title="数据表的创建和管理"></a>数据表的创建和管理</h2><h3 id="使用create-table-语句创建数据表"><a href="#使用create-table-语句创建数据表" class="headerlink" title="使用create table 语句创建数据表"></a>使用create table 语句创建数据表</h3><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><code class="hljs sql"><span class="hljs-keyword">Create</span> <span class="hljs-keyword">table</span> 表名 (<br>字段名<span class="hljs-number">1</span> 数据类型 \[属性\] \[索引\] ,<br>字段名<span class="hljs-number">1</span> 数据类型 \[属性\] \[索引\],<br>.......<br>字段名<span class="hljs-number">1</span> 数据类型 \[属性\] \[索引\]<br>);<br>例子：<br><br><span class="hljs-keyword">Create</span> <span class="hljs-keyword">table</span> student (<br>Id <span class="hljs-type">int</span> unsigned <span class="hljs-keyword">not</span> <span class="hljs-keyword">null</span> auto_increment comment <span class="hljs-string">&#x27;学生ID&#x27;</span>,<br>sNo <span class="hljs-type">char</span>(<span class="hljs-number">10</span>) <span class="hljs-keyword">not</span> <span class="hljs-keyword">null</span> comment <span class="hljs-string">&#x27;学号&#x27;</span>,<br>sName <span class="hljs-type">varchar</span>(<span class="hljs-number">20</span>) <span class="hljs-keyword">not</span> <span class="hljs-keyword">null</span> comment <span class="hljs-string">&#x27;姓名&#x27;</span>,<br>sex <span class="hljs-type">char</span>(<span class="hljs-number">1</span>) <span class="hljs-keyword">not</span> <span class="hljs-keyword">null</span> <span class="hljs-keyword">default</span> <span class="hljs-string">&#x27;男&#x27;</span> comment <span class="hljs-string">&#x27;性别&#x27;</span>,<br>birthday <span class="hljs-type">Date</span> <span class="hljs-keyword">not</span> <span class="hljs-keyword">null</span> comment <span class="hljs-string">&#x27;出生日期&#x27;</span>,<br>depyName <span class="hljs-type">varchar</span>(<span class="hljs-number">30</span>) <span class="hljs-keyword">not</span> <span class="hljs-keyword">null</span> comment <span class="hljs-string">&#x27;班级名称&#x27;</span>,<br>remark <span class="hljs-type">Varchar</span>(<span class="hljs-number">80</span>) comment <span class="hljs-string">&#x27;备注&#x27;</span>,<br><span class="hljs-keyword">primary</span> key (id), <span class="hljs-operator">/</span>    \<span class="hljs-operator">*</span>设置id为主键\<span class="hljs-operator">*</span><span class="hljs-operator">/</span><br><span class="hljs-keyword">unique</span> (sNo), <span class="hljs-operator">/</span>        \<span class="hljs-operator">*</span>设置sNo为唯一性索引\<span class="hljs-operator">*</span><span class="hljs-operator">/</span><br>index (sName) <span class="hljs-operator">/</span>         \<span class="hljs-operator">*</span>设置sName为普通索引\<span class="hljs-operator">*</span><span class="hljs-operator">/</span><br>); ENGINE<span class="hljs-operator">=</span>InnoDB;<br></code></pre></td></tr></table></figure><p>Not null 不为空 unsigned无符号 auto_increment自动增加</p><h3 id="查看数据表"><a href="#查看数据表" class="headerlink" title="查看数据表"></a>查看数据表</h3><figure class="highlight pgsql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs pgsql"><span class="hljs-keyword">Show</span> <span class="hljs-keyword">tables</span>;<br></code></pre></td></tr></table></figure><h3 id="复制数据表"><a href="#复制数据表" class="headerlink" title="复制数据表"></a>复制数据表</h3><figure class="highlight pgsql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs pgsql"><span class="hljs-keyword">Create</span> <span class="hljs-keyword">table</span> 新表名 <span class="hljs-keyword">like</span> 旧表名;<br></code></pre></td></tr></table></figure><h3 id="创建临时表"><a href="#创建临时表" class="headerlink" title="创建临时表"></a>创建临时表</h3><p>新建之后，当mysql关闭后会自动删除</p><figure class="highlight pgsql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><code class="hljs pgsql"><span class="hljs-keyword">Create</span> <span class="hljs-keyword">temporary</span> <span class="hljs-keyword">table</span> student (<br>Id <span class="hljs-type">int</span> unsigned <span class="hljs-keyword">not</span> <span class="hljs-keyword">null</span> auto_increment <span class="hljs-keyword">comment</span> <span class="hljs-string">&#x27;学生ID&#x27;</span>,<br>sNo <span class="hljs-type">char</span>(<span class="hljs-number">10</span>) <span class="hljs-keyword">not</span> <span class="hljs-keyword">null</span> <span class="hljs-keyword">comment</span> <span class="hljs-string">&#x27;学号&#x27;</span>,<br>sName <span class="hljs-type">varchar</span>(<span class="hljs-number">20</span>) <span class="hljs-keyword">not</span> <span class="hljs-keyword">null</span> <span class="hljs-keyword">comment</span> <span class="hljs-string">&#x27;姓名&#x27;</span>,<br>sex <span class="hljs-type">char</span>(<span class="hljs-number">1</span>) <span class="hljs-keyword">not</span> <span class="hljs-keyword">null</span> <span class="hljs-keyword">default</span> <span class="hljs-string">&#x27;男&#x27;</span> <span class="hljs-keyword">comment</span> <span class="hljs-string">&#x27;性别&#x27;</span>,<br>birthday <span class="hljs-type">Date</span> <span class="hljs-keyword">not</span> <span class="hljs-keyword">null</span> <span class="hljs-keyword">comment</span> <span class="hljs-string">&#x27;出生日期&#x27;</span>,<br>depyName <span class="hljs-type">varchar</span>(<span class="hljs-number">30</span>) <span class="hljs-keyword">not</span> <span class="hljs-keyword">null</span> <span class="hljs-keyword">comment</span> <span class="hljs-string">&#x27;班级名称&#x27;</span>,<br>remark <span class="hljs-type">Varchar</span>(<span class="hljs-number">80</span>) <span class="hljs-keyword">comment</span> <span class="hljs-string">&#x27;备注&#x27;</span>,<br><span class="hljs-keyword">primary key</span> (id), /            \*设置id为主键\*/<br><span class="hljs-keyword">unique</span> (sNo), /                \*设置sNo为唯一性索引\*/<br><span class="hljs-keyword">index</span> (sName) /                \*设置sName为普通索引\*/<br>); ENGINE=InnoDB;<br></code></pre></td></tr></table></figure><p>Not null 不为空 unsigned无符号 auto_increment自动增加</p><h3 id="查看表结构"><a href="#查看表结构" class="headerlink" title="查看表结构"></a>查看表结构</h3><p>Describe | desc 表名;</p><p>例子：</p><figure class="highlight abnf"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs abnf">desc 表名<span class="hljs-comment">;</span><br></code></pre></td></tr></table></figure><h3 id="查看表的结构-sql语句"><a href="#查看表的结构-sql语句" class="headerlink" title="查看表的结构  sql语句"></a>查看表的结构  sql语句</h3><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs sql"><span class="hljs-keyword">Show</span> <span class="hljs-keyword">create</span> <span class="hljs-keyword">table</span> 表名;<br></code></pre></td></tr></table></figure><h2 id="修改表结构"><a href="#修改表结构" class="headerlink" title="修改表结构"></a>修改表结构</h2><h3 id="使用alter-table-修改表结构"><a href="#使用alter-table-修改表结构" class="headerlink" title="使用alter table 修改表结构"></a>使用alter table 修改表结构</h3><p>Alter table 表名</p><p>Add字段名 数据类型 [属性] [索引] [First | after 字段名] –添加新字段</p><p>Modify 字段名 数据类型 [属性] [索引] ---更改指定数据类型</p><p>Change 字段名 新字段名 数据类型 [属性] [索引] ---更改指定数据类型同时更改名字</p><p>Drop 字段名 ----删除指定字段</p><p>Rename as 新表名 ---用来给数据表重新命名</p><p>例子：</p><p><img src="https://article.biliimg.com/bfs/article/b8a1358ee3147887e7ff79e003981028697559838.png"></p><h3 id="使用insert操作表中数据"><a href="#使用insert操作表中数据" class="headerlink" title="使用insert操作表中数据"></a>使用insert操作表中数据</h3><p>Insert into 表名 (字段名1，字段名2，字段名3)</p><p>Values (值1, 值2, 值3 ), (值1, 值2, 值3 ), (值1, 值2, 值3 )</p><p>例子：</p><p><img src="https://article.biliimg.com/bfs/article/d15fcc405c3c0ad932422bd50b64dc7f697559838.png"></p><p><img src="https://article.biliimg.com/bfs/article/aa2ede57109a75713f66b57aa10b4eaa697559838.png"></p><p><img src="https://article.biliimg.com/bfs/article/0cacf1dabab0a240f483c074d126e844697559838.png"></p><h3 id="使用update修改表中数据"><a href="#使用update修改表中数据" class="headerlink" title="使用update修改表中数据"></a>使用update修改表中数据</h3><p>Update 表名</p><p>Set 字段名1&#x3D;值1 , 字段名2&#x3D;值2[,…]</p><p>[where 条件]</p><p><img src="https://article.biliimg.com/bfs/article/984bf5929482ccac2502f1460c9f0890697559838.png"></p><h3 id="使用delete删除表中数据"><a href="#使用delete删除表中数据" class="headerlink" title="使用delete删除表中数据"></a>使用delete删除表中数据</h3><p>Delete from 表名</p><p>[where 条件]</p><p>例子：</p><figure class="highlight n1ql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs n1ql"><span class="hljs-keyword">Delete</span> <span class="hljs-keyword">from</span> student <span class="hljs-keyword">where</span> sNo=<span class="hljs-string">&#x27;1308013105&#x27;</span>;<br></code></pre></td></tr></table></figure><blockquote><p>会删除所在字段（sNo）的那一行的数据，不是只单单删除sNo</p></blockquote><h3 id="使用truncate语句清空表中数据"><a href="#使用truncate语句清空表中数据" class="headerlink" title="使用truncate语句清空表中数据"></a>使用truncate语句清空表中数据</h3><p>Truncate [table] 表名</p><h3 id="删除表"><a href="#删除表" class="headerlink" title="删除表"></a>删除表</h3><figure class="highlight stata"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs stata"><span class="hljs-keyword">Use</span> 数据库名字;<br><span class="hljs-keyword">Drop</span> <span class="hljs-keyword">table</span> 表名;<br></code></pre></td></tr></table></figure><h2 id="创建索引"><a href="#创建索引" class="headerlink" title="创建索引"></a>创建索引</h2><h3 id="定义"><a href="#定义" class="headerlink" title="定义"></a>定义</h3><p>MySQL 的索引类型主要有以下几种。</p><p>• 普通索引（NDEX）：最基本的索引，它没有任何限制，是用来提升数据库性能、提高</p><p>数据查询效率的一项重要的技术。</p><p>• 唯一性索引（UNIQUE)）：索引列的值必须唯一，但允许有空值。一张表中可以有多个</p><p>唯一性索引。如果是组合索引，则列值的组合必须唯一。</p><p>• 主键索引（PRIMARY KEY)：一种特殊的唯一性索引，但不允许有空值。一张表中只能</p><p>有一个主键。为了有效实现数据的管理，每张表都应该有自己的主键，一般是在建表的</p><p>同时创建主键索引。</p><p>• 全文索引（FULLITEXT)：主要用来查找文本中的关键字，而不是直接与索引中的值相</p><p>比较。全文索引跟其他索引大不相同，它更像是一个搜索引擎，而不是简单的 WHERE</p><p>语句的参数匹配。全文索引配合 MATCH AGAINST 操作使用，而不是一般的 WHERE</p><p>语句加 LIKE。目前只有 CHAR、VARCHAR、TEXT 列上可以创建全文索引。</p><h3 id="在create-table创建索引"><a href="#在create-table创建索引" class="headerlink" title="在create table创建索引"></a>在create table创建索引</h3><p>Create table 表名 (</p><p>字段名1 | 索引项…,</p><p>)</p><p>索引项的语法：</p><p>Primary key 索引名 (字段名)</p><p>Unique 索引名 (字段名)</p><p>Index | key 索引名 (字段名)</p><p>Fulltext 索引名 (字段名)</p><p>例子</p><figure class="highlight pgsql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><code class="hljs pgsql"><span class="hljs-keyword">Create</span> <span class="hljs-keyword">table</span> student (<br>Id <span class="hljs-type">int</span> unsigned <span class="hljs-keyword">not</span> <span class="hljs-keyword">null</span> auto_increment <span class="hljs-keyword">comment</span> <span class="hljs-string">&#x27;学生ID&#x27;</span>,<br>sNo <span class="hljs-type">char</span>(<span class="hljs-number">10</span>) <span class="hljs-keyword">not</span> <span class="hljs-keyword">null</span> <span class="hljs-keyword">comment</span> <span class="hljs-string">&#x27;学号&#x27;</span>,<br>sName <span class="hljs-type">varchar</span>(<span class="hljs-number">20</span>) <span class="hljs-keyword">not</span> <span class="hljs-keyword">null</span> <span class="hljs-keyword">comment</span> <span class="hljs-string">&#x27;姓名&#x27;</span>,<br>sex <span class="hljs-type">char</span>(<span class="hljs-number">1</span>) <span class="hljs-keyword">not</span> <span class="hljs-keyword">null</span> <span class="hljs-keyword">default</span> <span class="hljs-string">&#x27;男&#x27;</span> <span class="hljs-keyword">comment</span> <span class="hljs-string">&#x27;性别&#x27;</span>,<br>birthday <span class="hljs-type">Date</span> <span class="hljs-keyword">not</span> <span class="hljs-keyword">null</span> <span class="hljs-keyword">comment</span> <span class="hljs-string">&#x27;出生日期&#x27;</span>,<br>depyName <span class="hljs-type">varchar</span>(<span class="hljs-number">30</span>) <span class="hljs-keyword">not</span> <span class="hljs-keyword">null</span> <span class="hljs-keyword">comment</span> <span class="hljs-string">&#x27;班级名称&#x27;</span>,<br>remark <span class="hljs-type">Varchar</span>(<span class="hljs-number">80</span>) <span class="hljs-keyword">comment</span> <span class="hljs-string">&#x27;备注&#x27;</span>,<br><span class="hljs-keyword">primary key</span> (id), /         \*设置id为主键\*/<br><span class="hljs-keyword">unique</span> (sNo), /             \*设置sNo为唯一性索引\*/<br><span class="hljs-keyword">index</span> (sName) /             \*设置sName为普通索引\*/<br>); ENGINE=InnoDB;<br></code></pre></td></tr></table></figure><p>Not null 不为空 unsigned无符号 auto_increment自动增加</p><h3 id="使用alter-table-语句创建索引"><a href="#使用alter-table-语句创建索引" class="headerlink" title="使用alter table 语句创建索引"></a>使用alter table 语句创建索引</h3><p>Alter table 表名</p><p>​Add 索引项;</p><p>例子:</p><figure class="highlight pgsql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs pgsql"><span class="hljs-keyword">Alter</span> <span class="hljs-keyword">table</span> course <br>   <span class="hljs-keyword">Add</span> <span class="hljs-keyword">unique</span> ux_cNo(cNo),<br>   <span class="hljs-keyword">Add</span> <span class="hljs-keyword">index</span> ix_cName(cName);<br></code></pre></td></tr></table></figure><h3 id="使用create-index语句创建索引"><a href="#使用create-index语句创建索引" class="headerlink" title="使用create index语句创建索引"></a>使用create index语句创建索引</h3><p>Create [unique] | [fulltext] index 索引名</p><p>On 表名 (字段名)</p><p>例子：</p><p>在成绩表上创建唯一性索引（组合索引）</p><figure class="highlight n1ql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs n1ql"><span class="hljs-keyword">Create</span> <span class="hljs-keyword">unique</span> <span class="hljs-keyword">index</span> ux_sId_cId<br>  <span class="hljs-keyword">ON</span> score (sId,cId);<br></code></pre></td></tr></table></figure><h3 id="使用Show-index-语句查看索引"><a href="#使用Show-index-语句查看索引" class="headerlink" title="使用Show index 语句查看索引"></a>使用Show index 语句查看索引</h3><p>Show index from &lt;表名&gt; [from &lt;数据库名字&gt;]</p><p>例子：</p><figure class="highlight pgsql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs pgsql"><span class="hljs-keyword">Show</span> <span class="hljs-keyword">index</span> <span class="hljs-keyword">from</span> student;<br></code></pre></td></tr></table></figure><p>查看学生表中的索引</p><h2 id="Select查询"><a href="#Select查询" class="headerlink" title="Select查询"></a>Select查询</h2><p>应该是到这会用到sql语句，<a href="https://qianyios.top/img/mysql/mysql.sql">[点此下载]</a></p><h3 id="选择字段进行查询"><a href="#选择字段进行查询" class="headerlink" title="选择字段进行查询"></a>选择字段进行查询</h3><p>Select 字段1 [,字段2,字段3] from 表名;</p><p>例子：</p><figure class="highlight pgsql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs pgsql"><span class="hljs-keyword">Select</span> deptname,<span class="hljs-type">name</span>,sNo,sex <span class="hljs-keyword">from</span> student;<br></code></pre></td></tr></table></figure><h3 id="定义字段别名"><a href="#定义字段别名" class="headerlink" title="定义字段别名"></a>定义字段别名</h3><figure class="highlight n1ql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs n1ql"><span class="hljs-keyword">Select</span> sNo <span class="hljs-keyword">AS</span> <span class="hljs-string">&#x27;学号&#x27;</span> , sName <span class="hljs-keyword">AS</span> <span class="hljs-string">&#x27;姓名&#x27;</span> <span class="hljs-keyword">from</span> student;<br></code></pre></td></tr></table></figure><h3 id="条件查询"><a href="#条件查询" class="headerlink" title="条件查询"></a>条件查询</h3><p><img src="https://article.biliimg.com/bfs/article/b0468b154ad562ccee22d29f1f4f471e697559838.png"></p><p><img src="https://article.biliimg.com/bfs/article/1c8e380480747f10ccd566c29439899d697559838.png"></p><p><img src="https://article.biliimg.com/bfs/article/9172498530b818896d546c1c28d40986697559838.png"></p><h3 id="使用like模糊查询"><a href="#使用like模糊查询" class="headerlink" title="使用like模糊查询"></a>使用like模糊查询</h3><p><img src="https://article.biliimg.com/bfs/article/b37873bc3a484821b48dd503ebdad1f3697559838.png"></p><h3 id="使用in-进行范围查询"><a href="#使用in-进行范围查询" class="headerlink" title="使用in 进行范围查询"></a>使用in 进行范围查询</h3><p><img src="https://article.biliimg.com/bfs/article/68712f458f3fa65556d65395ff8b4662697559838.png"></p><h3 id="使用order-by-子句对查询结果"><a href="#使用order-by-子句对查询结果" class="headerlink" title="使用order by 子句对查询结果"></a>使用order by 子句对查询结果</h3><p>降序</p><p><img src="https://article.biliimg.com/bfs/article/2e869615ba1364a9ca93195a7f916743697559838.png"></p><p>中文名拼音排序</p><p><img src="https://article.biliimg.com/bfs/article/3eeaa656cb4439cd1557b224b2314ccd697559838.png"></p><p>先按班级升序排列，同一个班级内出生日期降序排列</p><p><img src="https://article.biliimg.com/bfs/article/9603b8e7da4a43c8b77e7271ae3eb0a6697559838.png"></p><h3 id="使用limit子句限制返回记录的行数"><a href="#使用limit子句限制返回记录的行数" class="headerlink" title="使用limit子句限制返回记录的行数"></a>使用limit子句限制返回记录的行数</h3><p><img src="https://article.biliimg.com/bfs/article/0d7801114b39d5c705c8aeaa822551ea697559838.png"></p><h3 id="使用distinct关键字过滤重复记录"><a href="#使用distinct关键字过滤重复记录" class="headerlink" title="使用distinct关键字过滤重复记录"></a>使用distinct关键字过滤重复记录</h3><p><img src="https://article.biliimg.com/bfs/article/ded1335035e007be18dd2341fe02cecb697559838.png"></p><h3 id="内连接"><a href="#内连接" class="headerlink" title="内连接"></a>内连接</h3><p><img src="https://article.biliimg.com/bfs/article/1c7d6d56eaf747db2252f7af88df7d88697559838.png"></p><h3 id="使用统计函数对数据进行统计汇总"><a href="#使用统计函数对数据进行统计汇总" class="headerlink" title="使用统计函数对数据进行统计汇总"></a>使用统计函数对数据进行统计汇总</h3><p><img src="https://article.biliimg.com/bfs/article/70bc9c2642673da296c292bbef673300697559838.png"></p><p><img src="https://article.biliimg.com/bfs/article/d2c5d28c9bd70fa1f0a6c90685c24db3697559838.png"></p><h3 id="使用group-by进行分组查询"><a href="#使用group-by进行分组查询" class="headerlink" title="使用group by进行分组查询"></a>使用group by进行分组查询</h3><p><img src="https://article.biliimg.com/bfs/article/a0d6eaa23ebf51ec7d8b020658a1d433697559838.png"></p><h3 id="使用having子句对分组汇总结果进行筛选"><a href="#使用having子句对分组汇总结果进行筛选" class="headerlink" title="使用having子句对分组汇总结果进行筛选"></a>使用having子句对分组汇总结果进行筛选</h3><p><img src="https://article.biliimg.com/bfs/article/db813c2283027893c9d7a3b32eaeac4b697559838.png"></p><h3 id="使用exists关键字创建子查询"><a href="#使用exists关键字创建子查询" class="headerlink" title="使用exists关键字创建子查询"></a>使用exists关键字创建子查询</h3><p>查询选修课程的女生名单</p><p><img src="https://article.biliimg.com/bfs/article/c43973370c4ee8c4b44a9334a64e1aac697559838.png"></p><h2 id="薄弱盲区"><a href="#薄弱盲区" class="headerlink" title="薄弱盲区"></a>薄弱盲区</h2><h3 id="复制表到新表"><a href="#复制表到新表" class="headerlink" title="复制表到新表"></a>复制表到新表</h3><p><img src="https://article.biliimg.com/bfs/article/19aa874d8f0f73e24e8285d5a4151209697559838.png"></p><h3 id="向表中插入子查询结果"><a href="#向表中插入子查询结果" class="headerlink" title="向表中插入子查询结果"></a>向表中插入子查询结果</h3><p><img src="https://article.biliimg.com/bfs/article/42f6e0b49fba100126f3e06540f02d8f697559838.png"></p><h3 id="带子查询的修改语句"><a href="#带子查询的修改语句" class="headerlink" title="带子查询的修改语句"></a>带子查询的修改语句</h3><p><img src="https://article.biliimg.com/bfs/article/d2f8d31ea97664bfba076321a194a9a7697559838.png"></p><h3 id="带子查询的删除语句"><a href="#带子查询的删除语句" class="headerlink" title="带子查询的删除语句"></a>带子查询的删除语句</h3><p><img src="https://article.biliimg.com/bfs/article/c311dd009cc72b10cc868986c4bf9b3b697559838.png"></p><div class="tbsm" style="margin-top:54px;"><div class="tbsm-top"><span><svg t="1674654360507" class="icon" viewBox="0 0 1024 1024" version="1.1" xmlns="http://www.w3.org/2000/svg" p-id="987" data-spm-anchor-id="a313x.7781069.0.i0" width="35" height="35"><path d="M410.49 97.74H155.08a56.74 56.74 0 0 0-56.84 56.73V410a56.84 56.84 0 0 0 56.84 56.84h255.41A56.83 56.83 0 0 0 467.32 410V154.58a56.83 56.83 0 0 0-56.83-56.84zM410.49 558.74H155.08a56.74 56.74 0 0 0-56.84 56.73V871a56.84 56.84 0 0 0 56.84 56.84h255.41A56.83 56.83 0 0 0 467.32 871V615.58a56.83 56.83 0 0 0-56.83-56.84zM871.49 558.74H616.08a56.74 56.74 0 0 0-56.84 56.73V871a56.84 56.84 0 0 0 56.84 56.84h255.41A56.83 56.83 0 0 0 928.32 871V615.58a56.83 56.83 0 0 0-56.83-56.84z" fill="#66EEFF" p-id="988"></path><path d="M410.49 558.74h-4.14A475 475 0 0 0 299.52 859.6a481.16 481.16 0 0 0 4.84 68.22h106.13A56.83 56.83 0 0 0 467.32 871V615.58a56.83 56.83 0 0 0-56.83-56.84zM871.49 558.74H616.08a56.74 56.74 0 0 0-56.84 56.73V871a56.84 56.84 0 0 0 56.84 56.84h255.41A56.83 56.83 0 0 0 928.32 871V615.58a56.83 56.83 0 0 0-56.83-56.84z" fill="#C2F8FF" p-id="989"></path></svg></span><span style="font-size:30px;"> 特别声明</span></div><div class="tbsm-wz">千屹博客旗下的所有文章，是通过本人课堂学习和课外自学所精心整理的知识巨著<br/>难免会有出错的地方<br/>如果细心的你发现了小失误，可以在下方评论区告诉我，或者私信我！<br />非常感谢大家的热烈支持！</div></div>]]></content>
    
    
    
    <tags>
      
      <tag>Mysql</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>Centos 8部署Docker</title>
    <link href="/2023/01/17/Centos8%20docker/"/>
    <url>/2023/01/17/Centos8%20docker/</url>
    
    <content type="html"><![CDATA[<h1 id="Centos-8部署Docker"><a href="#Centos-8部署Docker" class="headerlink" title="Centos 8部署Docker"></a>Centos 8部署Docker</h1><h2 id="基础信息"><a href="#基础信息" class="headerlink" title="基础信息"></a>基础信息</h2><table><thead><tr><th>系统</th><th>ip  (NAT)</th><th>内存</th><th>硬盘</th></tr></thead><tbody><tr><td>Centos 8.5</td><td>192.168.48.10</td><td>2G</td><td>40G</td></tr></tbody></table><p>基本配置好可以访问互联网即可</p><h3 id="切换阿里yum"><a href="#切换阿里yum" class="headerlink" title="切换阿里yum"></a>切换阿里yum</h3><figure class="highlight autoit"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><code class="hljs autoit">[root<span class="hljs-symbol">@Docker</span> ~]<span class="hljs-meta"># mkdir repo.bak</span><br>[root<span class="hljs-symbol">@Docker</span> ~]<span class="hljs-meta"># cp /etc/yum.repos.d/* repo.bak/</span><br>[root<span class="hljs-symbol">@Docker</span> ~]<span class="hljs-meta"># rename <span class="hljs-string">&#x27;.repo&#x27;</span> <span class="hljs-string">&#x27;.repo.bak&#x27;</span> /etc/yum.repos.d/*.repo</span><br>[root<span class="hljs-symbol">@Docker</span> ~]<span class="hljs-meta"># wget -O /etc/yum.repos.d/CentOS-Base.repo https://mirrors.aliyun.com/repo/Centos-vault-8.5.2111.repo</span><br>[root<span class="hljs-symbol">@Docker</span>~]<span class="hljs-meta"># yum clean all &amp;&amp; yum makecache</span><br>[root<span class="hljs-symbol">@Docker</span>~]<span class="hljs-meta"># systemctl disable --now firewalld</span><br>[root<span class="hljs-symbol">@Docker</span>~]<span class="hljs-meta"># sed -i <span class="hljs-string">&#x27;s/^SELINUX=.*/SELINUX=disabled/&#x27;</span> /etc/selinux/config</span><br>[root<span class="hljs-symbol">@Docker</span>~]<span class="hljs-meta"># yum update -y</span><br></code></pre></td></tr></table></figure><h2 id="安装Docker"><a href="#安装Docker" class="headerlink" title="安装Docker"></a>安装Docker</h2><h3 id="删除旧版docker"><a href="#删除旧版docker" class="headerlink" title="删除旧版docker"></a>删除旧版docker</h3><figure class="highlight coffeescript"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs coffeescript">[root@Docker ~]<span class="hljs-comment"># sudo yum remove docker docker-client docker-client-latest docker-common docker-latest docker-latest-logrotate docker-logrotate docker-engine -y</span><br></code></pre></td></tr></table></figure><h3 id="安装依赖"><a href="#安装依赖" class="headerlink" title="安装依赖"></a>安装依赖</h3><figure class="highlight autoit"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs autoit">[root<span class="hljs-symbol">@Docker</span> ~]<span class="hljs-meta"># yum install -y yum-utils device-mapper-persistent-data lvm2</span><br></code></pre></td></tr></table></figure><h3 id="添加阿里docker存储库"><a href="#添加阿里docker存储库" class="headerlink" title="添加阿里docker存储库"></a>添加阿里docker存储库</h3><figure class="highlight coffeescript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs coffeescript">[root@Docker ~]<span class="hljs-comment"># dnf config-manager --add-repo=https://mirrors.aliyun.com/docker-ce/linux/centos/docker-ce.repo</span><br>[root@Docker ~]<span class="hljs-comment"># yum clean all &amp;&amp; yum makecache </span><br></code></pre></td></tr></table></figure><h3 id="安装docker软件"><a href="#安装docker软件" class="headerlink" title="安装docker软件"></a>安装docker软件</h3><figure class="highlight autoit"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs autoit">[root<span class="hljs-symbol">@Docker</span> ~]<span class="hljs-meta"># yum install -y --allowerasing docker-ce docker-ce-cli</span><br></code></pre></td></tr></table></figure><h3 id="启动docker服务"><a href="#启动docker服务" class="headerlink" title="启动docker服务"></a>启动docker服务</h3><figure class="highlight coffeescript"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs coffeescript">[root@Docker ~]<span class="hljs-comment"># systemctl enable docker --now</span><br></code></pre></td></tr></table></figure><h3 id="验证是否安装成功"><a href="#验证是否安装成功" class="headerlink" title="验证是否安装成功"></a>验证是否安装成功</h3><figure class="highlight livescript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><code class="hljs livescript">[root@Docker ~]<span class="hljs-comment"># docker run hello-world</span><br><span class="hljs-comment">#未检测到hello-world镜像</span><br>Unable <span class="hljs-keyword">to</span> find image <span class="hljs-string">&#x27;hello-world:latest&#x27;</span> locally<br><span class="hljs-comment">#从远程的DockerHub仓库拉取镜像</span><br>latest: Pulling <span class="hljs-keyword">from</span> library/hello-world<br><span class="hljs-number">2db</span>29710123e: Pull complete<br>Digest: sha256:aa0cc8055b82dc2509bed2e19b275c8f463506616377219d9642221ab53cf9fe<br>Status: Downloaded newer image <span class="hljs-keyword">for</span> hello-world:latest<br><span class="hljs-comment">#出现下面说明docker运行成功</span><br>Hello <span class="hljs-keyword">from</span> Docker!  -------<br>This message shows <span class="hljs-literal">that</span> your installation appears <span class="hljs-keyword">to</span> be working correctly.<br><br>To generate this message, Docker took the following steps:<br> <span class="hljs-number">1.</span> The Docker client contacted the Docker daemon.<br> <span class="hljs-number">2.</span> The Docker daemon pulled the <span class="hljs-string">&quot;hello-world&quot;</span> image <span class="hljs-keyword">from</span> the Docker Hub.<br>    (amd64)<br> <span class="hljs-number">3.</span> The Docker daemon created a <span class="hljs-keyword">new</span> container <span class="hljs-keyword">from</span> <span class="hljs-literal">that</span> image which runs the<br>    executable <span class="hljs-literal">that</span> produces the output you are currently reading.<br> <span class="hljs-number">4.</span> The Docker daemon streamed <span class="hljs-literal">that</span> output <span class="hljs-keyword">to</span> the Docker client, which sent <span class="hljs-literal">it</span><br>    <span class="hljs-keyword">to</span> your terminal.<br>To <span class="hljs-keyword">try</span> something more ambitious, you can run an Ubuntu container with:<br> $ docker run -<span class="hljs-literal">it</span> ubuntu bash<br>Share images, automate workflows, <span class="hljs-keyword">and</span> more <span class="hljs-keyword">with</span> a free Docker ID:<br> https:<span class="hljs-regexp">//hub.docker.com/</span><br><span class="hljs-regexp">For more examples and ideas, visit:</span><br><span class="hljs-regexp"> https://</span>docs.docker.com<span class="hljs-regexp">/get-started/</span><br><br></code></pre></td></tr></table></figure><h2 id="安装docker-compose"><a href="#安装docker-compose" class="headerlink" title="安装docker compose"></a>安装docker compose</h2><figure class="highlight awk"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><code class="hljs awk"><span class="hljs-comment"># 设置 Docker 镜像加速器</span><br>sudo mkdir -p <span class="hljs-regexp">/etc/</span>docker<br>sudo tee <span class="hljs-regexp">/etc/</span>docker/daemon.json &lt;&lt;-<span class="hljs-string">&#x27;EOF&#x27;</span><br>&#123;<br>  <span class="hljs-string">&quot;registry-mirrors&quot;</span>: [<span class="hljs-string">&quot;https://registry.docker-cn.com&quot;</span>]<br>&#125;<br>EOF<br>sudo systemctl daemon-reload<br>sudo systemctl restart docker<br><br><span class="hljs-comment"># 安装 Docker Compose</span><br>sudo curl -L <span class="hljs-string">&quot;https://get.daocloud.io/docker/compose/releases/download/1.29.2/docker-compose-$(uname -s)-$(uname -m)&quot;</span> -o <span class="hljs-regexp">/usr/</span>local<span class="hljs-regexp">/bin/</span>docker-compose<br>sudo chmod +x <span class="hljs-regexp">/usr/</span>local<span class="hljs-regexp">/bin/</span>docker-compose<br>sudo systemctl enable docker --now<br>sudo systemctl restart docker<br><br>sudo usermod -aG docker <span class="hljs-variable">$USER</span><br></code></pre></td></tr></table></figure><h2 id="使用Docker创建新的镜像"><a href="#使用Docker创建新的镜像" class="headerlink" title="使用Docker创建新的镜像"></a>使用Docker创建新的镜像</h2><h3 id="检索Docker仓库中的Ubuntu镜像"><a href="#检索Docker仓库中的Ubuntu镜像" class="headerlink" title="检索Docker仓库中的Ubuntu镜像"></a>检索Docker仓库中的Ubuntu镜像</h3><figure class="highlight coffeescript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs coffeescript">[root@Docker ~]<span class="hljs-comment"># docker search ubuntu</span><br>NAME                             DESCRIPTION                                     STARS     OFFICIAL   AUTOMATED<br>ubuntu                           Ubuntu <span class="hljs-keyword">is</span> a Debian-based Linux operating sys…   <span class="hljs-number">15464</span>     [OK]     <br>......<br></code></pre></td></tr></table></figure><h3 id="获取Ubuntu镜像"><a href="#获取Ubuntu镜像" class="headerlink" title="获取Ubuntu镜像"></a>获取Ubuntu镜像</h3><figure class="highlight makefile"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><code class="hljs makefile">[root@Docker ~]<span class="hljs-comment"># docker pull ubuntu</span><br>Using default tag: latest<br><span class="hljs-section">latest: Pulling from library/ubuntu</span><br><span class="hljs-section">6e3729cf69e0: Pull complete</span><br><span class="hljs-section">Digest: sha256:27cb6e6ccef575a4698b66f5de06c7ecd61589132d5a91d098f7f3f9285415a9</span><br><span class="hljs-section">Status: Downloaded newer image for ubuntu:latest</span><br><span class="hljs-section">docker.io/library/ubuntu:latest</span><br></code></pre></td></tr></table></figure><h3 id="查看本地Docker镜像"><a href="#查看本地Docker镜像" class="headerlink" title="查看本地Docker镜像"></a>查看本地Docker镜像</h3><figure class="highlight crmsh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs crmsh">[root@Docker ~]<span class="hljs-comment"># docker images</span><br>REPOSITORY    <span class="hljs-keyword">TAG</span>       <span class="hljs-title">IMAGE</span> ID       CREATED         SIZE<br>ubuntu        latest    <span class="hljs-number">6</span>b7dfa7e8fdb   <span class="hljs-number">5</span> weeks ago     <span class="hljs-number">77.8M</span>B<br>hello-world   latest    feb5d9fea6a5   <span class="hljs-number">16</span> months ago   <span class="hljs-number">13.3</span>kB<br></code></pre></td></tr></table></figure><blockquote><figure class="highlight crmsh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><code class="hljs crmsh">Docker镜像列表选项字段说明如下。<br>REPOSITORY  镜像的名称<br><span class="hljs-keyword">TAG</span>       <span class="hljs-title">镜像的标签</span><br><span class="hljs-title">IMAGE</span> ID      镜像的ID<br>CREATED       镜像创建时间<br>SIZE             镜像大小<br></code></pre></td></tr></table></figure></blockquote><h3 id="启动docker容器"><a href="#启动docker容器" class="headerlink" title="启动docker容器"></a>启动docker容器</h3><blockquote><figure class="highlight routeros"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><code class="hljs routeros">使用docker <span class="hljs-built_in">run</span> 命令可启动容器，Docker 启动时其执行过程如下。<br>· 检查本地是否存在指定的Docker 镜像，如果不存在将从Docker仓库下载。<br>· 使用Docker 镜像创建并启动Docker 容器。<br>· 为Docker容器分配一个文件系统，并在只读的镜像层外面挂载一层可读写层。<br>· 从Docker宿主机中配置的网桥接口中桥接一个虚拟接口到容器。<br>· 从Docker 网络的地址池中分配一个IP地址给当前容器。<br>· 执行用户指定的程序。<br>` 执行完毕后终止容器。<br></code></pre></td></tr></table></figure></blockquote><figure class="highlight awk"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><code class="hljs awk">创建基于本地ubuntu镜像的docker容器<br>[root@Docker ~]<span class="hljs-comment"># docker run -it ubuntu /bin/bash</span><br>root@<span class="hljs-number">136156</span>e4c448:/<span class="hljs-comment">#</span><br>root@<span class="hljs-number">136156</span>e4c448:/<span class="hljs-comment"># exit</span><br><span class="hljs-keyword">exit</span><br>[root@Docker ~]<span class="hljs-comment">#</span><br></code></pre></td></tr></table></figure><h3 id="更新并创建Docker镜像"><a href="#更新并创建Docker镜像" class="headerlink" title="更新并创建Docker镜像"></a>更新并创建Docker镜像</h3><h4 id="更新ubuntu镜像添加ping"><a href="#更新ubuntu镜像添加ping" class="headerlink" title="更新ubuntu镜像添加ping"></a>更新ubuntu镜像添加ping</h4><figure class="highlight autoit"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br></pre></td><td class="code"><pre><code class="hljs autoit">当本地的镜像不能满足日常需求，可从已创建的容器中更新并提交镜像。最新版的ubuntu没有安装<span class="hljs-built_in">ping</span>，本步骤将在ubuntu安装<span class="hljs-built_in">ping</span>，并建立新的镜像<br><span class="hljs-meta">#启动 ubuntu容器，每次创建容器会产生新的id（9eac21a09449）要记录好</span><br>[root<span class="hljs-symbol">@Docker</span> ~]<span class="hljs-meta"># docker run -t -i  ubuntu:latest /bin/bash</span><br>root<span class="hljs-symbol">@9eac21a09449</span>:/<span class="hljs-meta"># apt update</span><br>Get:<span class="hljs-number">1</span> http://security.ubuntu.com/ubuntu jammy-security InRelease [<span class="hljs-number">110</span> kB]<br>......<br>root<span class="hljs-symbol">@9eac21a09449</span>:/<span class="hljs-meta"># ping jd.com</span><br>bash: <span class="hljs-built_in">ping</span>: command <span class="hljs-literal">not</span> found<br><span class="hljs-meta">#安装ping</span><br>root<span class="hljs-symbol">@9eac21a09449</span>:/<span class="hljs-meta"># apt-get install -y iputils-ping</span><br>Reading package lists... Done<br>root<span class="hljs-symbol">@9eac21a09449</span>:/<span class="hljs-meta"># ping -c 2 jd.com</span><br><span class="hljs-built_in">PING</span> jd.com (<span class="hljs-number">111.13</span><span class="hljs-number">.149</span><span class="hljs-number">.108</span>) <span class="hljs-number">56</span>(<span class="hljs-number">84</span>) bytes of data.<br><span class="hljs-number">64</span> bytes from <span class="hljs-number">111.13</span><span class="hljs-number">.149</span><span class="hljs-number">.108</span> (<span class="hljs-number">111.13</span><span class="hljs-number">.149</span><span class="hljs-number">.108</span>): icmp_seq=<span class="hljs-number">1</span> ttl=<span class="hljs-number">127</span> time=<span class="hljs-number">43.7</span> ms<br><span class="hljs-number">64</span> bytes from <span class="hljs-number">111.13</span><span class="hljs-number">.149</span><span class="hljs-number">.108</span>: icmp_seq=<span class="hljs-number">2</span> ttl=<span class="hljs-number">127</span> time=<span class="hljs-number">44.6</span> ms<br><span class="hljs-meta">#退出</span><br>root<span class="hljs-symbol">@9eac21a09449</span>:/<span class="hljs-meta"># exit</span><br><span class="hljs-keyword">exit</span><br><span class="hljs-meta">#操作完成后可基于该docker容器创建新的docker镜像</span><br><span class="hljs-meta">#创建新的docker镜像</span><br>[root<span class="hljs-symbol">@Docker</span> ~]<span class="hljs-meta"># docker commit -m <span class="hljs-string">&#x27;ubuntu增加ping命令&#x27;</span> -a <span class="hljs-string">&#x27;docker&#x27;</span> 9eac21a09449 ping/ubuntu:v2</span><br>sha256:<span class="hljs-number">7655</span>d7758bcfa635dde3cf8064602a32ac625100a1b7763e7856ff6052c8abee<br>[root<span class="hljs-symbol">@Docker</span> ~]<span class="hljs-meta"># docker images</span><br>REPOSITORY    TAG       IMAGE ID       CREATED          SIZE<br><span class="hljs-built_in">ping</span>/ubuntu   v2        <span class="hljs-number">7655</span>d7758bcf   <span class="hljs-number">10</span> seconds ago   <span class="hljs-number">120</span>MB<br>ubuntu        latest    <span class="hljs-number">6</span>b7dfa7e8fdb   <span class="hljs-number">5</span> weeks ago      <span class="hljs-number">77.8</span>MB<br>hello-world   latest    feb5d9fea6a5   <span class="hljs-number">16</span> months ago    <span class="hljs-number">13.3</span>kB<br><span class="hljs-meta">#运行新创建的容器，测试ping</span><br>[root<span class="hljs-symbol">@Docker</span> ~]<span class="hljs-meta"># docker run -it ping/ubuntu:v2 /bin/bash</span><br>root<span class="hljs-symbol">@7015378380d7</span>:/<span class="hljs-meta"># ping jd.com -c 3</span><br><span class="hljs-built_in">PING</span> jd.com (<span class="hljs-number">111.13</span><span class="hljs-number">.149</span><span class="hljs-number">.108</span>) <span class="hljs-number">56</span>(<span class="hljs-number">84</span>) bytes of data.<br><span class="hljs-number">64</span> bytes from <span class="hljs-number">111.13</span><span class="hljs-number">.149</span><span class="hljs-number">.108</span> (<span class="hljs-number">111.13</span><span class="hljs-number">.149</span><span class="hljs-number">.108</span>): icmp_seq=<span class="hljs-number">1</span> ttl=<span class="hljs-number">127</span> time=<span class="hljs-number">44.1</span> ms<br><span class="hljs-number">64</span> bytes from <span class="hljs-number">111.13</span><span class="hljs-number">.149</span><span class="hljs-number">.108</span> (<span class="hljs-number">111.13</span><span class="hljs-number">.149</span><span class="hljs-number">.108</span>): icmp_seq=<span class="hljs-number">2</span> ttl=<span class="hljs-number">127</span> time=<span class="hljs-number">44.9</span> ms<br><span class="hljs-number">64</span> bytes from <span class="hljs-number">111.13</span><span class="hljs-number">.149</span><span class="hljs-number">.108</span>: icmp_seq=<span class="hljs-number">3</span> ttl=<span class="hljs-number">127</span> time=<span class="hljs-number">45.1</span> ms<br><br></code></pre></td></tr></table></figure><h4 id="使用dockerfile创建镜像"><a href="#使用dockerfile创建镜像" class="headerlink" title="使用dockerfile创建镜像"></a>使用dockerfile创建镜像</h4><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs">Dockerfile是由一系列命令和参数脚本构成的脚本，这些命令可在基础镜像上一次执行，最终创建一个新的Docker镜像<br></code></pre></td></tr></table></figure><p>编辑dockerfile</p><figure class="highlight dockerfile"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><code class="hljs dockerfile">[root@Docker ~]<span class="hljs-comment"># vi /root/Dockerfile</span><br><span class="hljs-comment">#基础镜像信息</span><br><span class="hljs-keyword">FROM</span> ubuntu<br><span class="hljs-comment">#维护者信息</span><br><span class="hljs-keyword">MAINTAINER</span> book_user book@<span class="hljs-number">123</span>.com<br><span class="hljs-comment">#镜像操作指令</span><br><span class="hljs-keyword">RUN</span><span class="language-bash"> apt update</span><br><span class="hljs-keyword">RUN</span><span class="language-bash"> apt-get install -y iputils-ping</span><br><span class="hljs-comment">#容器启动时执行的命令</span><br><span class="hljs-keyword">CMD</span><span class="language-bash"> <span class="hljs-built_in">cd</span> /opt</span><br><span class="hljs-keyword">CMD</span><span class="language-bash"> <span class="hljs-built_in">echo</span> <span class="hljs-string">&#x27;new docker&#x27;</span> &gt; readme.txt</span><br></code></pre></td></tr></table></figure><blockquote><p>Dockerfile中每一个指令都会在镜像上创建一个新的镜像层，每一个指令的前缀都必须是大写的，其创建过程如下</p></blockquote><p>使用docker build 命令从dockerfile文件创建镜像</p><figure class="highlight autoit"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br></pre></td><td class="code"><pre><code class="hljs autoit">[root<span class="hljs-symbol">@Docker</span> ~]<span class="hljs-meta"># docker build -t <span class="hljs-string">&quot;book/ubuntu:v3&quot;</span> .</span><br><span class="hljs-meta">#末尾小数点别忘了，接下来，他就会按照dockerfile文件中的命令一一执行</span><br><br>[root<span class="hljs-symbol">@Docker</span> ~]<span class="hljs-meta"># docker images</span><br>REPOSITORY    TAG       IMAGE ID       CREATED          SIZE<br>book/ubuntu   v3        <span class="hljs-number">90</span>bbd384b2a3   <span class="hljs-number">59</span> seconds ago   <span class="hljs-number">120</span>MB<br><span class="hljs-built_in">ping</span>/ubuntu   v2        <span class="hljs-number">7655</span>d7758bcf   <span class="hljs-number">17</span> minutes ago   <span class="hljs-number">120</span>MB<br>ubuntu        latest    <span class="hljs-number">6</span>b7dfa7e8fdb   <span class="hljs-number">5</span> weeks ago      <span class="hljs-number">77.8</span>MB<br>hello-world   latest    feb5d9fea6a5   <span class="hljs-number">16</span> months ago    <span class="hljs-number">13.3</span>kB<br><br><span class="hljs-meta">#删除本地的docker镜像</span><br>[root<span class="hljs-symbol">@Docker</span> ~]<span class="hljs-meta"># docker rmi hello-world</span><br>Error response from daemon: conflict: unable <span class="hljs-keyword">to</span> remove repository reference <span class="hljs-string">&quot;hello-world&quot;</span> (must force) - container <span class="hljs-number">5542</span>ae3caafa is using its referenced image feb5d9fea6a5<br>出现报错说明container使用到了这个images，删除镜像前需要删除基于此镜像创建的容器<br><br><span class="hljs-meta">#查询容器列表</span><br>[root<span class="hljs-symbol">@Docker</span> ~]<span class="hljs-meta"># docker ps -a</span><br>CONTAINER ID   IMAGE            COMMAND       CREATED          STATUS                        PORTS     NAMES<br><span class="hljs-number">7015378380</span>d7   <span class="hljs-built_in">ping</span>/ubuntu:v2   <span class="hljs-string">&quot;/bin/bash&quot;</span>   <span class="hljs-number">19</span> minutes ago   Exited (<span class="hljs-number">127</span>) <span class="hljs-number">15</span> minutes ago             nervous_lamarr<br><span class="hljs-number">37</span>ac7bf75dbc   <span class="hljs-built_in">ping</span>/ubuntu:v2   <span class="hljs-string">&quot;/bin/bash&quot;</span>   <span class="hljs-number">19</span> minutes ago   Exited (<span class="hljs-number">0</span>) <span class="hljs-number">19</span> minutes ago               peaceful_galois<br><span class="hljs-number">9</span>eac21a09449   ubuntu:latest    <span class="hljs-string">&quot;/bin/bash&quot;</span>   <span class="hljs-number">32</span> minutes ago   Exited (<span class="hljs-number">130</span>) <span class="hljs-number">26</span> minutes ago             angry_golick<br><span class="hljs-number">136156e4</span>c448   ubuntu           <span class="hljs-string">&quot;/bin/bash&quot;</span>   <span class="hljs-number">34</span> minutes ago   Exited (<span class="hljs-number">130</span>) <span class="hljs-number">33</span> minutes ago             intelligent_proskuriakova<br><span class="hljs-number">5542</span>ae3caafa   hello-world      <span class="hljs-string">&quot;/hello&quot;</span>      <span class="hljs-number">46</span> minutes ago   Exited (<span class="hljs-number">0</span>) <span class="hljs-number">46</span> minutes ago               pensive_newton<br><span class="hljs-meta">#删除容器</span><br>[root<span class="hljs-symbol">@Docker</span> ~]<span class="hljs-meta"># docker rm 5542ae3caafa</span><br><span class="hljs-number">5542</span>ae3caafa<br>删除镜像<br>[root<span class="hljs-symbol">@Docker</span> ~]<span class="hljs-meta"># docker rmi hello-world</span><br>Untagged: hello-world:latest<br>Untagged: hello-world<span class="hljs-symbol">@sha256</span>:aa0cc8055b82dc2509bed2e19b275c8f463506616377219d9642221ab53cf9fe<br>Deleted: sha256:feb5d9fea6a5e9606aa995e879d862b825965ba48de054caab5ef356dc6b3412<br>Deleted: sha256:e07ee1baac5fae6a26f30cabfe54a36d3402f96afda318fe0a96cec4ca393359<br><br></code></pre></td></tr></table></figure><div class="tbsm" style="margin-top:54px;"><div class="tbsm-top"><span><svg t="1674654360507" class="icon" viewBox="0 0 1024 1024" version="1.1" xmlns="http://www.w3.org/2000/svg" p-id="987" data-spm-anchor-id="a313x.7781069.0.i0" width="35" height="35"><path d="M410.49 97.74H155.08a56.74 56.74 0 0 0-56.84 56.73V410a56.84 56.84 0 0 0 56.84 56.84h255.41A56.83 56.83 0 0 0 467.32 410V154.58a56.83 56.83 0 0 0-56.83-56.84zM410.49 558.74H155.08a56.74 56.74 0 0 0-56.84 56.73V871a56.84 56.84 0 0 0 56.84 56.84h255.41A56.83 56.83 0 0 0 467.32 871V615.58a56.83 56.83 0 0 0-56.83-56.84zM871.49 558.74H616.08a56.74 56.74 0 0 0-56.84 56.73V871a56.84 56.84 0 0 0 56.84 56.84h255.41A56.83 56.83 0 0 0 928.32 871V615.58a56.83 56.83 0 0 0-56.83-56.84z" fill="#66EEFF" p-id="988"></path><path d="M410.49 558.74h-4.14A475 475 0 0 0 299.52 859.6a481.16 481.16 0 0 0 4.84 68.22h106.13A56.83 56.83 0 0 0 467.32 871V615.58a56.83 56.83 0 0 0-56.83-56.84zM871.49 558.74H616.08a56.74 56.74 0 0 0-56.84 56.73V871a56.84 56.84 0 0 0 56.84 56.84h255.41A56.83 56.83 0 0 0 928.32 871V615.58a56.83 56.83 0 0 0-56.83-56.84z" fill="#C2F8FF" p-id="989"></path></svg></span><span style="font-size:30px;"> 特别声明</span></div><div class="tbsm-wz">千屹博客旗下的所有文章，是通过本人课堂学习和课外自学所精心整理的知识巨著<br/>难免会有出错的地方<br/>如果细心的你发现了小失误，可以在下方评论区告诉我，或者私信我！<br />非常感谢大家的热烈支持！</div></div>]]></content>
    
    
    
    <tags>
      
      <tag>Centos 8</tag>
      
      <tag>Docker</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>Centos 8 stream 初始配置</title>
    <link href="/2023/01/14/C8/"/>
    <url>/2023/01/14/C8/</url>
    
    <content type="html"><![CDATA[<h1 id="Centos-8-strean-初始配置"><a href="#Centos-8-strean-初始配置" class="headerlink" title="Centos 8 strean 初始配置"></a>Centos 8 strean 初始配置</h1><h2 id="配置网络yum"><a href="#配置网络yum" class="headerlink" title="配置网络yum"></a>配置网络yum</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs bash"><span class="hljs-built_in">cp</span> /etc/yum.repos.d/CentOS-Stream-BaseOS.repo /etc/yum.repos.d/CentOS-Stream-BaseOS.repo.bak<br><br>sed -i <span class="hljs-string">&#x27;s/mirrorlist/#mirrorlist/&#x27;</span> /etc/yum.repos.d/CentOS-Stream-BaseOS.repo<br><br>sed -i <span class="hljs-string">&#x27;s/#baseurl=http:\/\/mirror.centos.org/baseurl=http:\/\/mirrors.aliyun.com/g&#x27;</span> /etc/yum.repos.d/CentOS-Stream-BaseOS.repo<br></code></pre></td></tr></table></figure><h2 id="配置本地yum"><a href="#配置本地yum" class="headerlink" title="配置本地yum"></a>配置本地yum</h2><figure class="highlight ini"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><code class="hljs ini"><span class="hljs-section">[root@localhost ~]</span><span class="hljs-comment"># mkdir repo.bak</span><br><span class="hljs-section">[root@localhost ~]</span><span class="hljs-comment"># mv /etc/yum.repos.d/* repo.bak/</span><br><span class="hljs-section">[root@localhost ~]</span><span class="hljs-comment"># vi /etc/yum.repos.d/centos.repo</span><br>    <span class="hljs-section">[BaseOS]</span><br>    <span class="hljs-attr">name</span>=BaseOS<br>    <span class="hljs-attr">baseurl</span>=file:///mnt/BaseOS<br>    <span class="hljs-attr">gpgcheck</span>=<span class="hljs-number">0</span><br>    <span class="hljs-attr">enabled</span>=<span class="hljs-number">1</span><br><br>    <span class="hljs-section">[AppStream]</span><br>    <span class="hljs-attr">name</span>=AppStream<br>    <span class="hljs-attr">baseurl</span>=file:///mnt/AppStream<br>    <span class="hljs-attr">gpgcheck</span>=<span class="hljs-number">0</span><br>    <span class="hljs-attr">enabled</span>=<span class="hljs-number">1</span><br><span class="hljs-section">[root@localhost ~]</span><span class="hljs-comment"># yum clean all &amp;&amp; yum makecache</span><br></code></pre></td></tr></table></figure><h2 id="配置防火墙和Selinux"><a href="#配置防火墙和Selinux" class="headerlink" title="配置防火墙和Selinux"></a>配置防火墙和Selinux</h2><figure class="highlight autoit"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs autoit">[root<span class="hljs-symbol">@localhost</span> ~]<span class="hljs-meta"># systemctl disable --now firewalld</span><br>    Removed <span class="hljs-string">&quot;/etc/systemd/system/multi-user.target.wants/firewalld.service&quot;</span>.<br>    Removed <span class="hljs-string">&quot;/etc/systemd/system/dbus-org.fedoraproject.FirewallD1.service&quot;</span>.<br>[root<span class="hljs-symbol">@localhost</span> ~]<span class="hljs-meta"># sed -i <span class="hljs-string">&#x27;s/^SELINUX=.*/SELINUX=disabled/&#x27;</span> /etc/selinux/config</span><br></code></pre></td></tr></table></figure><div class="tbsm" style="margin-top:54px;"><div class="tbsm-top"><span><svg t="1674654360507" class="icon" viewBox="0 0 1024 1024" version="1.1" xmlns="http://www.w3.org/2000/svg" p-id="987" data-spm-anchor-id="a313x.7781069.0.i0" width="35" height="35"><path d="M410.49 97.74H155.08a56.74 56.74 0 0 0-56.84 56.73V410a56.84 56.84 0 0 0 56.84 56.84h255.41A56.83 56.83 0 0 0 467.32 410V154.58a56.83 56.83 0 0 0-56.83-56.84zM410.49 558.74H155.08a56.74 56.74 0 0 0-56.84 56.73V871a56.84 56.84 0 0 0 56.84 56.84h255.41A56.83 56.83 0 0 0 467.32 871V615.58a56.83 56.83 0 0 0-56.83-56.84zM871.49 558.74H616.08a56.74 56.74 0 0 0-56.84 56.73V871a56.84 56.84 0 0 0 56.84 56.84h255.41A56.83 56.83 0 0 0 928.32 871V615.58a56.83 56.83 0 0 0-56.83-56.84z" fill="#66EEFF" p-id="988"></path><path d="M410.49 558.74h-4.14A475 475 0 0 0 299.52 859.6a481.16 481.16 0 0 0 4.84 68.22h106.13A56.83 56.83 0 0 0 467.32 871V615.58a56.83 56.83 0 0 0-56.83-56.84zM871.49 558.74H616.08a56.74 56.74 0 0 0-56.84 56.73V871a56.84 56.84 0 0 0 56.84 56.84h255.41A56.83 56.83 0 0 0 928.32 871V615.58a56.83 56.83 0 0 0-56.83-56.84z" fill="#C2F8FF" p-id="989"></path></svg></span><span style="font-size:30px;"> 特别声明</span></div><div class="tbsm-wz">千屹博客旗下的所有文章，是通过本人课堂学习和课外自学所精心整理的知识巨著<br/>难免会有出错的地方<br/>如果细心的你发现了小失误，可以在下方评论区告诉我，或者私信我！<br />非常感谢大家的热烈支持！</div></div>]]></content>
    
    
    
    <tags>
      
      <tag>Centos 8 stream</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>Centos 7 部署 NFS 服务</title>
    <link href="/2023/01/14/NFS/"/>
    <url>/2023/01/14/NFS/</url>
    
    <content type="html"><![CDATA[<h1 id="Centos7-部署-NFS-服务"><a href="#Centos7-部署-NFS-服务" class="headerlink" title="Centos7 部署 NFS 服务"></a>Centos7 部署 NFS 服务</h1><h2 id="环境部署"><a href="#环境部署" class="headerlink" title="环境部署"></a>环境部署</h2><figure class="highlight coffeescript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><code class="hljs coffeescript">[root@localhost ~]<span class="hljs-comment"># mkdir repo.bak</span><br>[root@localhost ~]<span class="hljs-comment"># mv /etc/yum.repos.d/* repo.bak/</span><br>[root@localhost ~]<span class="hljs-comment"># wget -O /etc/yum.repos.d/CentOS-Base.repo https://mirrors.ali yun.com/repo/Centos-7.repo</span><br>[root@localhost ~]<span class="hljs-comment"># yum clean all &amp;&amp; yum makecache</span><br>[root@localhost ~]<span class="hljs-comment"># systemctl disable firewalld --now</span><br>[root@localhost ~]<span class="hljs-comment"># sed -i &#x27;s/SELINUX=enforcing/SELINUX=disabled/g&#x27; /etc/sysconfig/selinux</span><br>[root@localhost ~]<span class="hljs-comment"># yum update -y</span><br></code></pre></td></tr></table></figure><h2 id="安装NFS服务"><a href="#安装NFS服务" class="headerlink" title="安装NFS服务"></a>安装NFS服务</h2><figure class="highlight autoit"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs autoit">[root<span class="hljs-symbol">@localhost</span> ~]<span class="hljs-meta"># yum install -y nfs-utils</span><br>[root<span class="hljs-symbol">@localhost</span> ~]<span class="hljs-meta"># systemcenable --now rpcbind nfs-server</span><br></code></pre></td></tr></table></figure><h2 id="配置NFS服务"><a href="#配置NFS服务" class="headerlink" title="配置NFS服务"></a>配置NFS服务</h2><h3 id="创建共享目录"><a href="#创建共享目录" class="headerlink" title="创建共享目录"></a>创建共享目录</h3><figure class="highlight autoit"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs autoit">[root<span class="hljs-symbol">@localhost</span> ~]<span class="hljs-meta"># mkdir /nfs</span><br>[root<span class="hljs-symbol">@localhost</span> ~]<span class="hljs-meta"># chmod -R 777 /nfs</span><br>[root<span class="hljs-symbol">@localhost</span> ~]<span class="hljs-meta"># cp /etc/exports /etc/exports.bak</span><br>[root<span class="hljs-symbol">@localhost</span> ~]<span class="hljs-meta"># vi /etc/exports</span><br>     /nfs *(rw,sync,no_root_squash)<br></code></pre></td></tr></table></figure><h3 id="重启NFS服务"><a href="#重启NFS服务" class="headerlink" title="重启NFS服务"></a>重启NFS服务</h3><figure class="highlight autoit"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs autoit">[root<span class="hljs-symbol">@localhost</span> ~]<span class="hljs-meta"># systemctl restart nfs-server</span><br></code></pre></td></tr></table></figure><h2 id="挂载NFS磁盘"><a href="#挂载NFS磁盘" class="headerlink" title="挂载NFS磁盘"></a>挂载NFS磁盘</h2><h3 id="确认nfs模式开了没"><a href="#确认nfs模式开了没" class="headerlink" title="确认nfs模式开了没"></a>确认nfs模式开了没</h3><figure class="highlight routeros"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><code class="hljs routeros">[root@localhost ~]# systemctl status rpcbind nfs-server<br>● rpcbind.service - RPC bind<span class="hljs-built_in"> service</span><br><span class="hljs-built_in"></span>   Loaded: loaded (/usr/lib/systemd/system/rpcbind.service; enabled; vendor preset: enabled)<br>   Active: active (running) since Fri 2023-01-13 20:27:13 CST; 1h 46min ago<br>  Process: 727 <span class="hljs-attribute">ExecStart</span>=/sbin/rpcbind -w <span class="hljs-variable">$RPCBIND_ARGS</span> (<span class="hljs-attribute">code</span>=exited, <span class="hljs-attribute">status</span>=0/SUCCESS)<br> Main PID: 736 (rpcbind)<br>   CGroup: /system.slice/rpcbind.service<br>           └─736 /sbin/rpcbind -w<br><br>Jan 13 20:27:13 localhost.localdomain systemd[1]: Starting RPC bind service<span class="hljs-built_in">..</span>.<br>Jan 13 20:27:13 localhost.localdomain systemd[1]: Started RPC bind service.<br><br>● nfs-server.service - NFS<span class="hljs-built_in"> server </span><span class="hljs-keyword">and</span> services<br>   Loaded: loaded (/usr/lib/systemd/system/nfs-server.service; enabled; vendor preset: disabled)<br>  Drop-In: /run/systemd/generator/nfs-server.service.d<br>           └─order-with-mounts.conf<br>   Active: active (exited) since Fri 2023-01-13 20:27:16 CST; 1h 46min ago<br>  Process: 1118 <span class="hljs-attribute">ExecStartPost</span>=/bin/sh -c <span class="hljs-keyword">if</span> systemctl -q is-active gssproxy; then systemctl reload gssproxy ; fi (<span class="hljs-attribute">code</span>=exited, <span class="hljs-attribute">status</span>=0/SUCCESS)<br>  Process: 1069 <span class="hljs-attribute">ExecStart</span>=/usr/sbin/rpc.nfsd <span class="hljs-variable">$RPCNFSDARGS</span> (<span class="hljs-attribute">code</span>=exited, <span class="hljs-attribute">status</span>=0/SUCCESS)<br>  Process: 1067 <span class="hljs-attribute">ExecStartPre</span>=/usr/sbin/exportfs -r (<span class="hljs-attribute">code</span>=exited, <span class="hljs-attribute">status</span>=1/FAILURE)<br> Main PID: 1069 (<span class="hljs-attribute">code</span>=exited, <span class="hljs-attribute">status</span>=0/SUCCESS)<br><br></code></pre></td></tr></table></figure><h3 id="在此电脑中挂载"><a href="#在此电脑中挂载" class="headerlink" title="在此电脑中挂载"></a>在此电脑中挂载</h3><figure class="highlight autoit"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs autoit">[root<span class="hljs-symbol">@localhost</span> ~]<span class="hljs-meta"># showmount -e 192.168.48.128</span><br>Export list <span class="hljs-keyword">for</span> <span class="hljs-number">192.168</span><span class="hljs-number">.48</span><span class="hljs-number">.128</span>:<br>/nfs *<br></code></pre></td></tr></table></figure><p>等你不要了，一定要先断开连接，否则等你关了服务器，你再点他会卡住，而且删不掉</p><p><img src="https://article.biliimg.com/bfs/article/7c0bee5f8929b26d2d4d8df98269f544697559838.png" alt="image"></p><div class="tbsm" style="margin-top:54px;"><div class="tbsm-top"><span><svg t="1674654360507" class="icon" viewBox="0 0 1024 1024" version="1.1" xmlns="http://www.w3.org/2000/svg" p-id="987" data-spm-anchor-id="a313x.7781069.0.i0" width="35" height="35"><path d="M410.49 97.74H155.08a56.74 56.74 0 0 0-56.84 56.73V410a56.84 56.84 0 0 0 56.84 56.84h255.41A56.83 56.83 0 0 0 467.32 410V154.58a56.83 56.83 0 0 0-56.83-56.84zM410.49 558.74H155.08a56.74 56.74 0 0 0-56.84 56.73V871a56.84 56.84 0 0 0 56.84 56.84h255.41A56.83 56.83 0 0 0 467.32 871V615.58a56.83 56.83 0 0 0-56.83-56.84zM871.49 558.74H616.08a56.74 56.74 0 0 0-56.84 56.73V871a56.84 56.84 0 0 0 56.84 56.84h255.41A56.83 56.83 0 0 0 928.32 871V615.58a56.83 56.83 0 0 0-56.83-56.84z" fill="#66EEFF" p-id="988"></path><path d="M410.49 558.74h-4.14A475 475 0 0 0 299.52 859.6a481.16 481.16 0 0 0 4.84 68.22h106.13A56.83 56.83 0 0 0 467.32 871V615.58a56.83 56.83 0 0 0-56.83-56.84zM871.49 558.74H616.08a56.74 56.74 0 0 0-56.84 56.73V871a56.84 56.84 0 0 0 56.84 56.84h255.41A56.83 56.83 0 0 0 928.32 871V615.58a56.83 56.83 0 0 0-56.83-56.84z" fill="#C2F8FF" p-id="989"></path></svg></span><span style="font-size:30px;"> 特别声明</span></div><div class="tbsm-wz">千屹博客旗下的所有文章，是通过本人课堂学习和课外自学所精心整理的知识巨著<br/>难免会有出错的地方<br/>如果细心的你发现了小失误，可以在下方评论区告诉我，或者私信我！<br />非常感谢大家的热烈支持！</div></div>]]></content>
    
    
    
    <tags>
      
      <tag>Centos 7</tag>
      
      <tag>NFS</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>Centos 8 stream 部署 kvm</title>
    <link href="/2023/01/12/KVM/"/>
    <url>/2023/01/12/KVM/</url>
    
    <content type="html"><![CDATA[<h1 id="Centos-8-stream-部署-kvm"><a href="#Centos-8-stream-部署-kvm" class="headerlink" title="Centos 8 stream 部署 kvm"></a>Centos 8 stream 部署 kvm</h1><h2 id="环境部署"><a href="#环境部署" class="headerlink" title="环境部署"></a>环境部署</h2><table><thead><tr><th>网卡模式</th><th align="left">NAT模式</th></tr></thead><tbody><tr><td>ip</td><td align="left">192.168.48.10</td></tr><tr><td>内存</td><td align="left">4G</td></tr><tr><td>核心</td><td align="left">4</td></tr><tr><td>硬盘</td><td align="left">100G</td></tr><tr><td>功能</td><td align="left">AMD-V</td></tr></tbody></table><h3 id="设置主机名"><a href="#设置主机名" class="headerlink" title="设置主机名"></a>设置主机名</h3><figure class="highlight graphql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs graphql"><span class="hljs-punctuation">[</span>root<span class="hljs-meta">@localhost</span> ~<span class="hljs-punctuation">]</span><span class="hljs-comment"># hostnamectl set-hostname KVM &amp;&amp; bash</span><br><span class="hljs-punctuation">[</span>root<span class="hljs-meta">@KVM</span> ~<span class="hljs-punctuation">]</span><span class="hljs-comment">#</span><br></code></pre></td></tr></table></figure><h3 id="设置网络"><a href="#设置网络" class="headerlink" title="设置网络"></a>设置网络</h3><h4 id="设置虚拟机网络（ens160是NAT模式）"><a href="#设置虚拟机网络（ens160是NAT模式）" class="headerlink" title="设置虚拟机网络（ens160是NAT模式）"></a>设置虚拟机网络（ens160是NAT模式）</h4><figure class="highlight routeros"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br></pre></td><td class="code"><pre><code class="hljs routeros">[root@KVM ~]# vi /etc/sysconfig/network-scripts/ifcfg-ens160<br><span class="hljs-attribute">BOOTPROTO</span>=static<br><span class="hljs-attribute">ONBOOT</span>=<span class="hljs-literal">yes</span><br><span class="hljs-attribute">IPADDR</span>=192.168.48.10<br><span class="hljs-attribute">PREFIX</span>=24<br><span class="hljs-attribute">GATEWAY</span>=192.168.48.2<br><span class="hljs-attribute">DNS1</span>=192.168.48.2<br><span class="hljs-attribute">DOMAIN</span>=114.114.114.114<br>[root@KVM ~]# nmcli c reload<br>[root@KVM ~]# nmcli c up ens160<span class="hljs-built_in"></span><br><span class="hljs-built_in">Connection </span>successfully activated (D-Bus active path: /org/freedesktop/NetworkManager/ActiveConnection/4)<br>[root@KVM ~]#<span class="hljs-built_in"> ip </span>a<br>1: lo: &lt;LOOPBACK,UP,LOWER_UP&gt; mtu 65536 qdisc noqueue state UNKNOWN<span class="hljs-built_in"> group default </span>qlen 1000<br>    link/loopback 00:00:00:00:00:00 brd 00:00:00:00:00:00<br>    inet 127.0.0.1/8 scope host lo<br>       valid_lft forever preferred_lft forever<br>    inet6 ::1/128 scope host<br>       valid_lft forever preferred_lft forever<br>2: ens160: &lt;BROADCAST,MULTICAST,UP,LOWER_UP&gt; mtu 1500 qdisc mq state UP<span class="hljs-built_in"> group default </span>qlen 1000<br>    link/ether 00:0c:29:ce:a9:48 brd ff:ff:ff:ff:ff:ff<br>    altname enp3s0<br>    inet 192.168.48.10/24 brd 192.168.48.255 scope global noprefixroute ens160<br>       valid_lft forever preferred_lft forever<br>    inet6 fe80::20c:29ff:fece:a948/64 scope link noprefixroute<br>       valid_lft forever preferred_lft forever<br>[root@KVM ~]#<span class="hljs-built_in"> ping </span>-c 4 jd.com<span class="hljs-built_in"></span><br><span class="hljs-built_in">PING </span>jd.com (111.13.149.108) 56(84) bytes of data.<br>64 bytes <span class="hljs-keyword">from</span> 111.13.149.108 (111.13.149.108): <span class="hljs-attribute">icmp_seq</span>=1 <span class="hljs-attribute">ttl</span>=48 <span class="hljs-attribute">time</span>=47.8 ms<br>64 bytes <span class="hljs-keyword">from</span> 111.13.149.108 (111.13.149.108): <span class="hljs-attribute">icmp_seq</span>=2 <span class="hljs-attribute">ttl</span>=48 <span class="hljs-attribute">time</span>=48.2 ms<br>64 bytes <span class="hljs-keyword">from</span> 111.13.149.108 (111.13.149.108): <span class="hljs-attribute">icmp_seq</span>=3 <span class="hljs-attribute">ttl</span>=48 <span class="hljs-attribute">time</span>=48.2 ms<br>64 bytes <span class="hljs-keyword">from</span> 111.13.149.108 (111.13.149.108): <span class="hljs-attribute">icmp_seq</span>=4 <span class="hljs-attribute">ttl</span>=48 <span class="hljs-attribute">time</span>=48.3 ms<br><br>--- jd.com<span class="hljs-built_in"> ping </span>statistics ---<br>4 packets transmitted, 4 received, 0% packet loss, time 6077ms<br>rtt min/avg/max/mdev = 47.845/48.146/48.297/0.235 ms<br></code></pre></td></tr></table></figure><h3 id="检查虚拟机是否支持虚拟化"><a href="#检查虚拟机是否支持虚拟化" class="headerlink" title="检查虚拟机是否支持虚拟化"></a>检查虚拟机是否支持虚拟化</h3><h4 id="勾选cpu虚拟化（宿主机是amd芯片）"><a href="#勾选cpu虚拟化（宿主机是amd芯片）" class="headerlink" title="勾选cpu虚拟化（宿主机是amd芯片）"></a>勾选cpu虚拟化（宿主机是amd芯片）</h4><p><img src="https://article.biliimg.com/bfs/article/c27dc4eef8852c4550e9c61cf8885801697559838.png" alt="image-20230209225201606"></p><h4 id="查看虚拟化是否支持"><a href="#查看虚拟化是否支持" class="headerlink" title="查看虚拟化是否支持"></a>查看虚拟化是否支持</h4><figure class="highlight autoit"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs autoit">[root<span class="hljs-symbol">@KVM</span> ~]<span class="hljs-meta"># lscpu</span><br>Virtualization:      AMD-V<br>说明已支持虚拟化<br></code></pre></td></tr></table></figure><h3 id="设置阿里yum源"><a href="#设置阿里yum源" class="headerlink" title="设置阿里yum源"></a>设置阿里yum源</h3><figure class="highlight tap"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><code class="hljs tap">[root@KVM ~]<span class="hljs-comment"># cp /etc/yum.repos.d/CentOS-Stream-BaseOS.repo /etc/yum.repos.d/CentOS-Stream-BaseOS.repo.bak</span><br>[root@KVM ~]<span class="hljs-comment"># sed -i &#x27;s/mirrorlist/#mirrorlist/&#x27; /etc/yum.repos.d/CentOS-Stream-BaseOS.repo</span><br>[root@KVM ~]<span class="hljs-comment"># sed -i &#x27;s/#baseurl=http:\/\/mirror.centos.org/baseurl=http:\/\/mirrors.aliyun.com/g&#x27; /etc/yum.repos.d/CentOS-Stream-BaseOS.repo</span><br>[root@KVM ~]<span class="hljs-comment"># yum clean all &amp;&amp; yum makecache</span><br>0 files removed<br>CentOS Stream<span class="hljs-number"> 8 </span>- AppStream                                       <span class="hljs-number"> 14 </span>MB/s | <span class="hljs-number"> 27 </span>MB     00:01<br>CentOS Stream<span class="hljs-number"> 8 </span>- BaseOS                                          4.0 MB/s | <span class="hljs-number"> 26 </span>MB     00:06<br>CentOS Stream<span class="hljs-number"> 8 </span>- Extras                                          <span class="hljs-number"> 28 </span>kB/s | <span class="hljs-number"> 18 </span>kB     00:00<br>CentOS Stream<span class="hljs-number"> 8 </span>- Extras common packages                          8.2 kB/s | 5.2 kB     00:00<br>Metadata cache created.<br>[root@KVM ~]<span class="hljs-comment">#</span><br></code></pre></td></tr></table></figure><h2 id="安装kvm"><a href="#安装kvm" class="headerlink" title="安装kvm"></a>安装kvm</h2><h3 id="安装kvm及其工具"><a href="#安装kvm及其工具" class="headerlink" title="安装kvm及其工具"></a>安装kvm及其工具</h3><figure class="highlight ada"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><code class="hljs ada">[root@KVM ~]# yum install qemu-kvm qemu-img  virt-manager libvirt virt-manager libvirt-client virt-install virt-viewer -y<br>Waiting <span class="hljs-keyword">for</span> process <span class="hljs-keyword">with</span> pid <span class="hljs-number">8674</span> to finish.<br>Last metadata expiration check: <span class="hljs-number">0</span>:<span class="hljs-number">00</span>:<span class="hljs-number">05</span> ago on Sun <span class="hljs-number">08</span> Jan <span class="hljs-number">2023</span> <span class="hljs-number">06</span>:<span class="hljs-number">03</span>:<span class="hljs-number">34</span> AM EST.<br><span class="hljs-keyword">Package</span> <span class="hljs-title">qemu-kvm-15:6.2.0-20.module_el8.7.0+1218+f626c2ff.1.x86_64 </span><span class="hljs-keyword">is</span> already installed.<br><span class="hljs-keyword">Package</span> <span class="hljs-title">qemu-img-15:6.2.0-20.module_el8.7.0+1218+f626c2ff.1.x86_64 </span><span class="hljs-keyword">is</span> already installed.<br><span class="hljs-keyword">Package</span> <span class="hljs-title">virt-manager-3.2.0-4.el8.noarch </span><span class="hljs-keyword">is</span> already installed.<br><span class="hljs-keyword">Package</span> <span class="hljs-title">libvirt-8.0.0-10.module_el8.7.0+1218+f626c2ff.x86_64 </span><span class="hljs-keyword">is</span> already installed.<br><span class="hljs-keyword">Package</span> <span class="hljs-title">libvirt-client-8.0.0-10.module_el8.7.0+1218+f626c2ff.x86_64 </span><span class="hljs-keyword">is</span> already installed.<br><span class="hljs-keyword">Package</span> <span class="hljs-title">virt-install-3.2.0-4.el8.noarch </span><span class="hljs-keyword">is</span> already installed.<br><span class="hljs-keyword">Package</span> <span class="hljs-title">virt-viewer-9.0-11.el8.x86_64 </span><span class="hljs-keyword">is</span> already installed.<br>Dependencies resolved.<br>Nothing to <span class="hljs-keyword">do</span>.<br>Complete!<br></code></pre></td></tr></table></figure><h3 id="启动libvirtd服务"><a href="#启动libvirtd服务" class="headerlink" title="启动libvirtd服务"></a>启动libvirtd服务</h3><p>启动服务并设置韦开机自启动，查看状态</p><figure class="highlight dts"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><code class="hljs dts">[root@KVM ~]<span class="hljs-meta"># systemctl enable --now libvirtd</span><br>[root@KVM ~]<span class="hljs-meta"># systemctl status libvirtd</span><br>● libvirtd.service - Virtualization daemon<br><span class="hljs-symbol">   Loaded:</span> loaded (<span class="hljs-keyword">/usr/</span>lib<span class="hljs-keyword">/systemd/</span>system/libvirtd.<span class="hljs-attr">service</span><span class="hljs-punctuation">;</span> <span class="hljs-attr">enabled</span><span class="hljs-punctuation">;</span> vendor preset: enabled)<br><span class="hljs-symbol">   Active:</span> active (running) since Sun <span class="hljs-number">2023</span><span class="hljs-number">-01</span><span class="hljs-number">-08</span> <span class="hljs-number">06</span>:<span class="hljs-number">05</span>:<span class="hljs-number">12</span> EST<span class="hljs-punctuation">;</span> <span class="hljs-number">12</span>s ago<br><span class="hljs-symbol">     Docs:</span> man:libvirtd(<span class="hljs-number">8</span>)<br><span class="hljs-symbol">           https:</span><span class="hljs-comment">//libvirt.org</span><br></code></pre></td></tr></table></figure><h3 id="验证是否已加载kvm模块"><a href="#验证是否已加载kvm模块" class="headerlink" title="验证是否已加载kvm模块"></a>验证是否已加载kvm模块</h3><figure class="highlight tap"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs tap">[root@KVM ~]<span class="hljs-comment"># lsmod | grep kvm</span><br>kvm_amd              <span class="hljs-number"> 143360 </span> 0<br>ccp                  <span class="hljs-number"> 106496 </span><span class="hljs-number"> 1 </span>kvm_amd<br>kvm                  <span class="hljs-number"> 942080 </span><span class="hljs-number"> 1 </span>kvm_amd<br>irqbypass             <span class="hljs-number"> 16384 </span><span class="hljs-number"> 1 </span>kvm<br></code></pre></td></tr></table></figure><figure class="highlight asciidoc"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs asciidoc">[root@KVM ~]# virsh list<br><span class="hljs-section"> Id   Name   State</span><br><span class="hljs-section">--------------------</span><br>说明kvm安装成功<br></code></pre></td></tr></table></figure><h2 id="设置宿主机网络（kvm这个机子）"><a href="#设置宿主机网络（kvm这个机子）" class="headerlink" title="设置宿主机网络（kvm这个机子）"></a>设置宿主机网络（kvm这个机子）</h2><h3 id="查看网络情况"><a href="#查看网络情况" class="headerlink" title="查看网络情况"></a>查看网络情况</h3><p>KVN软件安装后默认以NAT方式实现网络通信。为了让KVM虚拟机能够与宿主机、本地主机、互联网相互通信，需将宿主机（KVM这个机子）网络设置为bridge方式。</p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs css">ip <span class="hljs-selector-tag">a</span><br></code></pre></td></tr></table></figure><p>lo为回环接口，该接口不从外界接收和发送数据包，仅在操作系统内部接收和发送数据包</p><p>ens160是以太网接口，与网卡对应，每个硬件网卡对应一个以太网接口</p><p>virbr0为虚拟网络接口，由kvm创建，为连接其上的kvm虚拟机网络提供访问外部网络的功能</p><h3 id="创建bridge"><a href="#创建bridge" class="headerlink" title="创建bridge"></a>创建bridge</h3><p>创建 bridge 时需使用nmcli命令创建 br0，并将其绑定到可以正常工作的网络接口上，同时让br0成为连接宿主机与互联网的接口。</p><figure class="highlight llvm"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><code class="hljs llvm">[root<span class="hljs-title">@KVM</span> ~]# nmcli connection <span class="hljs-keyword">add</span> <span class="hljs-keyword">type</span> bridge con-name <span class="hljs-keyword">br</span><span class="hljs-number">0</span> ifname <span class="hljs-keyword">br</span><span class="hljs-number">0</span> autoconnect yes<br><br>Connection &#x27;<span class="hljs-keyword">br</span><span class="hljs-number">0</span>&#x27; (ac<span class="hljs-number">3429</span>bc<span class="hljs-number">-907</span><span class="hljs-keyword">c</span><span class="hljs-number">-4</span>ad<span class="hljs-number">1</span>-bd<span class="hljs-number">54</span>-bbf<span class="hljs-number">39</span>d<span class="hljs-number">853</span>a<span class="hljs-number">53</span>) successfully added.<br>查看是否创建成功<br>[root<span class="hljs-title">@KVM</span> ~]# nmcli <span class="hljs-keyword">c</span><br>NAME    UUID                                  TYPE      DEVICE<br><span class="hljs-keyword">br</span><span class="hljs-number">0</span>     ac<span class="hljs-number">3429</span>bc<span class="hljs-number">-907</span><span class="hljs-keyword">c</span><span class="hljs-number">-4</span>ad<span class="hljs-number">1</span>-bd<span class="hljs-number">54</span>-bbf<span class="hljs-number">39</span>d<span class="hljs-number">853</span>a<span class="hljs-number">53</span>  bridge    <span class="hljs-keyword">br</span><span class="hljs-number">0</span><br>ens<span class="hljs-number">160</span>  <span class="hljs-number">0</span>d<span class="hljs-number">45e631</span>-b<span class="hljs-number">256</span><span class="hljs-number">-4e08</span>-b<span class="hljs-number">8</span>d<span class="hljs-number">8</span><span class="hljs-number">-2</span><span class="hljs-keyword">c</span><span class="hljs-number">42</span>b<span class="hljs-number">9481594</span>  ethernet  ens<span class="hljs-number">160</span><br>virbr<span class="hljs-number">0</span>  <span class="hljs-number">7075</span>d<span class="hljs-number">19</span>e-a<span class="hljs-number">20</span><span class="hljs-keyword">c</span><span class="hljs-number">-43</span>da-b<span class="hljs-number">161</span>-e<span class="hljs-number">7</span><span class="hljs-keyword">c</span><span class="hljs-number">7519</span>febdb  bridge    virbr<span class="hljs-number">0</span><br>网桥创建成功后会自动生成配置文件<br>[root<span class="hljs-title">@KVM</span> ~]# ls -l /etc/sysconfig/network-scripts/<br>-rw-r--r--. <span class="hljs-number">1</span> root root <span class="hljs-number">312</span> Jan  <span class="hljs-number">8</span> <span class="hljs-number">06</span>:<span class="hljs-number">20</span> ifcfg-<span class="hljs-keyword">br</span><span class="hljs-number">0</span><br>-rw-r--r--. <span class="hljs-number">1</span> root root <span class="hljs-number">365</span> Jan  <span class="hljs-number">8</span> <span class="hljs-number">05</span>:<span class="hljs-number">40</span> ifcfg-ens<span class="hljs-number">160</span><br></code></pre></td></tr></table></figure><h3 id="设置br0和ens160网卡"><a href="#设置br0和ens160网卡" class="headerlink" title="设置br0和ens160网卡"></a>设置br0和ens160网卡</h3><p>将br0桥接到ens160</p><figure class="highlight llvm"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><code class="hljs llvm">[root<span class="hljs-title">@KVM</span> ~]# vi /etc/sysconfig/network-scripts/ifcfg-<span class="hljs-keyword">br</span><span class="hljs-number">0</span><br>BOOTPROTO<span class="hljs-operator">=</span>static<br>IPADDR<span class="hljs-operator">=</span><span class="hljs-number">192.168</span>.<span class="hljs-number">48.10</span><br>GATEWAY<span class="hljs-operator">=</span><span class="hljs-number">192.168</span>.<span class="hljs-number">48.2</span><br>PREFIX<span class="hljs-operator">=</span><span class="hljs-number">24</span><br>DNS<span class="hljs-operator">=</span><span class="hljs-number">114.114</span>.<span class="hljs-number">114.114</span><br>[root<span class="hljs-title">@KVM</span> ~]# vi /etc/sysconfig/network-scripts/ifcfg-ens<span class="hljs-number">160</span><br>BOOTPROTO<span class="hljs-operator">=</span>none<br>BRIDGE<span class="hljs-operator">=</span><span class="hljs-keyword">br</span><span class="hljs-number">0</span><br>[root<span class="hljs-title">@KVM</span> ~]# nmcli <span class="hljs-keyword">c</span> reload<br>[root<span class="hljs-title">@KVM</span> ~]# nmcli <span class="hljs-keyword">c</span> drow <span class="hljs-keyword">br</span><span class="hljs-number">0</span>r<br>此时如果你是用ssh工具连着的，你会断开，此时你要去vm那里输入<br>[root<span class="hljs-title">@KVM</span> ~]# nmcli <span class="hljs-keyword">c</span> up <span class="hljs-keyword">br</span><span class="hljs-number">0</span><br>[root<span class="hljs-title">@KVM</span> ~]# nmcli <span class="hljs-keyword">c</span> up ens<span class="hljs-number">160</span><br>然后等<span class="hljs-number">1</span>分钟左右，就可以连上ssh工具了<br></code></pre></td></tr></table></figure><figure class="highlight routeros"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><code class="hljs routeros">测试网络连通性<br>[root@KVM ~]#<span class="hljs-built_in"> ping </span>-c 2 jd.com<span class="hljs-built_in"></span><br><span class="hljs-built_in">PING </span>jd.com (211.144.24.218) 56(84) bytes of data.<br>64 bytes <span class="hljs-keyword">from</span> 211.144.24.218 (211.144.24.218): <span class="hljs-attribute">icmp_seq</span>=1 <span class="hljs-attribute">ttl</span>=128 <span class="hljs-attribute">time</span>=50.7 ms<br>64 bytes <span class="hljs-keyword">from</span> 211.144.24.218 (211.144.24.218): <span class="hljs-attribute">icmp_seq</span>=2 <span class="hljs-attribute">ttl</span>=128 <span class="hljs-attribute">time</span>=51.9 ms<br><br>--- jd.com<span class="hljs-built_in"> ping </span>statistics ---<br>2 packets transmitted, 2 received, 0% packet loss, time 1002ms<br>rtt min/avg/max/mdev = 50.683/51.286/51.890/0.644 ms<br>[root@KVM ~]#<br></code></pre></td></tr></table></figure><h2 id="创建kvm虚拟机"><a href="#创建kvm虚拟机" class="headerlink" title="创建kvm虚拟机"></a>创建kvm虚拟机</h2><table><thead><tr><th>存储池</th><th>存放目录</th><th>内容规划</th></tr></thead><tbody><tr><td>disk</td><td>&#x2F;opt&#x2F;disk</td><td>存放KVM磁盘文件</td></tr><tr><td>存放iso</td><td>&#x2F;opt&#x2F;iso</td><td>存放待安装的ISO文件</td></tr></tbody></table><h3 id="创建iso存储池"><a href="#创建iso存储池" class="headerlink" title="创建iso存储池"></a>创建iso存储池</h3><figure class="highlight coffeescript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br></pre></td><td class="code"><pre><code class="hljs coffeescript">[root@KVM ~]<span class="hljs-comment"># mkdir -p /opt/iso</span><br>[root@KVM ~]<span class="hljs-comment"># chown root:root /opt/iso/</span><br>[root@KVM ~]<span class="hljs-comment"># chmod 777 /opt/iso/</span><br>[root@KVM ~]<span class="hljs-comment"># virsh pool-define-as iso --type dir --target /opt/iso/ </span><br>Pool iso--type defined<br><span class="hljs-comment">#名称为iso的存储池定义成功</span><br>如果名字打错 用<br>virsh pool-destroy [名字]<br>virsh pool-undefine [名字] 删除<br>[root@KVM ~]<span class="hljs-comment"># virsh pool-list --all</span><br> Name   State      Autostart<br>------------------------------<br> iso    inactive   <span class="hljs-literal">no</span><br><br>[root@KVM ~]<span class="hljs-comment"># virsh pool-build iso</span><br>Pool iso built<br><span class="hljs-comment">#创建名为iso的存储池</span><br>[root@KVM ~]<span class="hljs-comment"># virsh pool-start iso</span><br>Pool iso started<br><span class="hljs-comment">#启动iso存储池</span><br>[root@KVM ~]<span class="hljs-comment"># virsh pool-autostart iso</span><br>Pool iso marked <span class="hljs-keyword">as</span> autostarted<br><span class="hljs-comment">#设置iso存储池自启动</span><br>查看iso信息<br>[root@KVM ~]<span class="hljs-comment"># virsh pool-info iso</span><br>Name:           iso<br>UUID:           a966995e<span class="hljs-number">-2722</span><span class="hljs-number">-4</span>a3f-a318-e158a642439e<br>State:          running<br>Persistent:     <span class="hljs-literal">yes</span><br>Autostart:      <span class="hljs-literal">yes</span><br>Capacity:       <span class="hljs-number">63.84</span> GiB<br>Allocation:     <span class="hljs-number">2.75</span> GiB<br>Available:      <span class="hljs-number">61.09</span> GiB<br></code></pre></td></tr></table></figure><h3 id="创建disk存储池"><a href="#创建disk存储池" class="headerlink" title="创建disk存储池"></a>创建disk存储池</h3><figure class="highlight coffeescript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><code class="hljs coffeescript">[root@KVM ~]<span class="hljs-comment"># mkdir -p /opt/disk</span><br>[root@KVM ~]<span class="hljs-comment"># chown root:root /opt/disk/</span><br>[root@KVM ~]<span class="hljs-comment"># chmod 777 /opt/disk/</span><br>[root@KVM ~]<span class="hljs-comment"># virsh pool-define-as disk --type dir --target /opt/disk/ </span><br>Pool disk defined<br><br>[root@KVM ~]<span class="hljs-comment"># virsh pool-build disk</span><br>Pool disk built<br><br>[root@KVM ~]<span class="hljs-comment"># virsh pool-start disk</span><br>Pool disk started<br><br>[root@KVM ~]<span class="hljs-comment"># virsh pool-autostart disk</span><br>Pool disk marked <span class="hljs-keyword">as</span> autostarted<br><br>[root@KVM ~]<span class="hljs-comment"># virsh pool-info disk</span><br>Name:           disk<br>UUID:           <span class="hljs-number">30</span>d784dc<span class="hljs-number">-386</span>b<span class="hljs-number">-46e6</span>-a22b<span class="hljs-number">-79</span>a3b3447354<br>State:          running<br>Persistent:     <span class="hljs-literal">yes</span><br>Autostart:      <span class="hljs-literal">yes</span><br>Capacity:       <span class="hljs-number">63.84</span> GiB<br>Allocation:     <span class="hljs-number">2.75</span> GiB<br>Available:      <span class="hljs-number">61.09</span> GiB<br></code></pre></td></tr></table></figure><h3 id="获取Centos7"><a href="#获取Centos7" class="headerlink" title="获取Centos7"></a>获取Centos7</h3><h4 id="下载Centos7最小化版本到ISO目录下（网络方式）"><a href="#下载Centos7最小化版本到ISO目录下（网络方式）" class="headerlink" title="下载Centos7最小化版本到ISO目录下（网络方式）"></a>下载Centos7最小化版本到ISO目录下（网络方式）</h4><figure class="highlight gradle"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><code class="hljs gradle">[root@KVM ~]# yum install -y wget<br>[root@KVM ~]# wget -O <span class="hljs-regexp">/opt/i</span>so<span class="hljs-regexp">/Centos7.iso https:/</span><span class="hljs-regexp">/mirrors.aliyun.com/</span>centos<span class="hljs-regexp">/7.9.2009/i</span>sos<span class="hljs-regexp">/x86_64/</span>CentOS-<span class="hljs-number">7</span>-x86_64-Minimal-<span class="hljs-number">2009</span>.iso<br>--<span class="hljs-number">2023</span>-<span class="hljs-number">01</span>-<span class="hljs-number">08</span> <span class="hljs-number">08</span>:<span class="hljs-number">09</span>:<span class="hljs-number">00</span>--  https:<span class="hljs-comment">//mirrors.aliyun.com/centos/7.9.2009/isos/x86_64/CentOS-7-x86_64-Minimal-2009.iso</span><br>Resolving mirrors.aliyun.com (mirrors.aliyun.com)... <span class="hljs-number">120.241</span>.<span class="hljs-number">238.243</span>, <span class="hljs-number">120.241</span>.<span class="hljs-number">238.242</span>, <span class="hljs-number">120.241</span>.<span class="hljs-number">238.241</span>, ...<br>Connecting to mirrors.aliyun.com (mirrors.aliyun.com)|<span class="hljs-number">120.241</span>.<span class="hljs-number">238.243</span>|:<span class="hljs-number">443</span>... connected.<br>HTTP request sent, awaiting response... <span class="hljs-number">200</span> OK<br>Length: <span class="hljs-number">1020264448</span> (<span class="hljs-number">973</span>M) [application/x-cd-image]<br>Saving to: ‘<span class="hljs-regexp">/opt/i</span>so/Centos7.iso’<br><br><span class="hljs-regexp">/opt/i</span>so<span class="hljs-regexp">/Centos7.iso     100%[================================&gt;] 973.00M  1.53MB/</span>s    in <span class="hljs-number">10</span>m <span class="hljs-number">54</span>s<br><br><span class="hljs-number">2023</span>-<span class="hljs-number">01</span>-<span class="hljs-number">08</span> <span class="hljs-number">08</span>:<span class="hljs-number">19</span>:<span class="hljs-number">54</span> (<span class="hljs-number">1.49</span> MB<span class="hljs-regexp">/s) - ‘/</span>opt<span class="hljs-regexp">/iso/</span>Centos7.iso’ saved [<span class="hljs-number">1020264448</span>/<span class="hljs-number">1020264448</span>]<br>[root@KVM ~]# ll <span class="hljs-regexp">/opt/i</span>so<br>total <span class="hljs-number">996352</span><br>-rw-r--r--. <span class="hljs-number">1</span> root root <span class="hljs-number">1020264448</span> Nov  <span class="hljs-number">3</span>  <span class="hljs-number">2020</span> Centos7.iso<br></code></pre></td></tr></table></figure><h4 id="也可以本地下载好后，上传至iso目录（本地方式）"><a href="#也可以本地下载好后，上传至iso目录（本地方式）" class="headerlink" title="也可以本地下载好后，上传至iso目录（本地方式）"></a>也可以本地下载好后，上传至iso目录（本地方式）</h4><p>下载连接：<a href="https://mirrors.aliyun.com/centos/7.9.2009/isos/x86_64/CentOS-7-x86_64-Minimal-2009.iso">https://mirrors.aliyun.com/centos/7.9.2009/isos/x86_64/CentOS-7-x86_64-Minimal-2009.iso</a></p><figure class="highlight tap"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs tap">[root@KVM ~]<span class="hljs-comment"># ll /opt/iso</span><br>total 996352<br>-rw-r--r--.<span class="hljs-number"> 1 </span>root root<span class="hljs-number"> 1020264448 </span>Nov <span class="hljs-number"> 3 </span><span class="hljs-number"> 2020 </span>Centos7.iso<br></code></pre></td></tr></table></figure><h3 id="安装Centos7"><a href="#安装Centos7" class="headerlink" title="安装Centos7"></a>安装Centos7</h3><h4 id="无界面安装Centos7"><a href="#无界面安装Centos7" class="headerlink" title="无界面安装Centos7"></a>无界面安装Centos7</h4><figure class="highlight vim"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br></pre></td><td class="code"><pre><code class="hljs vim">[root@KVM ~]# virt-install --virt-<span class="hljs-built_in">type</span>=kvm --name=Centos7 --vcpus=<span class="hljs-number">1</span> --memory=<span class="hljs-number">2048</span> --network bridge=br0,model=virtio --os-<span class="hljs-built_in">type</span>=linux --os-variant=rhel7.<span class="hljs-number">7</span> --location=/<span class="hljs-keyword">opt</span>/iso/Centos7.iso --disk /<span class="hljs-keyword">opt</span>/disk/Centos7.qcow2,format=qcow2,size=<span class="hljs-number">10</span> --console=pty,target_type=serial --graphics=none --extra-<span class="hljs-keyword">args</span>=<span class="hljs-string">&quot;console=tty0 console=ttyS0&quot;</span><br><br>Starting install...<br>Retrieving <span class="hljs-keyword">file</span> vmlinuz...                                                 | <span class="hljs-number">6.5</span> MB  <span class="hljs-number">00</span>:<span class="hljs-number">00</span>:<span class="hljs-number">00</span><br>Retrieving <span class="hljs-keyword">file</span> initrd.img...                                              |  <span class="hljs-number">53</span> MB  <span class="hljs-number">00</span>:<span class="hljs-number">00</span>:<span class="hljs-number">00</span><br>Allocating <span class="hljs-string">&#x27;Centos7.qcow2&#x27;</span>                                                 |  <span class="hljs-number">10</span> GB  <span class="hljs-number">00</span>:<span class="hljs-number">00</span>:<span class="hljs-number">00</span><br>Running text console <span class="hljs-keyword">command</span>: virsh --connect qemu:///<span class="hljs-built_in">system</span> console Centos7<br>Connected <span class="hljs-keyword">to</span> domain <span class="hljs-string">&#x27;Centos7&#x27;</span><br>......<br>进入安装界面<br><br>Connected <span class="hljs-keyword">to</span> domain <span class="hljs-string">&#x27;Centos7&#x27;</span><br>  Please <span class="hljs-keyword">make</span> your choice from above [<span class="hljs-string">&#x27;q&#x27;</span> <span class="hljs-keyword">to</span> <span class="hljs-keyword">quit</span> | <span class="hljs-string">&#x27;b&#x27;</span> <span class="hljs-keyword">to</span> begin installation |<br>  <span class="hljs-string">&#x27;r&#x27;</span> <span class="hljs-keyword">to</span> refresh]:   Please <span class="hljs-keyword">make</span> your choice from above [<span class="hljs-string">&#x27;q&#x27;</span> <span class="hljs-keyword">to</span> <span class="hljs-keyword">quit</span> | <span class="hljs-string">&#x27;b&#x27;</span> <span class="hljs-keyword">to</span> begin installation |<br>================================================================================<br>================================================================================<br>Installation<br><br> <span class="hljs-number">1</span>) [<span class="hljs-keyword">x</span>] Language settings                 <span class="hljs-number">2</span>) [!] Time settings<br>        (English (United States))                (Timezone <span class="hljs-keyword">is</span> not <span class="hljs-keyword">set</span>.)<br> <span class="hljs-number">3</span>) [<span class="hljs-keyword">x</span>] Installation <span class="hljs-keyword">source</span>               <span class="hljs-number">4</span>) [<span class="hljs-keyword">x</span>] Software selection<br>        (Local media)                            (Minimal Install)<br> <span class="hljs-number">5</span>) [!] Installation Destination          <span class="hljs-number">6</span>) [<span class="hljs-keyword">x</span>] Kdump<br>        (No disks selected)                      (Kdump <span class="hljs-keyword">is</span> enabled)<br> <span class="hljs-number">7</span>) [ ] Network configuration             <span class="hljs-number">8</span>) [!] Root password<br>        (Not connected)                          (Password <span class="hljs-keyword">is</span> not <span class="hljs-keyword">set</span>.)<br> <span class="hljs-number">9</span>) [!] User creation<br>        (No user will <span class="hljs-keyword">be</span> created)<br>  Please <span class="hljs-keyword">make</span> your choice from above [<span class="hljs-string">&#x27;q&#x27;</span> <span class="hljs-keyword">to</span> <span class="hljs-keyword">quit</span> | <span class="hljs-string">&#x27;b&#x27;</span> <span class="hljs-keyword">to</span> begin installation |<br>  <span class="hljs-string">&#x27;r&#x27;</span> <span class="hljs-keyword">to</span> refresh]:   Please <span class="hljs-keyword">make</span> your choice from above [<span class="hljs-string">&#x27;q&#x27;</span> <span class="hljs-keyword">to</span> <span class="hljs-keyword">quit</span> | <span class="hljs-string">&#x27;b&#x27;</span> <span class="hljs-keyword">to</span> begin installation |<br><br></code></pre></td></tr></table></figure><h4 id="输入2设置时区"><a href="#输入2设置时区" class="headerlink" title="输入2设置时区"></a>输入2设置时区</h4><figure class="highlight routeros"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><code class="hljs routeros">================================================================================<br>================================================================================<br>Time<span class="hljs-built_in"> settings</span><br><span class="hljs-built_in"></span><br>Timezone: <span class="hljs-keyword">not</span> <span class="hljs-built_in">set</span><br><span class="hljs-built_in"></span><br><span class="hljs-built_in">NTP </span>servers<span class="hljs-keyword">:not</span> configured<br><br> 1)  <span class="hljs-built_in">Set</span> timezone<br> 2)  Configure<span class="hljs-built_in"> NTP </span>servers<br>  Please make your choice <span class="hljs-keyword">from</span> above [<span class="hljs-string">&#x27;q&#x27;</span> <span class="hljs-keyword">to</span> quit | <span class="hljs-string">&#x27;c&#x27;</span> <span class="hljs-keyword">to</span> continue |<br>  <span class="hljs-string">&#x27;r&#x27;</span> <span class="hljs-keyword">to</span> refresh]:<br>================================================================================<br>================================================================================<br>按1根据提示选择Asia/shanghai   然后按c<br></code></pre></td></tr></table></figure><h4 id="输入5设置磁盘（Installation-Destination-）"><a href="#输入5设置磁盘（Installation-Destination-）" class="headerlink" title="输入5设置磁盘（Installation Destination ）"></a>输入5设置磁盘（Installation Destination ）</h4><figure class="highlight n1ql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br></pre></td><td class="code"><pre><code class="hljs n1ql">Probing storage...<br>Installation Destination<br><br>[x] 1) : 10 GiB (vda)<br><br><span class="hljs-number">1</span> disk selected; 10 GiB capacity; 10 GiB free ...<br><br>  Please make your choice <span class="hljs-keyword">from</span> above [<span class="hljs-string">&#x27;q&#x27;</span> <span class="hljs-keyword">to</span> quit | <span class="hljs-string">&#x27;c&#x27;</span> <span class="hljs-keyword">to</span> <span class="hljs-keyword">continue</span> |<br>  <span class="hljs-string">&#x27;r&#x27;</span> <span class="hljs-keyword">to</span> refresh]:<br>Autopartitioning Options<br>再按c<br>================================================================================<br>[ ] <span class="hljs-number">1</span>) <span class="hljs-built_in">Replace</span> Existing Linux <span class="hljs-keyword">system</span>(s)<br><br>[x] <span class="hljs-number">2</span>) <span class="hljs-keyword">Use</span> <span class="hljs-keyword">All</span> Space<br><br>[ ] <span class="hljs-number">3</span>) <span class="hljs-keyword">Use</span> Free Space<br><br>Installation requires partitioning of your hard drive. <span class="hljs-keyword">Select</span> what space <span class="hljs-keyword">to</span> <span class="hljs-keyword">use</span><br><span class="hljs-keyword">for</span> the install target.<br><br>  Please make your choice <span class="hljs-keyword">from</span> above [<span class="hljs-string">&#x27;q&#x27;</span> <span class="hljs-keyword">to</span> quit | <span class="hljs-string">&#x27;c&#x27;</span> <span class="hljs-keyword">to</span> <span class="hljs-keyword">continue</span> |<br>  再按c<br>================================================================================<br><span class="hljs-keyword">Partition</span> Scheme Options<br><br>[ ] <span class="hljs-number">1</span>) Standard <span class="hljs-keyword">Partition</span><br><br>[ ] <span class="hljs-number">2</span>) Btrfs<br><br>[x] <span class="hljs-number">3</span>) LVM<br><br>[ ] <span class="hljs-number">4</span>) LVM Thin Provisioning<br><br><span class="hljs-keyword">Select</span> a <span class="hljs-keyword">partition</span> scheme configuration.<br><br>  Please make your choice <span class="hljs-keyword">from</span> above [<span class="hljs-string">&#x27;q&#x27;</span> <span class="hljs-keyword">to</span> quit | <span class="hljs-string">&#x27;c&#x27;</span> <span class="hljs-keyword">to</span> <span class="hljs-keyword">continue</span> |<br>  <span class="hljs-string">&#x27;r&#x27;</span> <span class="hljs-keyword">to</span> refresh]: c<br>Generating updated storage configuration<br>Checking storage configuration...<br></code></pre></td></tr></table></figure><h4 id="按8设置root密码"><a href="#按8设置root密码" class="headerlink" title="按8设置root密码"></a>按8设置root密码</h4><figure class="highlight asciidoc"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><code class="hljs asciidoc"><span class="hljs-code">  &#x27;r&#x27; to refresh]: 8</span><br>================================================================================<br>        (Not connected)<br> 9) [!] User creation<br>================================================================================<br>Please select new root password. You will have to type it twice.<br><br>Password:<br><span class="hljs-section">Password (confirm):</span><br><span class="hljs-section">================================================================================</span><br>================================================================================<br>Question<br><br>The password you have provided is weak: The password fails the dictionary check<br>- it is too simplistic/systematic.<br>Would you like to use it anyway?<br><br>Please respond &#x27;yes&#x27; or &#x27;no&#x27;: yes<br></code></pre></td></tr></table></figure><h4 id="全部设置完成后按b确认"><a href="#全部设置完成后按b确认" class="headerlink" title="全部设置完成后按b确认"></a>全部设置完成后按b确认</h4><figure class="highlight gradle"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><code class="hljs gradle">  <span class="hljs-string">&#x27;r&#x27;</span> to refresh]: b<br>================================================================================<br>================================================================================<br>Progress<br>Setting up the installation environment<br>.<br>Creating disklabel on <span class="hljs-regexp">/dev/</span>vda<br>.<br>Creating xfs on <span class="hljs-regexp">/dev/</span>vda1<br>.<br>Creating lvmpv on <span class="hljs-regexp">/dev/</span>vda2<br>.<br>Creating swap on <span class="hljs-regexp">/dev/m</span>apper/centos-swap<br>.<br>Creating xfs on <span class="hljs-regexp">/dev/m</span>apper/centos-root<br>.<br>Running pre-installation scripts<br>.<br>Starting <span class="hljs-keyword">package</span> installation process<br>就会开始安装<br></code></pre></td></tr></table></figure><h4 id="进入登入界面"><a href="#进入登入界面" class="headerlink" title="进入登入界面"></a>进入登入界面</h4><figure class="highlight apache"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs apache"><span class="hljs-attribute">CentOS</span> Linux <span class="hljs-number">7</span> (Core)<br><span class="hljs-attribute">Kernel</span> <span class="hljs-number">3</span>.<span class="hljs-number">10</span>.<span class="hljs-number">0</span>-<span class="hljs-number">1160</span>.el7.x86_64 <span class="hljs-literal">on</span> an x86_64<br><br><span class="hljs-attribute">localhost</span> login:<br><br></code></pre></td></tr></table></figure><h2 id="管理kvm虚拟机"><a href="#管理kvm虚拟机" class="headerlink" title="管理kvm虚拟机"></a>管理kvm虚拟机</h2><h3 id="连接KVM虚拟机"><a href="#连接KVM虚拟机" class="headerlink" title="连接KVM虚拟机"></a>连接KVM虚拟机</h3><blockquote><figure class="highlight perl"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><code class="hljs perl">[root@KVM ~]<span class="hljs-comment"># virsh console Centos7</span><br>Connected to domain <span class="hljs-string">&#x27;Centos7&#x27;</span><br>Escape character is ^] (Ctrl + ])<br>error: operation failed: Active console session <span class="hljs-keyword">exists</span> <span class="hljs-keyword">for</span> this domain<br>如果你之前连接过，没有退出，但是你与宿主机的ssh断了，就会出现这种问题，也就是你之前的连接控制台的连接还存在；<br>每次连接kvm之后要退出 ctrl+] 就可以退出<br>解决办法：<br>[root@KVM ~]<span class="hljs-comment"># ps  -ef  |grep virsh</span><br>root       <span class="hljs-number">65402</span>   <span class="hljs-number">61750</span>  <span class="hljs-number">0</span> <span class="hljs-number">02</span>:<span class="hljs-number">26</span> pts/<span class="hljs-number">0</span>    <span class="hljs-number">00</span>:<span class="hljs-number">00</span>:<span class="hljs-number">00</span> virsh --<span class="hljs-keyword">connect</span> qemu:<span class="hljs-regexp">//</span><span class="hljs-regexp">/system console Centos7</span><br><span class="hljs-regexp">root       68540   66569  0 02:35 pts/</span><span class="hljs-number">2</span>    <span class="hljs-number">00</span>:<span class="hljs-number">00</span>:<span class="hljs-number">00</span> <span class="hljs-keyword">grep</span> --color=auto virsh<br>[root@KVM ~]<span class="hljs-comment"># kill -9 61750</span><br>[root@KVM ~]<span class="hljs-comment"># kill -9 65402</span><br></code></pre></td></tr></table></figure></blockquote><h4 id="查看KVM虚拟机状态"><a href="#查看KVM虚拟机状态" class="headerlink" title="查看KVM虚拟机状态"></a>查看KVM虚拟机状态</h4><figure class="highlight asciidoc"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs asciidoc">[root@KVM ~]# virsh list<br><span class="hljs-section"> Id   Name      State</span><br><span class="hljs-section">-------------------------</span><br><span class="hljs-code"> 2    Centos7   running</span><br></code></pre></td></tr></table></figure><h4 id="连接虚拟机"><a href="#连接虚拟机" class="headerlink" title="连接虚拟机"></a>连接虚拟机</h4><figure class="highlight livescript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs livescript">[root@KVM ~]<span class="hljs-comment"># virsh console Centos7</span><br>Connected <span class="hljs-keyword">to</span> domain <span class="hljs-string">&#x27;Centos7&#x27;</span><br>Escape character <span class="hljs-keyword">is</span> ^] (Ctrl + ])<br><br>[root@localhost ~]<span class="hljs-comment">#</span><br></code></pre></td></tr></table></figure><h3 id="初始化KVM虚拟机"><a href="#初始化KVM虚拟机" class="headerlink" title="初始化KVM虚拟机"></a>初始化KVM虚拟机</h3><h4 id="设置名字"><a href="#设置名字" class="headerlink" title="设置名字"></a>设置名字</h4><figure class="highlight autoit"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs autoit">[root<span class="hljs-symbol">@localhost</span> ~]<span class="hljs-meta"># hostnamectl set-hostname Centos7 &amp;&amp; bash</span><br>[root<span class="hljs-symbol">@centos7</span> ~]<span class="hljs-meta">#</span><br></code></pre></td></tr></table></figure><h4 id="设置网络-1"><a href="#设置网络-1" class="headerlink" title="设置网络"></a>设置网络</h4><h5 id="查看状态"><a href="#查看状态" class="headerlink" title="查看状态"></a>查看状态</h5><figure class="highlight pf"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><code class="hljs pf">[root@centos7 ~]<span class="hljs-comment"># ip a</span><br><span class="hljs-number">1</span>: lo: <span class="hljs-variable">&lt;LOOPBACK,UP,LOWER_UP&gt;</span> mtu <span class="hljs-number">65536</span> qdisc noqueue <span class="hljs-keyword">state</span> UNKNOWN <span class="hljs-keyword">group</span> <span class="hljs-keyword">default</span> qlen <span class="hljs-number">1000</span><br>    link/loopback <span class="hljs-number">00</span>:<span class="hljs-number">00</span>:<span class="hljs-number">00</span>:<span class="hljs-number">00</span>:<span class="hljs-number">00</span>:<span class="hljs-number">00</span> brd <span class="hljs-number">00</span>:<span class="hljs-number">00</span>:<span class="hljs-number">00</span>:<span class="hljs-number">00</span>:<span class="hljs-number">00</span>:<span class="hljs-number">00</span><br>    <span class="hljs-keyword">inet</span> <span class="hljs-number">127.0</span>.<span class="hljs-number">0.1</span>/<span class="hljs-number">8</span> scope host lo<br>       valid_lft forever preferred_lft forever<br>    <span class="hljs-keyword">inet6</span> ::<span class="hljs-number">1</span>/<span class="hljs-number">128</span> scope host<br>       valid_lft forever preferred_lft forever<br><span class="hljs-number">2</span>: eth0: <span class="hljs-variable">&lt;BROADCAST,MULTICAST,UP,LOWER_UP&gt;</span> mtu <span class="hljs-number">1500</span> qdisc pfifo_fast <span class="hljs-keyword">state</span> UP <span class="hljs-keyword">group</span> <span class="hljs-keyword">default</span> qlen <span class="hljs-number">1000</span><br>    link/ether <span class="hljs-number">52</span>:<span class="hljs-number">54</span>:<span class="hljs-number">00</span>:b2:b9:d1 brd ff:ff:ff:ff:ff:ff<br></code></pre></td></tr></table></figure><h5 id="编辑配置文件"><a href="#编辑配置文件" class="headerlink" title="编辑配置文件"></a>编辑配置文件</h5><figure class="highlight ini"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><code class="hljs ini"><span class="hljs-section">[root@centos7 ~]</span><span class="hljs-comment"># vi /etc/sysconfig/network-scripts/ifcfg-eth0</span><br><span class="hljs-attr">TYPE</span>=Ethernet<br><span class="hljs-attr">PROXY_METHOD</span>=none<br><span class="hljs-attr">BROWSER_ONLY</span>=<span class="hljs-literal">no</span><br><span class="hljs-attr">BOOTPROTO</span>=static         ---<br><span class="hljs-attr">DEFROUTE</span>=<span class="hljs-literal">yes</span><br><span class="hljs-attr">IPV4_FAILURE_FATAL</span>=<span class="hljs-literal">no</span><br><span class="hljs-attr">IPV6INIT</span>=<span class="hljs-literal">yes</span><br><span class="hljs-attr">IPV6_AUTOCONF</span>=<span class="hljs-literal">yes</span><br><span class="hljs-attr">IPV6_DEFROUTE</span>=<span class="hljs-literal">yes</span><br><span class="hljs-attr">IPV6_FAILURE_FATAL</span>=<span class="hljs-literal">no</span><br><span class="hljs-attr">IPV6_ADDR_GEN_MODE</span>=stable-privacy<br><span class="hljs-attr">NAME</span>=eth0<br><span class="hljs-attr">UUID</span>=b7053508-<span class="hljs-number">5183</span>-<span class="hljs-number">4</span>ee4-<span class="hljs-number">8</span>af5-<span class="hljs-number">8</span>d5241f57116<br><span class="hljs-attr">DEVICE</span>=eth0<br><span class="hljs-attr">ONBOOT</span>=<span class="hljs-literal">yes</span>                  ---<br><span class="hljs-attr">IPADDR</span>=<span class="hljs-number">192.168</span>.<span class="hljs-number">48.11</span>        ---<br><span class="hljs-attr">PREFIX</span>=<span class="hljs-number">24</span>                   ---<br><span class="hljs-attr">GATEWAY</span>=<span class="hljs-number">192.168</span>.<span class="hljs-number">48.2</span>        ---<br><span class="hljs-attr">DNS1</span>=<span class="hljs-number">114.114</span>.<span class="hljs-number">114.114</span>        ---<br></code></pre></td></tr></table></figure><h5 id="查看KVM网络信息"><a href="#查看KVM网络信息" class="headerlink" title="查看KVM网络信息"></a>查看KVM网络信息</h5><figure class="highlight pf"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><code class="hljs pf">[root@centos7 ~]<span class="hljs-comment"># systemctl restart network</span><br>[root@centos7 ~]<span class="hljs-comment"># ip a</span><br><span class="hljs-number">1</span>: lo: <span class="hljs-variable">&lt;LOOPBACK,UP,LOWER_UP&gt;</span> mtu <span class="hljs-number">65536</span> qdisc noqueue <span class="hljs-keyword">state</span> UNKNOWN <span class="hljs-keyword">group</span> <span class="hljs-keyword">default</span> qlen <span class="hljs-number">1000</span><br>    link/loopback <span class="hljs-number">00</span>:<span class="hljs-number">00</span>:<span class="hljs-number">00</span>:<span class="hljs-number">00</span>:<span class="hljs-number">00</span>:<span class="hljs-number">00</span> brd <span class="hljs-number">00</span>:<span class="hljs-number">00</span>:<span class="hljs-number">00</span>:<span class="hljs-number">00</span>:<span class="hljs-number">00</span>:<span class="hljs-number">00</span><br>    <span class="hljs-keyword">inet</span> <span class="hljs-number">127.0</span>.<span class="hljs-number">0.1</span>/<span class="hljs-number">8</span> scope host lo<br>       valid_lft forever preferred_lft forever<br>    <span class="hljs-keyword">inet6</span> ::<span class="hljs-number">1</span>/<span class="hljs-number">128</span> scope host<br>       valid_lft forever preferred_lft forever<br><span class="hljs-number">2</span>: eth0: <span class="hljs-variable">&lt;BROADCAST,MULTICAST,UP,LOWER_UP&gt;</span> mtu <span class="hljs-number">1500</span> qdisc pfifo_fast <span class="hljs-keyword">state</span> UP <span class="hljs-keyword">group</span> <span class="hljs-keyword">default</span> qlen <span class="hljs-number">1000</span><br>    link/ether <span class="hljs-number">52</span>:<span class="hljs-number">54</span>:<span class="hljs-number">00</span>:b2:b9:d1 brd ff:ff:ff:ff:ff:ff<br>    <span class="hljs-keyword">inet</span> <span class="hljs-number">192.168</span>.<span class="hljs-number">48.11</span>/<span class="hljs-number">24</span> brd <span class="hljs-number">192.168</span>.<span class="hljs-number">48.255</span> scope <span class="hljs-keyword">global</span> noprefixroute eth0<br>       valid_lft forever preferred_lft forever<br>    <span class="hljs-keyword">inet6</span> fe80::<span class="hljs-number">85</span>d6:dde0:<span class="hljs-number">25</span>ad:<span class="hljs-number">9</span>c43/<span class="hljs-number">64</span> scope link noprefixroute<br>       valid_lft forever preferred_lft forever<br>[root@centos7 ~]<span class="hljs-comment">#</span><br></code></pre></td></tr></table></figure><p>测试一下ssh工具是不是也可以连（cmd、MobaXterm）</p><h5 id="测试连通性"><a href="#测试连通性" class="headerlink" title="测试连通性"></a>测试连通性</h5><figure class="highlight routeros"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><code class="hljs routeros">ping KVM机子<br>[root@centos7 ~]#<span class="hljs-built_in"> ping </span>192.168.48.10 -c 2<span class="hljs-built_in"></span><br><span class="hljs-built_in">PING </span>192.168.48.10 (192.168.48.10) 56(84) bytes of data.<br>64 bytes <span class="hljs-keyword">from</span> 192.168.48.10: <span class="hljs-attribute">icmp_seq</span>=1 <span class="hljs-attribute">ttl</span>=64 <span class="hljs-attribute">time</span>=0.481 ms<br>64 bytes <span class="hljs-keyword">from</span> 192.168.48.10: <span class="hljs-attribute">icmp_seq</span>=2 <span class="hljs-attribute">ttl</span>=64 <span class="hljs-attribute">time</span>=0.254 ms<br><br>--- 192.168.48.10<span class="hljs-built_in"> ping </span>statistics ---<br>2 packets transmitted, 2 received, 0% packet loss, time 1000ms<br>rtt min/avg/max/mdev = 0.254/0.367/0.481/0.115 ms<span class="hljs-built_in"></span><br><span class="hljs-built_in">ping </span>百度<br>[root@centos7 ~]#<span class="hljs-built_in"> ping </span>baidu.com -c 2<span class="hljs-built_in"></span><br><span class="hljs-built_in">PING </span>baidu.com (39.156.66.10) 56(84) bytes of data.<br>64 bytes <span class="hljs-keyword">from</span> 39.156.66.10 (39.156.66.10): <span class="hljs-attribute">icmp_seq</span>=1 <span class="hljs-attribute">ttl</span>=128 <span class="hljs-attribute">time</span>=43.5 ms<br>64 bytes <span class="hljs-keyword">from</span> 39.156.66.10 (39.156.66.10): <span class="hljs-attribute">icmp_seq</span>=2 <span class="hljs-attribute">ttl</span>=128 <span class="hljs-attribute">time</span>=44.9 ms<br><br>--- baidu.com<span class="hljs-built_in"> ping </span>statistics ---<br>2 packets transmitted, 2 received, 0% packet loss, time 1001ms<br>rtt min/avg/max/mdev = 43.599/44.258/44.917/0.659 ms<br>[root@centos7 ~]#<br></code></pre></td></tr></table></figure><h4 id="设置Centos7虚拟机随KVM宿主机开机自启动"><a href="#设置Centos7虚拟机随KVM宿主机开机自启动" class="headerlink" title="设置Centos7虚拟机随KVM宿主机开机自启动"></a>设置Centos7虚拟机随KVM宿主机开机自启动</h4><figure class="highlight gradle"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><code class="hljs gradle">[root@KVM ~]# virsh autostart Centos7<br>Domain <span class="hljs-string">&#x27;Centos7&#x27;</span> marked as autostarted<br><br>开机自启动配置后，会在<span class="hljs-regexp">/etc/</span>libvirt<span class="hljs-regexp">/qemu/</span>autostart/目录中增加XML格式<br>[root@KVM ~]# ls <span class="hljs-regexp">/etc/</span>libvirt<span class="hljs-regexp">/qemu/</span>autostart/<br>Centos7.xml<br></code></pre></td></tr></table></figure><figure class="highlight pgsql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs pgsql">virsh autostart <span class="hljs-comment">--disable 关闭开机自启动</span><br>[root@KVM ~]# virsh autostart <span class="hljs-comment">--disable Centos7</span><br><span class="hljs-keyword">Domain</span> <span class="hljs-string">&#x27;Centos7&#x27;</span> unmarked <span class="hljs-keyword">as</span> autostarted<br></code></pre></td></tr></table></figure><h3 id="为KVM虚拟机增加CPU"><a href="#为KVM虚拟机增加CPU" class="headerlink" title="为KVM虚拟机增加CPU"></a>为KVM虚拟机增加CPU</h3><h4 id="查看Centos7配置信息"><a href="#查看Centos7配置信息" class="headerlink" title="查看Centos7配置信息"></a>查看Centos7配置信息</h4><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><code class="hljs yaml">[<span class="hljs-string">root@KVM</span> <span class="hljs-string">~</span>]<span class="hljs-comment"># virsh dominfo Centos7</span><br><span class="hljs-attr">Id:</span>             <span class="hljs-number">1</span><br><span class="hljs-attr">Name:</span>           <span class="hljs-string">Centos7</span><br><span class="hljs-attr">UUID:</span>           <span class="hljs-string">735f1ca1-c82a-4734-81ec-ea3e82e98bae</span><br><span class="hljs-attr">OS Type:</span>        <span class="hljs-string">hvm</span><br><span class="hljs-attr">State:</span>          <span class="hljs-string">running</span><br><span class="hljs-string">CPU(s):</span>         <span class="hljs-number">1</span><br><span class="hljs-attr">CPU time:</span>       <span class="hljs-number">17.</span><span class="hljs-string">3s</span><br><span class="hljs-attr">Max memory:</span>     <span class="hljs-number">2097152</span> <span class="hljs-string">KiB</span><br><span class="hljs-attr">Used memory:</span>    <span class="hljs-number">2097152</span> <span class="hljs-string">KiB</span><br><span class="hljs-attr">Persistent:</span>     <span class="hljs-literal">yes</span><br><span class="hljs-attr">Autostart:</span>      <span class="hljs-string">enable</span><br><span class="hljs-attr">Managed save:</span>   <span class="hljs-literal">no</span><br><span class="hljs-attr">Security model:</span> <span class="hljs-string">selinux</span><br><span class="hljs-attr">Security DOI:</span>   <span class="hljs-number">0</span><br><span class="hljs-attr">Security label:</span> <span class="hljs-string">system_u:system_r:svirt_t:s0:c202,c740</span> <span class="hljs-string">(enforcing)</span><br></code></pre></td></tr></table></figure><h4 id="关闭虚拟机"><a href="#关闭虚拟机" class="headerlink" title="关闭虚拟机"></a>关闭虚拟机</h4><figure class="highlight asciidoc"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><code class="hljs asciidoc">[root@KVM ~]# virsh shutdown Centos7<br>Domain <span class="hljs-emphasis">&#x27;Centos7&#x27;</span> is being shutdown<br>[root@KVM ~]# virsh list --all<br><span class="hljs-section"> Id   Name      State</span><br><span class="hljs-section">--------------------------</span><br><span class="hljs-code"> -    Centos7   shut off</span><br></code></pre></td></tr></table></figure><h4 id="修改Centos7-CPU核心数量"><a href="#修改Centos7-CPU核心数量" class="headerlink" title="修改Centos7 CPU核心数量"></a>修改Centos7 CPU核心数量</h4><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><code class="hljs xml">[root@KVM ~]# vi /etc/libvirt/qemu/Centos7.xml<br><span class="hljs-tag">&lt;<span class="hljs-name">domain</span> <span class="hljs-attr">type</span>=<span class="hljs-string">&#x27;kvm&#x27;</span>&gt;</span><br>  <span class="hljs-tag">&lt;<span class="hljs-name">name</span>&gt;</span>Centos7<span class="hljs-tag">&lt;/<span class="hljs-name">name</span>&gt;</span><br>  <span class="hljs-tag">&lt;<span class="hljs-name">uuid</span>&gt;</span>735f1ca1-c82a-4734-81ec-ea3e82e98bae<span class="hljs-tag">&lt;/<span class="hljs-name">uuid</span>&gt;</span><br>  <span class="hljs-tag">&lt;<span class="hljs-name">metadata</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">libosinfo:libosinfo</span> <span class="hljs-attr">xmlns:libosinfo</span>=<span class="hljs-string">&quot;http://libosinfo.org/xmlns/libvirt/domain/1.0&quot;</span>&gt;</span><br>      <span class="hljs-tag">&lt;<span class="hljs-name">libosinfo:os</span> <span class="hljs-attr">id</span>=<span class="hljs-string">&quot;http://redhat.com/rhel/7.7&quot;</span>/&gt;</span><br>    <span class="hljs-tag">&lt;/<span class="hljs-name">libosinfo:libosinfo</span>&gt;</span><br>  <span class="hljs-tag">&lt;/<span class="hljs-name">metadata</span>&gt;</span><br>  <span class="hljs-tag">&lt;<span class="hljs-name">memory</span> <span class="hljs-attr">unit</span>=<span class="hljs-string">&#x27;KiB&#x27;</span>&gt;</span>2097152<span class="hljs-tag">&lt;/<span class="hljs-name">memory</span>&gt;</span><br>  <span class="hljs-tag">&lt;<span class="hljs-name">currentMemory</span> <span class="hljs-attr">unit</span>=<span class="hljs-string">&#x27;KiB&#x27;</span>&gt;</span>2097152<span class="hljs-tag">&lt;/<span class="hljs-name">currentMemory</span>&gt;</span><br>  <span class="hljs-tag">&lt;<span class="hljs-name">vcpu</span> <span class="hljs-attr">placement</span>=<span class="hljs-string">&#x27;static&#x27;</span>&gt;</span>2<span class="hljs-tag">&lt;/<span class="hljs-name">vcpu</span>&gt;</span>    修改为2<br>  <span class="hljs-tag">&lt;<span class="hljs-name">os</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">type</span> <span class="hljs-attr">arch</span>=<span class="hljs-string">&#x27;x86_64&#x27;</span> <span class="hljs-attr">machine</span>=<span class="hljs-string">&#x27;pc-q35-rhel8.6.0&#x27;</span>&gt;</span>hvm<span class="hljs-tag">&lt;/<span class="hljs-name">type</span>&gt;</span><br><br></code></pre></td></tr></table></figure><h4 id="启动虚拟机并查看配置文件"><a href="#启动虚拟机并查看配置文件" class="headerlink" title="启动虚拟机并查看配置文件"></a>启动虚拟机并查看配置文件</h4><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><code class="hljs yaml">[<span class="hljs-string">root@KVM</span> <span class="hljs-string">~</span>]<span class="hljs-comment"># virsh start Centos7</span><br><span class="hljs-string">Domain</span> <span class="hljs-string">&#x27;Centos7&#x27;</span> <span class="hljs-string">started</span><br><br>[<span class="hljs-string">root@KVM</span> <span class="hljs-string">~</span>]<span class="hljs-comment"># virsh dominfo Centos7</span><br><span class="hljs-attr">Id:</span>             <span class="hljs-number">1</span><br><span class="hljs-attr">Name:</span>           <span class="hljs-string">Centos7</span><br><span class="hljs-attr">UUID:</span>           <span class="hljs-string">735f1ca1-c82a-4734-81ec-ea3e82e98bae</span><br><span class="hljs-attr">OS Type:</span>        <span class="hljs-string">hvm</span><br><span class="hljs-attr">State:</span>          <span class="hljs-string">running</span><br><span class="hljs-string">CPU(s):</span>         <span class="hljs-number">2</span><br><span class="hljs-attr">CPU time:</span>       <span class="hljs-number">13.</span><span class="hljs-string">4s</span><br><span class="hljs-attr">Max memory:</span>     <span class="hljs-number">2097152</span> <span class="hljs-string">KiB</span><br><span class="hljs-attr">Used memory:</span>    <span class="hljs-number">2097152</span> <span class="hljs-string">KiB</span><br><span class="hljs-attr">Persistent:</span>     <span class="hljs-literal">yes</span><br><span class="hljs-attr">Autostart:</span>      <span class="hljs-string">enable</span><br><span class="hljs-attr">Managed save:</span>   <span class="hljs-literal">no</span><br><span class="hljs-attr">Security model:</span> <span class="hljs-string">selinux</span><br><span class="hljs-attr">Security DOI:</span>   <span class="hljs-number">0</span><br><span class="hljs-attr">Security label:</span> <span class="hljs-string">system_u:system_r:svirt_t:s0:c414,c924</span> <span class="hljs-string">(enforcing)</span><br><br>[<span class="hljs-string">root@KVM</span> <span class="hljs-string">~</span>]<span class="hljs-comment">#</span><br></code></pre></td></tr></table></figure><h2 id="维护虚拟机"><a href="#维护虚拟机" class="headerlink" title="维护虚拟机"></a>维护虚拟机</h2><h3 id="挂起-x2F-恢复虚拟机"><a href="#挂起-x2F-恢复虚拟机" class="headerlink" title="挂起&#x2F;恢复虚拟机"></a>挂起&#x2F;恢复虚拟机</h3><figure class="highlight asciidoc"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><code class="hljs asciidoc">[root@KVM ~]# virsh suspend Centos7<br>Domain <span class="hljs-emphasis">&#x27;Centos7&#x27;</span> suspended<br>[root@KVM ~]# virsh list --all<br><span class="hljs-section"> Id   Name      State</span><br><span class="hljs-section">------------------------</span><br><span class="hljs-code"> 1    Centos7   paused</span><br>[root@KVM ~]# virsh resume Centos7<br>Domain <span class="hljs-emphasis">&#x27;Centos7&#x27;</span> resumed<br><br>[root@KVM ~]# virsh list --all<br><span class="hljs-section"> Id   Name      State</span><br><span class="hljs-section">-------------------------</span><br><span class="hljs-code"> 1    Centos7   running</span><br></code></pre></td></tr></table></figure><h3 id="克隆KVM虚拟机"><a href="#克隆KVM虚拟机" class="headerlink" title="克隆KVM虚拟机"></a>克隆KVM虚拟机</h3><h4 id="关闭Centos7-并且克隆Centos7为C7"><a href="#关闭Centos7-并且克隆Centos7为C7" class="headerlink" title="关闭Centos7 并且克隆Centos7为C7"></a>关闭Centos7 并且克隆Centos7为C7</h4><figure class="highlight asciidoc"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><code class="hljs asciidoc">[root@KVM ~]# virsh shutdown Centos7<br>Domain <span class="hljs-emphasis">&#x27;Centos7&#x27;</span> is being shutdown<br><br>[root@KVM ~]# virsh list --all<br><span class="hljs-section"> Id   Name      State</span><br><span class="hljs-section">--------------------------</span><br><span class="hljs-code"> -    Centos7   shut off</span><br><br>[root@KVM ~]# virt-clone -o Centos7 -n C7 -f /opt/disk/C7.qcow2<br>Allocating <span class="hljs-emphasis">&#x27;C7.qcow2&#x27;</span>                                                      |  10 GB  00:00:37<br><br>Clone <span class="hljs-emphasis">&#x27;C7&#x27;</span> created successfully.<br>克隆成功<br>[root@KVM ~]# virsh list --all<br><span class="hljs-section"> Id   Name      State</span><br><span class="hljs-section">--------------------------</span><br><span class="hljs-code"> -    C7        shut off</span><br><span class="hljs-code"> -    Centos7   shut off</span><br></code></pre></td></tr></table></figure><h4 id="开启C7，登入并且修改主机名为C7"><a href="#开启C7，登入并且修改主机名为C7" class="headerlink" title="开启C7，登入并且修改主机名为C7"></a>开启C7，登入并且修改主机名为C7</h4><figure class="highlight livescript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><code class="hljs livescript">[root@KVM ~]<span class="hljs-comment"># virsh start C7</span><br>Domain <span class="hljs-string">&#x27;C7&#x27;</span> started<br><br>[root@KVM ~]<span class="hljs-comment"># virsh console C7</span><br>Connected <span class="hljs-keyword">to</span> domain <span class="hljs-string">&#x27;C7&#x27;</span><br>Escape character <span class="hljs-keyword">is</span> ^] (Ctrl + ])<br>CentOS Linux <span class="hljs-number">7</span> (Core)<br>Kernel <span class="hljs-number">3.10</span>.<span class="hljs-number">0</span>-<span class="hljs-number">1160.el</span>7.x86_64 <span class="hljs-literal">on</span> an x86_64<br><br>centos7 login: root<br>Password:<br>Last login: Mon Jan  <span class="hljs-number">9</span> <span class="hljs-number">15</span>:<span class="hljs-number">56</span>:<span class="hljs-number">16</span> <span class="hljs-keyword">from</span> <span class="hljs-number">192.168</span>.<span class="hljs-number">48.250</span><br>[root@centos7 ~]<span class="hljs-comment"># hostnamectl set-hostname C7 &amp;&amp; bash</span><br>[root@c7 ~]<span class="hljs-comment">#</span><br>克隆后ip回合Centos7一样，记得后期修改<br></code></pre></td></tr></table></figure><h3 id="设置Kvm虚拟机快照"><a href="#设置Kvm虚拟机快照" class="headerlink" title="设置Kvm虚拟机快照"></a>设置Kvm虚拟机快照</h3><h4 id="登入C7-创建-x2F-opt-x2F-dev-，关闭虚拟机，创建快照"><a href="#登入C7-创建-x2F-opt-x2F-dev-，关闭虚拟机，创建快照" class="headerlink" title="登入C7 创建&#x2F;opt&#x2F;dev ，关闭虚拟机，创建快照"></a>登入C7 创建&#x2F;opt&#x2F;dev ，关闭虚拟机，创建快照</h4><figure class="highlight autoit"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><code class="hljs autoit">[root<span class="hljs-symbol">@c7</span> ~]<span class="hljs-meta"># mkdir /opt/dev</span><br>[root<span class="hljs-symbol">@c7</span> ~]<span class="hljs-meta"># ls /opt</span><br>dev<br>按ctrl + ] 退回到KVM宿主机<br>[root<span class="hljs-symbol">@KVM</span> ~]<span class="hljs-meta"># virsh shutdown C7</span><br>Domain <span class="hljs-string">&#x27;C7&#x27;</span> is being <span class="hljs-built_in">shutdown</span><br>创建快照<br>[root<span class="hljs-symbol">@KVM</span> ~]<span class="hljs-meta"># virsh snapshot-create C7</span><br>Domain snapshot <span class="hljs-number">1673252946</span> created<br>查看C7的快照列表<br>[root<span class="hljs-symbol">@KVM</span> ~]<span class="hljs-meta"># virsh snapshot-list C7</span><br> Name         Creation Time               State<br>---------------------------------------------------<br> <span class="hljs-number">1673252946</span>   <span class="hljs-number">2023</span><span class="hljs-number">-01</span><span class="hljs-number">-09</span> <span class="hljs-number">03</span>:<span class="hljs-number">29</span>:<span class="hljs-number">06</span> <span class="hljs-number">-0500</span>   shutoff<br></code></pre></td></tr></table></figure><h4 id="开启C7-删除-x2F-opt-x2F-dev-，恢复快照"><a href="#开启C7-删除-x2F-opt-x2F-dev-，恢复快照" class="headerlink" title="开启C7 删除&#x2F;opt&#x2F;dev ，恢复快照"></a>开启C7 删除&#x2F;opt&#x2F;dev ，恢复快照</h4><figure class="highlight autoit"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><code class="hljs autoit">[root<span class="hljs-symbol">@KVM</span> ~]<span class="hljs-meta"># virsh start C7</span><br>Domain <span class="hljs-string">&#x27;C7&#x27;</span> started<br><br>[root<span class="hljs-symbol">@KVM</span> ~]<span class="hljs-meta"># virsh console C7</span><br>Connected <span class="hljs-keyword">to</span> domain <span class="hljs-string">&#x27;C7&#x27;</span><br><br>[root<span class="hljs-symbol">@c7</span> ~]<span class="hljs-meta"># rm -rf /opt/dev</span><br>[root<span class="hljs-symbol">@c7</span> ~]<span class="hljs-meta"># ll /opt</span><br>total <span class="hljs-number">0</span><br>按ctrl + ] 退回到KVM宿主机<br>[root<span class="hljs-symbol">@KVM</span> ~]<span class="hljs-meta"># virsh snapshot-list C7</span><br> Name         Creation Time               State<br>---------------------------------------------------<br> <span class="hljs-number">1673252946</span>   <span class="hljs-number">2023</span><span class="hljs-number">-01</span><span class="hljs-number">-09</span> <span class="hljs-number">03</span>:<span class="hljs-number">29</span>:<span class="hljs-number">06</span> <span class="hljs-number">-0500</span>   shutoff<br><br>[root<span class="hljs-symbol">@KVM</span> ~]<span class="hljs-meta"># virsh snapshot-revert C7 1673252946</span><br>virsh snapshot-revert 虚拟机名字 快照名字 <br></code></pre></td></tr></table></figure><h4 id="开启C7-查看是否恢复成功"><a href="#开启C7-查看是否恢复成功" class="headerlink" title="开启C7,查看是否恢复成功"></a>开启C7,查看是否恢复成功</h4><figure class="highlight livescript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><code class="hljs livescript">[root@KVM ~]<span class="hljs-comment"># virsh start C7</span><br>Domain <span class="hljs-string">&#x27;C7&#x27;</span> started<br><br>[root@KVM ~]<span class="hljs-comment"># virsh console C7</span><br>Connected <span class="hljs-keyword">to</span> domain <span class="hljs-string">&#x27;C7&#x27;</span><br>Escape character <span class="hljs-keyword">is</span> ^] (Ctrl + ])<br><br>CentOS Linux <span class="hljs-number">7</span> (Core)<br>Kernel <span class="hljs-number">3.10</span>.<span class="hljs-number">0</span>-<span class="hljs-number">1160.el</span>7.x86_64 <span class="hljs-literal">on</span> an x86_64<br><br>c7 login: root<br>Password:<br>Last login: Mon Jan  <span class="hljs-number">9</span> <span class="hljs-number">16</span>:<span class="hljs-number">27</span>:<span class="hljs-number">07</span> <span class="hljs-literal">on</span> ttyS0<br>[root@c7 ~]<span class="hljs-comment"># ls /opt</span><br>dev<br></code></pre></td></tr></table></figure><h2 id="virsh-命令"><a href="#virsh-命令" class="headerlink" title="virsh 命令"></a>virsh 命令</h2><figure class="highlight jboss-cli"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><code class="hljs jboss-cli">virsh <span class="hljs-keyword">shutdown</span> 关闭KVM虚拟机 <br>virsh destroy 强制关闭KVM虚拟机，不删除虚拟机磁盘，virsh list列表里面看不见，但是磁盘还在，还是可以启动，通过virsh list <span class="hljs-params">--all</span>可以查看<br>virsh undefine 彻底删除虚拟机，包括虚拟机存储所在的位置<br>virsh start 开启KVM虚拟机<br>virsh suspend 虚拟机名称 <span class="hljs-comment">#挂起</span><br>virsh resume 虚拟机名称 <span class="hljs-comment">#恢复被挂起的</span><br></code></pre></td></tr></table></figure><div class="tbsm" style="margin-top:54px;"><div class="tbsm-top"><span><svg t="1674654360507" class="icon" viewBox="0 0 1024 1024" version="1.1" xmlns="http://www.w3.org/2000/svg" p-id="987" data-spm-anchor-id="a313x.7781069.0.i0" width="35" height="35"><path d="M410.49 97.74H155.08a56.74 56.74 0 0 0-56.84 56.73V410a56.84 56.84 0 0 0 56.84 56.84h255.41A56.83 56.83 0 0 0 467.32 410V154.58a56.83 56.83 0 0 0-56.83-56.84zM410.49 558.74H155.08a56.74 56.74 0 0 0-56.84 56.73V871a56.84 56.84 0 0 0 56.84 56.84h255.41A56.83 56.83 0 0 0 467.32 871V615.58a56.83 56.83 0 0 0-56.83-56.84zM871.49 558.74H616.08a56.74 56.74 0 0 0-56.84 56.73V871a56.84 56.84 0 0 0 56.84 56.84h255.41A56.83 56.83 0 0 0 928.32 871V615.58a56.83 56.83 0 0 0-56.83-56.84z" fill="#66EEFF" p-id="988"></path><path d="M410.49 558.74h-4.14A475 475 0 0 0 299.52 859.6a481.16 481.16 0 0 0 4.84 68.22h106.13A56.83 56.83 0 0 0 467.32 871V615.58a56.83 56.83 0 0 0-56.83-56.84zM871.49 558.74H616.08a56.74 56.74 0 0 0-56.84 56.73V871a56.84 56.84 0 0 0 56.84 56.84h255.41A56.83 56.83 0 0 0 928.32 871V615.58a56.83 56.83 0 0 0-56.83-56.84z" fill="#C2F8FF" p-id="989"></path></svg></span><span style="font-size:30px;"> 特别声明</span></div><div class="tbsm-wz">千屹博客旗下的所有文章，是通过本人课堂学习和课外自学所精心整理的知识巨著<br/>难免会有出错的地方<br/>如果细心的你发现了小失误，可以在下方评论区告诉我，或者私信我！<br />非常感谢大家的热烈支持！</div></div>]]></content>
    
    
    
    <tags>
      
      <tag>Centos 8 stream</tag>
      
      <tag>KVM</tag>
      
    </tags>
    
  </entry>
  
  
  
  
</search>
